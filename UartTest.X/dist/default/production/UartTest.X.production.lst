

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Nov 21 04:46:51 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18LF6622
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18LF6622 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     _TXREG1	set	4013
    87  0000                     _RCREG1	set	4014
    88  0000                     _RCSTA1	set	4011
    89  0000                     _TXSTA1	set	4012
    90  0000                     _SPBRG1	set	4015
    91  0000                     _PIR1bits	set	3998
    92  0000                     _PIE1bits	set	3997
    93  0000                     _INTCONbits	set	4082
    94  0000                     _PORTE	set	3972
    95  0000                     _TRISE	set	3990
    96  0000                     _TRMT1	set	32097
    97  0000                     _CREN1	set	32092
    98  0000                     _OERR1	set	32089
    99  0000                     _RCIF	set	31989
   100                           
   101                           	psect	smallconst
   102  001000                     __psmallconst:
   103                           	callstack 0
   104  001000  00                 	db	0
   105  001001                     STR_3:
   106  001001  27                 	db	39
   107  001002  20                 	db	32
   108  001003  49                 	db	73	;'I'
   109  001004  20                 	db	32
   110  001005  68                 	db	104	;'h'
   111  001006  6F                 	db	111	;'o'
   112  001007  70                 	db	112	;'p'
   113  001008  65                 	db	101	;'e'
   114  001009  20                 	db	32
   115  00100A  79                 	db	121	;'y'
   116  00100B  6F                 	db	111	;'o'
   117  00100C  75                 	db	117	;'u'
   118  00100D  20                 	db	32
   119  00100E  6C                 	db	108	;'l'
   120  00100F  69                 	db	105	;'i'
   121  001010  6B                 	db	107	;'k'
   122  001011  65                 	db	101	;'e'
   123  001012  20                 	db	32
   124  001013  74                 	db	116	;'t'
   125  001014  68                 	db	104	;'h'
   126  001015  69                 	db	105	;'i'
   127  001016  73                 	db	115	;'s'
   128  001017  20                 	db	32
   129  001018  6F                 	db	111	;'o'
   130  001019  6E                 	db	110	;'n'
   131  00101A  65                 	db	101	;'e'
   132  00101B  3A                 	db	58	;':'
   133  00101C  00                 	db	0
   134  00101D                     STR_1:
   135  00101D  65                 	db	101	;'e'
   136  00101E  20                 	db	32
   137  00101F  62                 	db	98	;'b'
   138  001020  75                 	db	117	;'u'
   139  001021  6E                 	db	110	;'n'
   140  001022  67                 	db	103	;'g'
   141  001023  75                 	db	117	;'u'
   142  001024  20                 	db	32
   143  001025  63                 	db	99	;'c'
   144  001026  68                 	db	104	;'h'
   145  001027  75                 	db	117	;'u'
   146  001028  6E                 	db	110	;'n'
   147  001029  67                 	db	103	;'g'
   148  00102A  75                 	db	117	;'u'
   149  00102B  20                 	db	32
   150  00102C  6A                 	db	106	;'j'
   151  00102D  75                 	db	117	;'u'
   152  00102E  65                 	db	101	;'e'
   153  00102F  6E                 	db	110	;'n'
   154  001030  67                 	db	103	;'g'
   155  001031  65                 	db	101	;'e'
   156  001032  20                 	db	32
   157  001033  68                 	db	104	;'h'
   158  001034  65                 	db	101	;'e'
   159  001035  00                 	db	0
   160  001036                     STR_2:
   161  001036  67                 	db	103	;'g'
   162  001037  6F                 	db	111	;'o'
   163  001038  74                 	db	116	;'t'
   164  001039  20                 	db	32
   165  00103A  63                 	db	99	;'c'
   166  00103B  68                 	db	104	;'h'
   167  00103C  61                 	db	97	;'a'
   168  00103D  72                 	db	114	;'r'
   169  00103E  61                 	db	97	;'a'
   170  00103F  63                 	db	99	;'c'
   171  001040  74                 	db	116	;'t'
   172  001041  65                 	db	101	;'e'
   173  001042  72                 	db	114	;'r'
   174  001043  3A                 	db	58	;':'
   175  001044  20                 	db	32
   176  001045  27                 	db	39
   177  001046  00                 	db	0
   178  001047  00                 	db	0	; dummy byte at the end
   179  0000                     
   180                           ; #config settings
   181                           
   182                           	psect	cinit
   183  003122                     __pcinit:
   184                           	callstack 0
   185  003122                     start_initialization:
   186                           	callstack 0
   187  003122                     __initialization:
   188                           	callstack 0
   189                           
   190                           ; Clear objects allocated to BANK0 (64 bytes)
   191  003122  EE00  F060         	lfsr	0,__pbssBANK0
   192  003126  0E40               	movlw	64
   193  003128                     clear_0:
   194  003128  6AEE               	clrf	postinc0,c
   195  00312A  06E8               	decf	wreg,f,c
   196  00312C  E1FD               	bnz	clear_0
   197                           
   198                           ; Clear objects allocated to COMRAM (27 bytes)
   199  00312E  EE00  F034         	lfsr	0,__pbssCOMRAM
   200  003132  0E1B               	movlw	27
   201  003134                     clear_1:
   202  003134  6AEE               	clrf	postinc0,c
   203  003136  06E8               	decf	wreg,f,c
   204  003138  E1FD               	bnz	clear_1
   205  00313A                     end_of_initialization:
   206                           	callstack 0
   207  00313A                     __end_of__initialization:
   208                           	callstack 0
   209  00313A  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   210  00313C  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   211  00313E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   212  003140  6EF8               	movwf	tblptru,c
   213  003142  0E10               	movlw	high __Lsmallconst
   214  003144  6EF7               	movwf	tblptrh,c
   215  003146  0100               	movlb	0
   216  003148  EF70  F010         	goto	_main	;jump to C main() function
   217                           
   218                           	psect	bssCOMRAM
   219  000034                     __pbssCOMRAM:
   220                           	callstack 0
   221  000034                     _sending:
   222                           	callstack 0
   223  000034                     	ds	1
   224  000035                     _rxBufferMemory:
   225                           	callstack 0
   226  000035                     	ds	16
   227  000045                     _txBuffer:
   228                           	callstack 0
   229  000045                     	ds	5
   230  00004A                     _rxBuffer:
   231                           	callstack 0
   232  00004A                     	ds	5
   233                           
   234                           	psect	bssBANK0
   235  000060                     __pbssBANK0:
   236                           	callstack 0
   237  000060                     _txBufferMemory:
   238                           	callstack 0
   239  000060                     	ds	64
   240                           
   241                           	psect	cstackBANK0
   242  0000A0                     __pcstackBANK0:
   243                           	callstack 0
   244  0000A0                     _uart_printInt32$1047:
   245                           	callstack 0
   246                           
   247                           ; 4 bytes @ 0x0
   248  0000A0                     	ds	4
   249  0000A4                     uart_printInt32@modulor:
   250                           	callstack 0
   251                           
   252                           ; 4 bytes @ 0x4
   253  0000A4                     	ds	4
   254  0000A8                     uart_printFloat@a:
   255                           	callstack 0
   256                           
   257                           ; 4 bytes @ 0x8
   258  0000A8                     	ds	4
   259  0000AC                     uart_printFloat@digitsAfterComma:
   260                           	callstack 0
   261                           
   262                           ; 1 bytes @ 0xC
   263  0000AC                     	ds	1
   264  0000AD                     main@rxChar:
   265                           	callstack 0
   266                           
   267                           ; 1 bytes @ 0xD
   268  0000AD                     	ds	1
   269                           
   270                           	psect	cstackCOMRAM
   271  000001                     __pcstackCOMRAM:
   272                           	callstack 0
   273  000001                     circularBuffer_isEmpty@theCircularBuffer:
   274                           	callstack 0
   275  000001                     i2circularBuffer_write@theCircularBuffer:
   276                           	callstack 0
   277  000001                     i2circularBuffer_read@theCircularBuffer:
   278                           	callstack 0
   279  000001                     i2circularBuffer_isFull@theCircularBuffer:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x0
   283  000001                     	ds	2
   284  000003                     ??i2_circularBuffer_isFull:
   285  000003                     i2circularBuffer_write@toWrite:
   286                           	callstack 0
   287  000003                     i2circularBuffer_read@toRead:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x2
   291  000003                     	ds	1
   292  000004                     ??i2_circularBuffer_write:
   293                           
   294                           ; 1 bytes @ 0x3
   295  000004                     	ds	1
   296  000005                     ??i2_circularBuffer_read:
   297  000005                     circularBuffer_isEmpty@gieSet:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0x4
   301  000005                     	ds	3
   302  000008                     i2circularBuffer_read@gieSet:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0x7
   306  000008                     	ds	1
   307  000009                     i2circularBuffer_isFull@gieSet:
   308                           	callstack 0
   309                           
   310                           ; 1 bytes @ 0x8
   311  000009                     	ds	1
   312  00000A                     i2circularBuffer_write@gieSet:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0x9
   316  00000A                     	ds	1
   317  00000B                     i2uart_putc@a:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0xA
   321  00000B                     	ds	1
   322  00000C                     uart_txInterrupt@txChar:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0xB
   326  00000C                     	ds	1
   327  00000D                     ??_theInterrupt:
   328                           
   329                           ; 1 bytes @ 0xC
   330  00000D                     	ds	4
   331  000011                     ?___awmod:
   332                           	callstack 0
   333  000011                     ?___fladd:
   334                           	callstack 0
   335  000011                     ?___flmul:
   336                           	callstack 0
   337  000011                     ?___lmul:
   338                           	callstack 0
   339  000011                     ?___lldiv:
   340                           	callstack 0
   341  000011                     ?___almod:
   342                           	callstack 0
   343  000011                     ?___fltol:
   344                           	callstack 0
   345  000011                     circularBuffer_init@theCircularBuffer:
   346                           	callstack 0
   347  000011                     circularBuffer_write@theCircularBuffer:
   348                           	callstack 0
   349  000011                     circularBuffer_read@theCircularBuffer:
   350                           	callstack 0
   351  000011                     circularBuffer_isFull@theCircularBuffer:
   352                           	callstack 0
   353  000011                     ___awmod@dividend:
   354                           	callstack 0
   355  000011                     ___lmul@multiplier:
   356                           	callstack 0
   357  000011                     ___lldiv@dividend:
   358                           	callstack 0
   359  000011                     ___almod@dividend:
   360                           	callstack 0
   361  000011                     ___fltol@f1:
   362                           	callstack 0
   363  000011                     ___fladd@b:
   364                           	callstack 0
   365  000011                     ___flmul@b:
   366                           	callstack 0
   367                           
   368                           ; 4 bytes @ 0x10
   369  000011                     	ds	2
   370  000013                     ??_circularBuffer_isFull:
   371  000013                     circularBuffer_write@toWrite:
   372                           	callstack 0
   373  000013                     circularBuffer_init@theBuffer:
   374                           	callstack 0
   375  000013                     circularBuffer_read@toRead:
   376                           	callstack 0
   377  000013                     ___awmod@divisor:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x12
   381  000013                     	ds	1
   382  000014                     ??_circularBuffer_write:
   383                           
   384                           ; 1 bytes @ 0x13
   385  000014                     	ds	1
   386  000015                     ??_circularBuffer_read:
   387  000015                     ??___fltol:
   388  000015                     circularBuffer_init@size:
   389                           	callstack 0
   390  000015                     ___awmod@counter:
   391                           	callstack 0
   392  000015                     ___lmul@multiplicand:
   393                           	callstack 0
   394  000015                     ___lldiv@divisor:
   395                           	callstack 0
   396  000015                     ___almod@divisor:
   397                           	callstack 0
   398  000015                     ___fladd@a:
   399                           	callstack 0
   400  000015                     ___flmul@a:
   401                           	callstack 0
   402                           
   403                           ; 4 bytes @ 0x14
   404  000015                     	ds	1
   405  000016                     ___awmod@sign:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0x15
   409  000016                     	ds	1
   410  000017                     ?___awdiv:
   411                           	callstack 0
   412  000017                     ___awdiv@dividend:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x16
   416  000017                     	ds	1
   417  000018                     circularBuffer_read@gieSet:
   418                           	callstack 0
   419                           
   420                           ; 1 bytes @ 0x17
   421  000018                     	ds	1
   422  000019                     ??___fladd:
   423  000019                     ??___flmul:
   424  000019                     circularBuffer_isFull@gieSet:
   425                           	callstack 0
   426  000019                     ___almod@counter:
   427                           	callstack 0
   428  000019                     ___fltol@sign1:
   429                           	callstack 0
   430  000019                     uart_testAndGetc@c:
   431                           	callstack 0
   432  000019                     ___awdiv@divisor:
   433                           	callstack 0
   434  000019                     ___lmul@product:
   435                           	callstack 0
   436  000019                     ___lldiv@quotient:
   437                           	callstack 0
   438                           
   439                           ; 4 bytes @ 0x18
   440  000019                     	ds	1
   441  00001A                     circularBuffer_write@gieSet:
   442                           	callstack 0
   443  00001A                     ___almod@sign:
   444                           	callstack 0
   445  00001A                     ___fltol@exp1:
   446                           	callstack 0
   447                           
   448                           ; 1 bytes @ 0x19
   449  00001A                     	ds	1
   450  00001B                     ?___aldiv:
   451                           	callstack 0
   452  00001B                     ?___xxtofl:
   453                           	callstack 0
   454  00001B                     uart_putc@a:
   455                           	callstack 0
   456  00001B                     ___awdiv@counter:
   457                           	callstack 0
   458  00001B                     ___aldiv@dividend:
   459                           	callstack 0
   460  00001B                     ___xxtofl@val:
   461                           	callstack 0
   462                           
   463                           ; 4 bytes @ 0x1A
   464  00001B                     	ds	1
   465  00001C                     ??_uart_printByteBinary:
   466  00001C                     ??_uart_printByteHex:
   467  00001C                     ___awdiv@sign:
   468                           	callstack 0
   469  00001C                     uart_print@a:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x1B
   473  00001C                     	ds	1
   474  00001D                     uart_printByteHex@a:
   475                           	callstack 0
   476  00001D                     ___lldiv@counter:
   477                           	callstack 0
   478  00001D                     ___fladd@signs:
   479                           	callstack 0
   480  00001D                     ___flmul@sign:
   481                           	callstack 0
   482  00001D                     ___awdiv@quotient:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x1C
   486  00001D                     	ds	1
   487  00001E                     ??_uart_print:
   488  00001E                     uart_printByteBinary@a:
   489                           	callstack 0
   490  00001E                     ___fladd@aexp:
   491                           	callstack 0
   492  00001E                     ___flmul@aexp:
   493                           	callstack 0
   494  00001E                     uart_init@baudrate:
   495                           	callstack 0
   496                           
   497                           ; 4 bytes @ 0x1D
   498  00001E                     	ds	1
   499  00001F                     ??___xxtofl:
   500  00001F                     uart_printUint8@a:
   501                           	callstack 0
   502  00001F                     uart_printByteBinary@i:
   503                           	callstack 0
   504  00001F                     ___fladd@bexp:
   505                           	callstack 0
   506  00001F                     ___aldiv@divisor:
   507                           	callstack 0
   508  00001F                     ___flmul@grs:
   509                           	callstack 0
   510                           
   511                           ; 4 bytes @ 0x1E
   512  00001F                     	ds	1
   513  000020                     uart_print@i:
   514                           	callstack 0
   515  000020                     uart_printUint8@divisor:
   516                           	callstack 0
   517  000020                     ___fladd@grs:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x1F
   521  000020                     	ds	1
   522  000021                     uart_println@a:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x20
   526  000021                     	ds	1
   527  000022                     ??_uart_init:
   528                           
   529                           ; 1 bytes @ 0x21
   530  000022                     	ds	1
   531  000023                     ___aldiv@counter:
   532                           	callstack 0
   533  000023                     ___flmul@bexp:
   534                           	callstack 0
   535  000023                     ___xxtofl@sign:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x22
   539  000023                     	ds	1
   540  000024                     ___aldiv@sign:
   541                           	callstack 0
   542  000024                     ___xxtofl@exp:
   543                           	callstack 0
   544  000024                     ___flmul@prod:
   545                           	callstack 0
   546                           
   547                           ; 4 bytes @ 0x23
   548  000024                     	ds	1
   549  000025                     ___aldiv@quotient:
   550                           	callstack 0
   551  000025                     ___xxtofl@arg:
   552                           	callstack 0
   553                           
   554                           ; 4 bytes @ 0x24
   555  000025                     	ds	1
   556  000026                     uart_init@a:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x25
   560  000026                     	ds	2
   561  000028                     ___flmul@temp:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x27
   565  000028                     	ds	1
   566  000029                     ?___flsub:
   567                           	callstack 0
   568  000029                     uart_printInt32@a:
   569                           	callstack 0
   570  000029                     ___flsub@b:
   571                           	callstack 0
   572                           
   573                           ; 4 bytes @ 0x28
   574  000029                     	ds	4
   575  00002D                     ??_uart_printInt32:
   576  00002D                     ___flsub@a:
   577                           	callstack 0
   578                           
   579                           ; 4 bytes @ 0x2C
   580  00002D                     	ds	4
   581  000031                     ??_uart_printFloat:
   582  000031                     
   583                           ; 1 bytes @ 0x30
   584  000031                     	ds	1
   585  000032                     uart_printFloat@d:
   586                           	callstack 0
   587                           
   588                           ; 1 bytes @ 0x31
   589  000032                     	ds	1
   590  000033                     uart_printFloat@i:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0x32
   594  000033                     	ds	1
   595  000034                     
   596                           ; 1 bytes @ 0x33
   597 ;;
   598 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   599 ;;
   600 ;; *************** function _main *****************
   601 ;; Defined at:
   602 ;;		line 16 in file "main.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  rxChar          1   13[BANK0 ] unsigned char 
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   620 ;;Total ram usage:        1 bytes
   621 ;; Hardware stack levels required when called:    8
   622 ;; This function calls:
   623 ;;		_uart_init
   624 ;;		_uart_print
   625 ;;		_uart_printByteBinary
   626 ;;		_uart_printByteHex
   627 ;;		_uart_printFloat
   628 ;;		_uart_printInt32
   629 ;;		_uart_printUint8
   630 ;;		_uart_println
   631 ;;		_uart_putc
   632 ;;		_uart_testAndGetc
   633 ;; This function is called by:
   634 ;;		Startup code after reset
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           	psect	text0
   639  0020E0                     __ptext0:
   640                           	callstack 0
   641  0020E0                     _main:
   642                           	callstack 23
   643  0020E0                     
   644                           ;main.c: 17:     uint8_t rxChar;;main.c: 19:     uart_init(19200);
   645  0020E0  0E00               	movlw	0
   646  0020E2  6E1E               	movwf	uart_init@baudrate^0,c
   647  0020E4  0E4B               	movlw	75
   648  0020E6  6E1F               	movwf	(uart_init@baudrate+1)^0,c
   649  0020E8  0E00               	movlw	0
   650  0020EA  6E20               	movwf	(uart_init@baudrate+2)^0,c
   651  0020EC  0E00               	movlw	0
   652  0020EE  6E21               	movwf	(uart_init@baudrate+3)^0,c
   653  0020F0  EC19  F011         	call	_uart_init	;wreg free
   654  0020F4                     
   655                           ;main.c: 23:     TRISE &= ~(1<<1);
   656  0020F4  9296               	bcf	150,1,c	;volatile
   657  0020F6                     
   658                           ;main.c: 25:     PORTE &= ~(1<<1);
   659  0020F6  9284               	bcf	132,1,c	;volatile
   660  0020F8                     
   661                           ;main.c: 28:     INTCONbits.PEIE = 1;
   662  0020F8  8CF2               	bsf	242,6,c	;volatile
   663  0020FA                     
   664                           ;main.c: 29:     INTCONbits.GIE = 1;
   665  0020FA  8EF2               	bsf	242,7,c	;volatile
   666  0020FC                     l4078:
   667                           
   668                           ;main.c: 32:     {;main.c: 33:         if(uart_testAndGetc(&rxChar))
   669  0020FC  0EAD               	movlw	low main@rxChar
   670  0020FE  6E19               	movwf	uart_testAndGetc@c^0,c
   671  002100  0E00               	movlw	high main@rxChar
   672  002102  6E1A               	movwf	(uart_testAndGetc@c+1)^0,c
   673  002104  ECA6  F018         	call	_uart_testAndGetc	;wreg free
   674  002108  0900               	iorlw	0
   675  00210A  B4D8               	btfsc	status,2,c
   676  00210C  EF8A  F010         	goto	u5111
   677  002110  EF8C  F010         	goto	u5110
   678  002114                     u5111:
   679  002114  EF7E  F010         	goto	l4078
   680  002118                     u5110:
   681  002118                     
   682                           ;main.c: 34:         {;main.c: 35:             uart_println("e bungu chungu juenge he");
   683  002118  0E1D               	movlw	low STR_1
   684  00211A  6E21               	movwf	uart_println@a^0,c
   685  00211C  0E10               	movlw	high STR_1
   686  00211E  6E22               	movwf	(uart_println@a+1)^0,c
   687  002120  ECB1  F018         	call	_uart_println	;wreg free
   688                           
   689                           ;main.c: 36:             uart_print("got character: '");
   690  002124  0E36               	movlw	low STR_2
   691  002126  6E1C               	movwf	uart_print@a^0,c
   692  002128  0E10               	movlw	high STR_2
   693  00212A  6E1D               	movwf	(uart_print@a+1)^0,c
   694  00212C  EC04  F018         	call	_uart_print	;wreg free
   695  002130                     
   696                           ;main.c: 37:             uart_putc(rxChar);
   697  002130  0100               	movlb	0	; () banked
   698  002132  51AD               	movf	main@rxChar& (0+255),w,b
   699  002134  ECA8  F017         	call	_uart_putc
   700  002138                     
   701                           ;main.c: 38:             uart_println("' I hope you like this one:");
   702  002138  0E01               	movlw	low STR_3
   703  00213A  6E21               	movwf	uart_println@a^0,c
   704  00213C  0E10               	movlw	high STR_3
   705  00213E  6E22               	movwf	(uart_println@a+1)^0,c
   706  002140  ECB1  F018         	call	_uart_println	;wreg free
   707  002144                     
   708                           ;main.c: 39:             uart_printUint8(1);
   709  002144  0E01               	movlw	1
   710  002146  EC56  F015         	call	_uart_printUint8
   711  00214A                     
   712                           ;main.c: 40:             uart_println("");
   713  00214A  0E46               	movlw	low (STR_2+16)
   714  00214C  6E21               	movwf	uart_println@a^0,c
   715  00214E  0E10               	movlw	high (STR_2+16)
   716  002150  6E22               	movwf	(uart_println@a+1)^0,c
   717  002152  ECB1  F018         	call	_uart_println	;wreg free
   718  002156                     
   719                           ;main.c: 41:             uart_printUint8(12);
   720  002156  0E0C               	movlw	12
   721  002158  EC56  F015         	call	_uart_printUint8
   722  00215C                     
   723                           ;main.c: 42:             uart_println("");
   724  00215C  0E46               	movlw	low (STR_2+16)
   725  00215E  6E21               	movwf	uart_println@a^0,c
   726  002160  0E10               	movlw	high (STR_2+16)
   727  002162  6E22               	movwf	(uart_println@a+1)^0,c
   728  002164  ECB1  F018         	call	_uart_println	;wreg free
   729  002168                     
   730                           ;main.c: 43:             uart_printUint8(123);
   731  002168  0E7B               	movlw	123
   732  00216A  EC56  F015         	call	_uart_printUint8
   733  00216E                     
   734                           ;main.c: 44:             uart_println("");
   735  00216E  0E46               	movlw	low (STR_2+16)
   736  002170  6E21               	movwf	uart_println@a^0,c
   737  002172  0E10               	movlw	high (STR_2+16)
   738  002174  6E22               	movwf	(uart_println@a+1)^0,c
   739  002176  ECB1  F018         	call	_uart_println	;wreg free
   740  00217A                     
   741                           ;main.c: 45:             uart_printByteBinary(0x55);
   742  00217A  0E55               	movlw	85
   743  00217C  EC76  F017         	call	_uart_printByteBinary
   744  002180                     
   745                           ;main.c: 46:             uart_println("");
   746  002180  0E46               	movlw	low (STR_2+16)
   747  002182  6E21               	movwf	uart_println@a^0,c
   748  002184  0E10               	movlw	high (STR_2+16)
   749  002186  6E22               	movwf	(uart_println@a+1)^0,c
   750  002188  ECB1  F018         	call	_uart_println	;wreg free
   751  00218C                     
   752                           ;main.c: 47:             uart_printByteHex(255);
   753  00218C  0EFF               	movlw	255
   754  00218E  ECCC  F016         	call	_uart_printByteHex
   755  002192                     
   756                           ;main.c: 48:             uart_println("");
   757  002192  0E46               	movlw	low (STR_2+16)
   758  002194  6E21               	movwf	uart_println@a^0,c
   759  002196  0E10               	movlw	high (STR_2+16)
   760  002198  6E22               	movwf	(uart_println@a+1)^0,c
   761  00219A  ECB1  F018         	call	_uart_println	;wreg free
   762  00219E                     
   763                           ;main.c: 49:             uart_printInt32(-16);
   764  00219E  0EF0               	movlw	240
   765  0021A0  6E29               	movwf	uart_printInt32@a^0,c
   766  0021A2  0EFF               	movlw	255
   767  0021A4  6E2A               	movwf	(uart_printInt32@a+1)^0,c
   768  0021A6  0EFF               	movlw	255
   769  0021A8  6E2B               	movwf	(uart_printInt32@a+2)^0,c
   770  0021AA  0EFF               	movlw	255
   771  0021AC  6E2C               	movwf	(uart_printInt32@a+3)^0,c
   772  0021AE  EC99  F00C         	call	_uart_printInt32	;wreg free
   773  0021B2                     
   774                           ;main.c: 50:             uart_println("");
   775  0021B2  0E46               	movlw	low (STR_2+16)
   776  0021B4  6E21               	movwf	uart_println@a^0,c
   777  0021B6  0E10               	movlw	high (STR_2+16)
   778  0021B8  6E22               	movwf	(uart_println@a+1)^0,c
   779  0021BA  ECB1  F018         	call	_uart_println	;wreg free
   780  0021BE                     
   781                           ;main.c: 51:             uart_printInt32(23232323);
   782  0021BE  0E43               	movlw	67
   783  0021C0  6E29               	movwf	uart_printInt32@a^0,c
   784  0021C2  0E7F               	movlw	127
   785  0021C4  6E2A               	movwf	(uart_printInt32@a+1)^0,c
   786  0021C6  0E62               	movlw	98
   787  0021C8  6E2B               	movwf	(uart_printInt32@a+2)^0,c
   788  0021CA  0E01               	movlw	1
   789  0021CC  6E2C               	movwf	(uart_printInt32@a+3)^0,c
   790  0021CE  EC99  F00C         	call	_uart_printInt32	;wreg free
   791  0021D2                     
   792                           ;main.c: 52:             uart_println("");
   793  0021D2  0E46               	movlw	low (STR_2+16)
   794  0021D4  6E21               	movwf	uart_println@a^0,c
   795  0021D6  0E10               	movlw	high (STR_2+16)
   796  0021D8  6E22               	movwf	(uart_println@a+1)^0,c
   797  0021DA  ECB1  F018         	call	_uart_println	;wreg free
   798  0021DE                     
   799                           ;main.c: 53:             uart_printFloat(12.777, 2);
   800  0021DE  0E98               	movlw	152
   801  0021E0  0100               	movlb	0	; () banked
   802  0021E2  6FA8               	movwf	uart_printFloat@a& (0+255),b
   803  0021E4  0E6E               	movlw	110
   804  0021E6  6FA9               	movwf	(uart_printFloat@a+1)& (0+255),b
   805  0021E8  0E4C               	movlw	76
   806  0021EA  6FAA               	movwf	(uart_printFloat@a+2)& (0+255),b
   807  0021EC  0E41               	movlw	65
   808  0021EE  6FAB               	movwf	(uart_printFloat@a+3)& (0+255),b
   809  0021F0  0E02               	movlw	2
   810  0021F2  6FAC               	movwf	uart_printFloat@digitsAfterComma& (0+255),b
   811  0021F4  ECC3  F00F         	call	_uart_printFloat	;wreg free
   812  0021F8                     
   813                           ;main.c: 54:             uart_println("");
   814  0021F8  0E46               	movlw	low (STR_2+16)
   815  0021FA  6E21               	movwf	uart_println@a^0,c
   816  0021FC  0E10               	movlw	high (STR_2+16)
   817  0021FE  6E22               	movwf	(uart_println@a+1)^0,c
   818  002200  ECB1  F018         	call	_uart_println	;wreg free
   819  002204                     
   820                           ;main.c: 55:             uart_printFloat(-7.2, 5);
   821  002204  0E66               	movlw	102
   822  002206  0100               	movlb	0	; () banked
   823  002208  6FA8               	movwf	uart_printFloat@a& (0+255),b
   824  00220A  0E66               	movlw	102
   825  00220C  6FA9               	movwf	(uart_printFloat@a+1)& (0+255),b
   826  00220E  0EE6               	movlw	230
   827  002210  6FAA               	movwf	(uart_printFloat@a+2)& (0+255),b
   828  002212  0EC0               	movlw	192
   829  002214  6FAB               	movwf	(uart_printFloat@a+3)& (0+255),b
   830  002216  0E05               	movlw	5
   831  002218  6FAC               	movwf	uart_printFloat@digitsAfterComma& (0+255),b
   832  00221A  ECC3  F00F         	call	_uart_printFloat	;wreg free
   833  00221E                     
   834                           ;main.c: 56:             uart_println("");
   835  00221E  0E46               	movlw	low (STR_2+16)
   836  002220  6E21               	movwf	uart_println@a^0,c
   837  002222  0E10               	movlw	high (STR_2+16)
   838  002224  6E22               	movwf	(uart_println@a+1)^0,c
   839  002226  ECB1  F018         	call	_uart_println	;wreg free
   840  00222A  EF7E  F010         	goto	l4078
   841  00222E  EF37  F000         	goto	start
   842  002232                     __end_of_main:
   843                           	callstack 0
   844                           
   845 ;; *************** function _uart_testAndGetc *****************
   846 ;; Defined at:
   847 ;;		line 58 in file "uart.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;  c               2   24[COMRAM] PTR unsigned char 
   850 ;;		 -> main@rxChar(1), 
   851 ;; Auto vars:     Size  Location     Type
   852 ;;		None
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      unsigned char 
   855 ;; Registers used:
   856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   862 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   865 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   866 ;;Total ram usage:        2 bytes
   867 ;; Hardware stack levels used:    1
   868 ;; Hardware stack levels required when called:    5
   869 ;; This function calls:
   870 ;;		_circularBuffer_read
   871 ;; This function is called by:
   872 ;;		_main
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           	psect	text1
   877  00314C                     __ptext1:
   878                           	callstack 0
   879  00314C                     _uart_testAndGetc:
   880                           	callstack 25
   881  00314C                     
   882                           ;uart.c: 58: uint8_t uart_testAndGetc(char* c);uart.c: 59: {;uart.c: 60:     return circ
      +                          ularBuffer_read(&rxBuffer, c);
   883  00314C  0E4A               	movlw	low _rxBuffer
   884  00314E  6E11               	movwf	circularBuffer_read@theCircularBuffer^0,c
   885  003150  0E00               	movlw	high _rxBuffer
   886  003152  6E12               	movwf	(circularBuffer_read@theCircularBuffer+1)^0,c
   887  003154  C019  F013         	movff	uart_testAndGetc@c,circularBuffer_read@toRead
   888  003158  C01A  F014         	movff	uart_testAndGetc@c+1,circularBuffer_read@toRead+1
   889  00315C  ECB7  F011         	call	_circularBuffer_read	;wreg free
   890  003160  0012               	return		;funcret
   891  003162                     __end_of_uart_testAndGetc:
   892                           	callstack 0
   893                           
   894 ;; *************** function _circularBuffer_read *****************
   895 ;; Defined at:
   896 ;;		line 37 in file "circularBuffer.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;  theCircularB    2   16[COMRAM] PTR volatile struct .
   899 ;;		 -> txBuffer(5), rxBuffer(5), 
   900 ;;  toRead          2   18[COMRAM] PTR unsigned char 
   901 ;;		 -> uart_txInterrupt@txChar(1), main@rxChar(1), 
   902 ;; Auto vars:     Size  Location     Type
   903 ;;  gieSet          1   23[COMRAM] unsigned char 
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      unsigned char 
   906 ;; Registers used:
   907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   913 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   914 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   915 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   916 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   917 ;;Total ram usage:        8 bytes
   918 ;; Hardware stack levels used:    1
   919 ;; Hardware stack levels required when called:    4
   920 ;; This function calls:
   921 ;;		Nothing
   922 ;; This function is called by:
   923 ;;		_uart_testAndGetc
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           	psect	text2
   928  00236E                     __ptext2:
   929                           	callstack 0
   930  00236E                     _circularBuffer_read:
   931                           	callstack 25
   932  00236E                     
   933                           ;circularBuffer.c: 37: uint8_t circularBuffer_read(volatile CircularBuffer* theCircularB
      +                          uffer, uint8_t* toRead);circularBuffer.c: 38: {;circularBuffer.c: 39:     uint8_t gieSet
      +                           = 0;
   934  00236E  0E00               	movlw	0
   935  002370  6E18               	movwf	circularBuffer_read@gieSet^0,c
   936  002372                     
   937                           ;circularBuffer.c: 40:     if(INTCONbits.GIE == 1)
   938  002372  AEF2               	btfss	242,7,c	;volatile
   939  002374  EFBE  F011         	goto	u4331
   940  002378  EFC0  F011         	goto	u4330
   941  00237C                     u4331:
   942  00237C  EFC3  F011         	goto	l3564
   943  002380                     u4330:
   944  002380                     
   945                           ;circularBuffer.c: 41:     {;circularBuffer.c: 42:         gieSet = 1;
   946  002380  0E01               	movlw	1
   947  002382  6E18               	movwf	circularBuffer_read@gieSet^0,c
   948  002384                     
   949                           ;circularBuffer.c: 43:         INTCONbits.GIE = 0;
   950  002384  9EF2               	bcf	242,7,c	;volatile
   951  002386                     l3564:
   952                           
   953                           ;circularBuffer.c: 45:     if (theCircularBuffer->readPointer == theCircularBuffer->writ
      +                          ePointer)
   954  002386  EE20 F004          	lfsr	2,4
   955  00238A  5011               	movf	circularBuffer_read@theCircularBuffer^0,w,c
   956  00238C  26D9               	addwf	fsr2l,f,c
   957  00238E  5012               	movf	(circularBuffer_read@theCircularBuffer+1)^0,w,c
   958  002390  22DA               	addwfc	fsr2h,f,c
   959  002392  EE10 F003          	lfsr	1,3
   960  002396  5011               	movf	circularBuffer_read@theCircularBuffer^0,w,c
   961  002398  26E1               	addwf	fsr1l,f,c
   962  00239A  5012               	movf	(circularBuffer_read@theCircularBuffer+1)^0,w,c
   963  00239C  22E2               	addwfc	fsr1h,f,c
   964  00239E  50DE               	movf	postinc2,w,c
   965  0023A0  18E6               	xorwf	postinc1,w,c
   966  0023A2  A4D8               	btfss	status,2,c
   967  0023A4  EFD6  F011         	goto	u4341
   968  0023A8  EFD8  F011         	goto	u4340
   969  0023AC                     u4341:
   970  0023AC  EF00  F012         	goto	l3578
   971  0023B0                     u4340:
   972  0023B0                     
   973                           ;circularBuffer.c: 46:     {;circularBuffer.c: 47:         (*toRead) = theCircularBuffer
      +                          ->buffer[theCircularBuffer->readPointer];
   974  0023B0  EE20 F003          	lfsr	2,3
   975  0023B4  5011               	movf	circularBuffer_read@theCircularBuffer^0,w,c
   976  0023B6  26D9               	addwf	fsr2l,f,c
   977  0023B8  5012               	movf	(circularBuffer_read@theCircularBuffer+1)^0,w,c
   978  0023BA  22DA               	addwfc	fsr2h,f,c
   979  0023BC  50DF               	movf	indf2,w,c
   980  0023BE  6E15               	movwf	??_circularBuffer_read^0,c
   981  0023C0  C011  FFD9         	movff	circularBuffer_read@theCircularBuffer,fsr2l
   982  0023C4  C012  FFDA         	movff	circularBuffer_read@theCircularBuffer+1,fsr2h
   983  0023C8  CFDE F016          	movff	postinc2,??_circularBuffer_read+1
   984  0023CC  CFDD F017          	movff	postdec2,??_circularBuffer_read+2
   985  0023D0  5015               	movf	??_circularBuffer_read^0,w,c
   986  0023D2  2416               	addwf	(??_circularBuffer_read+1)^0,w,c
   987  0023D4  6ED9               	movwf	fsr2l,c
   988  0023D6  0E00               	movlw	0
   989  0023D8  2017               	addwfc	(??_circularBuffer_read+2)^0,w,c
   990  0023DA  6EDA               	movwf	fsr2h,c
   991  0023DC  C013  FFE1         	movff	circularBuffer_read@toRead,fsr1l
   992  0023E0  C014  FFE2         	movff	circularBuffer_read@toRead+1,fsr1h
   993  0023E4  CFDF FFE7          	movff	indf2,indf1
   994  0023E8                     
   995                           ;circularBuffer.c: 49:         if(gieSet) INTCONbits.GIE = 1;
   996  0023E8  5018               	movf	circularBuffer_read@gieSet^0,w,c
   997  0023EA  B4D8               	btfsc	status,2,c
   998  0023EC  EFFA  F011         	goto	u4351
   999  0023F0  EFFC  F011         	goto	u4350
  1000  0023F4                     u4351:
  1001  0023F4  EFFD  F011         	goto	l3572
  1002  0023F8                     u4350:
  1003  0023F8  8EF2               	bsf	242,7,c	;volatile
  1004  0023FA                     l3572:
  1005                           
  1006                           ;circularBuffer.c: 50:         return 0;
  1007  0023FA  0E00               	movlw	0
  1008  0023FC  EF4A  F012         	goto	l209
  1009  002400                     l3578:
  1010                           
  1011                           ;circularBuffer.c: 52:         (*toRead) = theCircularBuffer->buffer[theCircularBuffer->
      +                          readPointer++];
  1012  002400  EE20 F003          	lfsr	2,3
  1013  002404  5011               	movf	circularBuffer_read@theCircularBuffer^0,w,c
  1014  002406  26D9               	addwf	fsr2l,f,c
  1015  002408  5012               	movf	(circularBuffer_read@theCircularBuffer+1)^0,w,c
  1016  00240A  22DA               	addwfc	fsr2h,f,c
  1017  00240C  50DF               	movf	indf2,w,c
  1018  00240E  6E15               	movwf	??_circularBuffer_read^0,c
  1019  002410  C011  FFD9         	movff	circularBuffer_read@theCircularBuffer,fsr2l
  1020  002414  C012  FFDA         	movff	circularBuffer_read@theCircularBuffer+1,fsr2h
  1021  002418  CFDE F016          	movff	postinc2,??_circularBuffer_read+1
  1022  00241C  CFDD F017          	movff	postdec2,??_circularBuffer_read+2
  1023  002420  5015               	movf	??_circularBuffer_read^0,w,c
  1024  002422  2416               	addwf	(??_circularBuffer_read+1)^0,w,c
  1025  002424  6ED9               	movwf	fsr2l,c
  1026  002426  0E00               	movlw	0
  1027  002428  2017               	addwfc	(??_circularBuffer_read+2)^0,w,c
  1028  00242A  6EDA               	movwf	fsr2h,c
  1029  00242C  C013  FFE1         	movff	circularBuffer_read@toRead,fsr1l
  1030  002430  C014  FFE2         	movff	circularBuffer_read@toRead+1,fsr1h
  1031  002434  CFDF FFE7          	movff	indf2,indf1
  1032  002438  EE20 F003          	lfsr	2,3
  1033  00243C  5011               	movf	circularBuffer_read@theCircularBuffer^0,w,c
  1034  00243E  26D9               	addwf	fsr2l,f,c
  1035  002440  5012               	movf	(circularBuffer_read@theCircularBuffer+1)^0,w,c
  1036  002442  22DA               	addwfc	fsr2h,f,c
  1037  002444  2ADF               	incf	indf2,f,c
  1038  002446                     
  1039                           ;circularBuffer.c: 53:         if (theCircularBuffer->readPointer == theCircularBuffer->
      +                          size)
  1040  002446  EE20 F002          	lfsr	2,2
  1041  00244A  5011               	movf	circularBuffer_read@theCircularBuffer^0,w,c
  1042  00244C  26D9               	addwf	fsr2l,f,c
  1043  00244E  5012               	movf	(circularBuffer_read@theCircularBuffer+1)^0,w,c
  1044  002450  22DA               	addwfc	fsr2h,f,c
  1045  002452  EE10 F003          	lfsr	1,3
  1046  002456  5011               	movf	circularBuffer_read@theCircularBuffer^0,w,c
  1047  002458  26E1               	addwf	fsr1l,f,c
  1048  00245A  5012               	movf	(circularBuffer_read@theCircularBuffer+1)^0,w,c
  1049  00245C  22E2               	addwfc	fsr1h,f,c
  1050  00245E  50DE               	movf	postinc2,w,c
  1051  002460  18E6               	xorwf	postinc1,w,c
  1052  002462  A4D8               	btfss	status,2,c
  1053  002464  EF36  F012         	goto	u4361
  1054  002468  EF38  F012         	goto	u4360
  1055  00246C                     u4361:
  1056  00246C  EF40  F012         	goto	l3586
  1057  002470                     u4360:
  1058  002470                     
  1059                           ;circularBuffer.c: 54:             theCircularBuffer->readPointer = 0;
  1060  002470  EE20 F003          	lfsr	2,3
  1061  002474  5011               	movf	circularBuffer_read@theCircularBuffer^0,w,c
  1062  002476  26D9               	addwf	fsr2l,f,c
  1063  002478  5012               	movf	(circularBuffer_read@theCircularBuffer+1)^0,w,c
  1064  00247A  22DA               	addwfc	fsr2h,f,c
  1065  00247C  0E00               	movlw	0
  1066  00247E  6EDF               	movwf	indf2,c
  1067  002480                     l3586:
  1068                           
  1069                           ;circularBuffer.c: 56:         if(gieSet) INTCONbits.GIE = 1;
  1070  002480  5018               	movf	circularBuffer_read@gieSet^0,w,c
  1071  002482  B4D8               	btfsc	status,2,c
  1072  002484  EF46  F012         	goto	u4371
  1073  002488  EF48  F012         	goto	u4370
  1074  00248C                     u4371:
  1075  00248C  EF49  F012         	goto	l3590
  1076  002490                     u4370:
  1077  002490  8EF2               	bsf	242,7,c	;volatile
  1078  002492                     l3590:
  1079                           
  1080                           ;circularBuffer.c: 57:         return 1;
  1081  002492  0E01               	movlw	1
  1082  002494                     l209:
  1083  002494  0012               	return		;funcret
  1084  002496                     __end_of_circularBuffer_read:
  1085                           	callstack 0
  1086                           
  1087 ;; *************** function _uart_println *****************
  1088 ;; Defined at:
  1089 ;;		line 106 in file "uart.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;  a               2   32[COMRAM] PTR const unsigned char 
  1092 ;;		 -> STR_12(1), STR_11(1), STR_10(1), STR_9(1), 
  1093 ;;		 -> STR_8(1), STR_7(1), STR_6(1), STR_5(1), 
  1094 ;;		 -> STR_4(1), STR_3(28), STR_1(25), 
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;		None
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      void 
  1099 ;; Registers used:
  1100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1106 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1109 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1110 ;;Total ram usage:        2 bytes
  1111 ;; Hardware stack levels used:    1
  1112 ;; Hardware stack levels required when called:    7
  1113 ;; This function calls:
  1114 ;;		_uart_newline
  1115 ;;		_uart_print
  1116 ;; This function is called by:
  1117 ;;		_main
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text3
  1122  003162                     __ptext3:
  1123                           	callstack 0
  1124  003162                     _uart_println:
  1125                           	callstack 23
  1126  003162                     
  1127                           ;uart.c: 106: void uart_println(const char* a);uart.c: 107: {;uart.c: 108:     uart_prin
      +                          t(a);
  1128  003162  C021  F01C         	movff	uart_println@a,uart_print@a
  1129  003166  C022  F01D         	movff	uart_println@a+1,uart_print@a+1
  1130  00316A  EC04  F018         	call	_uart_print	;wreg free
  1131  00316E                     
  1132                           ;uart.c: 109:     uart_newline();
  1133  00316E  ECC3  F018         	call	_uart_newline	;wreg free
  1134  003172  0012               	return		;funcret
  1135  003174                     __end_of_uart_println:
  1136                           	callstack 0
  1137                           
  1138 ;; *************** function _uart_print *****************
  1139 ;; Defined at:
  1140 ;;		line 93 in file "uart.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;  a               2   27[COMRAM] PTR const unsigned char 
  1143 ;;		 -> STR_12(1), STR_11(1), STR_10(1), STR_9(1), 
  1144 ;;		 -> STR_8(1), STR_7(1), STR_6(1), STR_5(1), 
  1145 ;;		 -> STR_4(1), STR_3(28), STR_2(17), STR_1(25), 
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;  i               1   31[COMRAM] unsigned char 
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1158 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1159 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1160 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1161 ;;Total ram usage:        5 bytes
  1162 ;; Hardware stack levels used:    1
  1163 ;; Hardware stack levels required when called:    6
  1164 ;; This function calls:
  1165 ;;		_uart_putc
  1166 ;; This function is called by:
  1167 ;;		_main
  1168 ;;		_uart_println
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           	psect	text4
  1173  003008                     __ptext4:
  1174                           	callstack 0
  1175  003008                     _uart_print:
  1176                           	callstack 23
  1177  003008                     
  1178                           ;uart.c: 93: void uart_print(const char* a);uart.c: 94: {;uart.c: 95:     uint8_t i = 0;
  1179  003008  0E00               	movlw	0
  1180  00300A  6E20               	movwf	uart_print@i^0,c
  1181                           
  1182                           ;uart.c: 96:     while (a[i] != '\0')
  1183  00300C  EF17  F018         	goto	l3522
  1184  003010                     l3518:
  1185                           
  1186                           ;uart.c: 97:         uart_putc(a[i++]);
  1187  003010  5020               	movf	uart_print@i^0,w,c
  1188  003012  241C               	addwf	uart_print@a^0,w,c
  1189  003014  6E1E               	movwf	??_uart_print^0,c
  1190  003016  0E00               	movlw	0
  1191  003018  201D               	addwfc	(uart_print@a+1)^0,w,c
  1192  00301A  6E1F               	movwf	(??_uart_print+1)^0,c
  1193  00301C  C01E  FFF6         	movff	??_uart_print,tblptrl
  1194  003020  C01F  FFF7         	movff	??_uart_print+1,tblptrh
  1195  003024                     	if	0	;tblptru may be non-zero
  1196  003024                     	endif
  1197  003024                     	if	0	;tblptru may be non-zero
  1198  003024                     	endif
  1199  003024  0008               	tblrd		*
  1200  003026  50F5               	movf	tablat,w,c
  1201  003028  ECA8  F017         	call	_uart_putc
  1202  00302C  2A20               	incf	uart_print@i^0,f,c
  1203  00302E                     l3522:
  1204                           
  1205                           ;uart.c: 96:     while (a[i] != '\0')
  1206  00302E  5020               	movf	uart_print@i^0,w,c
  1207  003030  241C               	addwf	uart_print@a^0,w,c
  1208  003032  6E1E               	movwf	??_uart_print^0,c
  1209  003034  0E00               	movlw	0
  1210  003036  201D               	addwfc	(uart_print@a+1)^0,w,c
  1211  003038  6E1F               	movwf	(??_uart_print+1)^0,c
  1212  00303A  C01E  FFF6         	movff	??_uart_print,tblptrl
  1213  00303E  C01F  FFF7         	movff	??_uart_print+1,tblptrh
  1214  003042                     	if	0	;tblptru may be non-zero
  1215  003042                     	endif
  1216  003042                     	if	0	;tblptru may be non-zero
  1217  003042                     	endif
  1218  003042  0008               	tblrd		*
  1219  003044  50F5               	movf	tablat,w,c
  1220  003046  0900               	iorlw	0
  1221  003048  A4D8               	btfss	status,2,c
  1222  00304A  EF29  F018         	goto	u4281
  1223  00304E  EF2B  F018         	goto	u4280
  1224  003052                     u4281:
  1225  003052  EF08  F018         	goto	l3518
  1226  003056                     u4280:
  1227  003056  0012               	return		;funcret
  1228  003058                     __end_of_uart_print:
  1229                           	callstack 0
  1230                           
  1231 ;; *************** function _uart_newline *****************
  1232 ;; Defined at:
  1233 ;;		line 100 in file "uart.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;		None
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;		None
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      void 
  1240 ;; Registers used:
  1241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1251 ;;Total ram usage:        0 bytes
  1252 ;; Hardware stack levels used:    1
  1253 ;; Hardware stack levels required when called:    6
  1254 ;; This function calls:
  1255 ;;		_uart_putc
  1256 ;; This function is called by:
  1257 ;;		_uart_println
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           	psect	text5
  1262  003186                     __ptext5:
  1263                           	callstack 0
  1264  003186                     _uart_newline:
  1265                           	callstack 23
  1266  003186                     
  1267                           ;uart.c: 102:     uart_putc('\n');
  1268  003186  0E0A               	movlw	10
  1269  003188  ECA8  F017         	call	_uart_putc
  1270                           
  1271                           ;uart.c: 103:     uart_putc('\r');
  1272  00318C  0E0D               	movlw	13
  1273  00318E  ECA8  F017         	call	_uart_putc
  1274  003192  0012               	return		;funcret
  1275  003194                     __end_of_uart_newline:
  1276                           	callstack 0
  1277                           
  1278 ;; *************** function _uart_printUint8 *****************
  1279 ;; Defined at:
  1280 ;;		line 112 in file "uart.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;  a               1    wreg     unsigned char 
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  a               1   30[COMRAM] unsigned char 
  1285 ;;  divisor         1   31[COMRAM] unsigned char 
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1299 ;;Total ram usage:        2 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; Hardware stack levels required when called:    6
  1302 ;; This function calls:
  1303 ;;		___awdiv
  1304 ;;		___awmod
  1305 ;;		_uart_putc
  1306 ;; This function is called by:
  1307 ;;		_main
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text6
  1312  002AAC                     __ptext6:
  1313                           	callstack 0
  1314  002AAC                     _uart_printUint8:
  1315                           	callstack 24
  1316                           
  1317                           ;incstack = 0
  1318                           ;uart_printUint8@a stored from wreg
  1319  002AAC  6E1F               	movwf	uart_printUint8@a^0,c
  1320  002AAE                     
  1321                           ;uart.c: 112: void uart_printUint8(uint8_t a);uart.c: 113: {;uart.c: 114:     uint8_t di
      +                          visor = 1;
  1322  002AAE  0E01               	movlw	1
  1323  002AB0  6E20               	movwf	uart_printUint8@divisor^0,c
  1324                           
  1325                           ;uart.c: 115:     while (divisor < a)
  1326  002AB2  EF6A  F015         	goto	l3994
  1327  002AB6                     l3988:
  1328                           
  1329                           ;uart.c: 116:     {;uart.c: 117:         divisor *= 10;
  1330  002AB6  0E0A               	movlw	10
  1331  002AB8  0220               	mulwf	uart_printUint8@divisor^0,c
  1332  002ABA  50F3               	movf	prodl,w,c
  1333  002ABC  6E20               	movwf	uart_printUint8@divisor^0,c
  1334  002ABE                     
  1335                           ;uart.c: 118:         if (divisor == 100)
  1336  002ABE  0E64               	movlw	100
  1337  002AC0  1820               	xorwf	uart_printUint8@divisor^0,w,c
  1338  002AC2  A4D8               	btfss	status,2,c
  1339  002AC4  EF66  F015         	goto	u4991
  1340  002AC8  EF68  F015         	goto	u4990
  1341  002ACC                     u4991:
  1342  002ACC  EF6A  F015         	goto	l3994
  1343  002AD0                     u4990:
  1344  002AD0  EF73  F015         	goto	l3996
  1345  002AD4                     l3994:
  1346                           
  1347                           ;uart.c: 115:     while (divisor < a)
  1348  002AD4  501F               	movf	uart_printUint8@a^0,w,c
  1349  002AD6  5C20               	subwf	uart_printUint8@divisor^0,w,c
  1350  002AD8  A0D8               	btfss	status,0,c
  1351  002ADA  EF71  F015         	goto	u5001
  1352  002ADE  EF73  F015         	goto	u5000
  1353  002AE2                     u5001:
  1354  002AE2  EF5B  F015         	goto	l3988
  1355  002AE6                     u5000:
  1356  002AE6                     l3996:
  1357                           
  1358                           ;uart.c: 122:     if ((a%(divisor*10))/(divisor) == 0)
  1359  002AE6  5020               	movf	uart_printUint8@divisor^0,w,c
  1360  002AE8  0D0A               	mullw	10
  1361  002AEA  CFF3 F013          	movff	prodl,___awmod@divisor
  1362  002AEE  CFF4 F014          	movff	prodh,___awmod@divisor+1
  1363  002AF2  C01F  F011         	movff	uart_printUint8@a,___awmod@dividend
  1364  002AF6  6A12               	clrf	(___awmod@dividend+1)^0,c
  1365  002AF8  EC22  F016         	call	___awmod	;wreg free
  1366  002AFC  C011  F017         	movff	?___awmod,___awdiv@dividend
  1367  002B00  C012  F018         	movff	?___awmod+1,___awdiv@dividend+1
  1368  002B04  C020  F019         	movff	uart_printUint8@divisor,___awdiv@divisor
  1369  002B08  6A1A               	clrf	(___awdiv@divisor+1)^0,c
  1370  002B0A  ECC0  F015         	call	___awdiv	;wreg free
  1371  002B0E  5017               	movf	?___awdiv^0,w,c
  1372  002B10  1018               	iorwf	(?___awdiv+1)^0,w,c
  1373  002B12  A4D8               	btfss	status,2,c
  1374  002B14  EF8E  F015         	goto	u5011
  1375  002B18  EF90  F015         	goto	u5010
  1376  002B1C                     u5011:
  1377  002B1C  EFB7  F015         	goto	l4004
  1378  002B20                     u5010:
  1379  002B20                     l3998:
  1380                           
  1381                           ;uart.c: 123:         divisor /= 10;
  1382  002B20  C020  F017         	movff	uart_printUint8@divisor,___awdiv@dividend
  1383  002B24  6A18               	clrf	(___awdiv@dividend+1)^0,c
  1384  002B26  0E00               	movlw	0
  1385  002B28  6E1A               	movwf	(___awdiv@divisor+1)^0,c
  1386  002B2A  0E0A               	movlw	10
  1387  002B2C  6E19               	movwf	___awdiv@divisor^0,c
  1388  002B2E  ECC0  F015         	call	___awdiv	;wreg free
  1389  002B32  5017               	movf	?___awdiv^0,w,c
  1390  002B34  6E20               	movwf	uart_printUint8@divisor^0,c
  1391  002B36  EFB7  F015         	goto	l4004
  1392  002B3A                     l4000:
  1393                           
  1394                           ;uart.c: 126:     {;uart.c: 127:         uart_putc('0' + (a%(divisor*10))/(divisor));
  1395  002B3A  5020               	movf	uart_printUint8@divisor^0,w,c
  1396  002B3C  0D0A               	mullw	10
  1397  002B3E  CFF3 F013          	movff	prodl,___awmod@divisor
  1398  002B42  CFF4 F014          	movff	prodh,___awmod@divisor+1
  1399  002B46  C01F  F011         	movff	uart_printUint8@a,___awmod@dividend
  1400  002B4A  6A12               	clrf	(___awmod@dividend+1)^0,c
  1401  002B4C  EC22  F016         	call	___awmod	;wreg free
  1402  002B50  C011  F017         	movff	?___awmod,___awdiv@dividend
  1403  002B54  C012  F018         	movff	?___awmod+1,___awdiv@dividend+1
  1404  002B58  C020  F019         	movff	uart_printUint8@divisor,___awdiv@divisor
  1405  002B5C  6A1A               	clrf	(___awdiv@divisor+1)^0,c
  1406  002B5E  ECC0  F015         	call	___awdiv	;wreg free
  1407  002B62  5017               	movf	?___awdiv^0,w,c
  1408  002B64  0F30               	addlw	48
  1409  002B66  ECA8  F017         	call	_uart_putc
  1410  002B6A  EF90  F015         	goto	l3998
  1411  002B6E                     l4004:
  1412                           
  1413                           ;uart.c: 125:     while (divisor >= 1)
  1414  002B6E  5020               	movf	uart_printUint8@divisor^0,w,c
  1415  002B70  A4D8               	btfss	status,2,c
  1416  002B72  EFBD  F015         	goto	u5021
  1417  002B76  EFBF  F015         	goto	u5020
  1418  002B7A                     u5021:
  1419  002B7A  EF9D  F015         	goto	l4000
  1420  002B7E                     u5020:
  1421  002B7E  0012               	return		;funcret
  1422  002B80                     __end_of_uart_printUint8:
  1423                           	callstack 0
  1424                           
  1425 ;; *************** function ___awdiv *****************
  1426 ;; Defined at:
  1427 ;;		line 7 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/awdiv.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;  dividend        2   22[COMRAM] int 
  1430 ;;  divisor         2   24[COMRAM] int 
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;  quotient        2   28[COMRAM] int 
  1433 ;;  sign            1   27[COMRAM] unsigned char 
  1434 ;;  counter         1   26[COMRAM] unsigned char 
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  2   22[COMRAM] int 
  1437 ;; Registers used:
  1438 ;;		wreg, status,2, status,0
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1444 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1445 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;Total ram usage:        8 bytes
  1449 ;; Hardware stack levels used:    1
  1450 ;; Hardware stack levels required when called:    4
  1451 ;; This function calls:
  1452 ;;		Nothing
  1453 ;; This function is called by:
  1454 ;;		_uart_printUint8
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text7
  1459  002B80                     __ptext7:
  1460                           	callstack 0
  1461  002B80                     ___awdiv:
  1462                           	callstack 25
  1463  002B80  0E00               	movlw	0
  1464  002B82  6E1C               	movwf	___awdiv@sign^0,c
  1465  002B84  BE1A               	btfsc	(___awdiv@divisor+1)^0,7,c
  1466  002B86  EFC9  F015         	goto	u4600
  1467  002B8A  EFC7  F015         	goto	u4601
  1468  002B8E                     u4601:
  1469  002B8E  EFCF  F015         	goto	l3762
  1470  002B92                     u4600:
  1471  002B92  6C19               	negf	___awdiv@divisor^0,c
  1472  002B94  1E1A               	comf	(___awdiv@divisor+1)^0,f,c
  1473  002B96  B0D8               	btfsc	status,0,c
  1474  002B98  2A1A               	incf	(___awdiv@divisor+1)^0,f,c
  1475  002B9A  0E01               	movlw	1
  1476  002B9C  6E1C               	movwf	___awdiv@sign^0,c
  1477  002B9E                     l3762:
  1478  002B9E  BE18               	btfsc	(___awdiv@dividend+1)^0,7,c
  1479  002BA0  EFD6  F015         	goto	u4610
  1480  002BA4  EFD4  F015         	goto	u4611
  1481  002BA8                     u4611:
  1482  002BA8  EFDC  F015         	goto	l3768
  1483  002BAC                     u4610:
  1484  002BAC  6C17               	negf	___awdiv@dividend^0,c
  1485  002BAE  1E18               	comf	(___awdiv@dividend+1)^0,f,c
  1486  002BB0  B0D8               	btfsc	status,0,c
  1487  002BB2  2A18               	incf	(___awdiv@dividend+1)^0,f,c
  1488  002BB4  0E01               	movlw	1
  1489  002BB6  1A1C               	xorwf	___awdiv@sign^0,f,c
  1490  002BB8                     l3768:
  1491  002BB8  0E00               	movlw	0
  1492  002BBA  6E1E               	movwf	(___awdiv@quotient+1)^0,c
  1493  002BBC  0E00               	movlw	0
  1494  002BBE  6E1D               	movwf	___awdiv@quotient^0,c
  1495  002BC0  5019               	movf	___awdiv@divisor^0,w,c
  1496  002BC2  101A               	iorwf	(___awdiv@divisor+1)^0,w,c
  1497  002BC4  B4D8               	btfsc	status,2,c
  1498  002BC6  EFE7  F015         	goto	u4621
  1499  002BCA  EFE9  F015         	goto	u4620
  1500  002BCE                     u4621:
  1501  002BCE  EF11  F016         	goto	l3790
  1502  002BD2                     u4620:
  1503  002BD2  0E01               	movlw	1
  1504  002BD4  6E1B               	movwf	___awdiv@counter^0,c
  1505  002BD6  EFF1  F015         	goto	l3776
  1506  002BDA                     l3774:
  1507  002BDA  90D8               	bcf	status,0,c
  1508  002BDC  3619               	rlcf	___awdiv@divisor^0,f,c
  1509  002BDE  361A               	rlcf	(___awdiv@divisor+1)^0,f,c
  1510  002BE0  2A1B               	incf	___awdiv@counter^0,f,c
  1511  002BE2                     l3776:
  1512  002BE2  AE1A               	btfss	(___awdiv@divisor+1)^0,7,c
  1513  002BE4  EFF6  F015         	goto	u4631
  1514  002BE8  EFF8  F015         	goto	u4630
  1515  002BEC                     u4631:
  1516  002BEC  EFED  F015         	goto	l3774
  1517  002BF0                     u4630:
  1518  002BF0                     l3778:
  1519  002BF0  90D8               	bcf	status,0,c
  1520  002BF2  361D               	rlcf	___awdiv@quotient^0,f,c
  1521  002BF4  361E               	rlcf	(___awdiv@quotient+1)^0,f,c
  1522  002BF6  5019               	movf	___awdiv@divisor^0,w,c
  1523  002BF8  5C17               	subwf	___awdiv@dividend^0,w,c
  1524  002BFA  501A               	movf	(___awdiv@divisor+1)^0,w,c
  1525  002BFC  5818               	subwfb	(___awdiv@dividend+1)^0,w,c
  1526  002BFE  A0D8               	btfss	status,0,c
  1527  002C00  EF04  F016         	goto	u4641
  1528  002C04  EF06  F016         	goto	u4640
  1529  002C08                     u4641:
  1530  002C08  EF0B  F016         	goto	l3786
  1531  002C0C                     u4640:
  1532  002C0C  5019               	movf	___awdiv@divisor^0,w,c
  1533  002C0E  5E17               	subwf	___awdiv@dividend^0,f,c
  1534  002C10  501A               	movf	(___awdiv@divisor+1)^0,w,c
  1535  002C12  5A18               	subwfb	(___awdiv@dividend+1)^0,f,c
  1536  002C14  801D               	bsf	___awdiv@quotient^0,0,c
  1537  002C16                     l3786:
  1538  002C16  90D8               	bcf	status,0,c
  1539  002C18  321A               	rrcf	(___awdiv@divisor+1)^0,f,c
  1540  002C1A  3219               	rrcf	___awdiv@divisor^0,f,c
  1541  002C1C  2E1B               	decfsz	___awdiv@counter^0,f,c
  1542  002C1E  EFF8  F015         	goto	l3778
  1543  002C22                     l3790:
  1544  002C22  501C               	movf	___awdiv@sign^0,w,c
  1545  002C24  B4D8               	btfsc	status,2,c
  1546  002C26  EF17  F016         	goto	u4651
  1547  002C2A  EF19  F016         	goto	u4650
  1548  002C2E                     u4651:
  1549  002C2E  EF1D  F016         	goto	l3794
  1550  002C32                     u4650:
  1551  002C32  6C1D               	negf	___awdiv@quotient^0,c
  1552  002C34  1E1E               	comf	(___awdiv@quotient+1)^0,f,c
  1553  002C36  B0D8               	btfsc	status,0,c
  1554  002C38  2A1E               	incf	(___awdiv@quotient+1)^0,f,c
  1555  002C3A                     l3794:
  1556  002C3A  C01D  F017         	movff	___awdiv@quotient,?___awdiv
  1557  002C3E  C01E  F018         	movff	___awdiv@quotient+1,?___awdiv+1
  1558  002C42  0012               	return		;funcret
  1559  002C44                     __end_of___awdiv:
  1560                           	callstack 0
  1561                           
  1562 ;; *************** function _uart_printFloat *****************
  1563 ;; Defined at:
  1564 ;;		line 186 in file "uart.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;  a               4    8[BANK0 ] float 
  1567 ;;  digitsAfterC    1   12[BANK0 ] unsigned char 
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;  i               1   50[COMRAM] unsigned char 
  1570 ;;  d               1   49[COMRAM] unsigned char 
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  1    wreg      void 
  1573 ;; Registers used:
  1574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1580 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1581 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1582 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1583 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1584 ;;Total ram usage:        8 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; Hardware stack levels required when called:    7
  1587 ;; This function calls:
  1588 ;;		___awmod
  1589 ;;		___flmul
  1590 ;;		___flsub
  1591 ;;		___fltol
  1592 ;;		___xxtofl
  1593 ;;		_uart_printInt32
  1594 ;;		_uart_putc
  1595 ;; This function is called by:
  1596 ;;		_main
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           	psect	text8
  1601  001F86                     __ptext8:
  1602                           	callstack 0
  1603  001F86                     _uart_printFloat:
  1604                           	callstack 23
  1605  001F86                     
  1606                           ;uart.c: 186: void uart_printFloat(float a, uint8_t digitsAfterComma);uart.c: 187: {;uar
      +                          t.c: 188:     uint8_t d;;uart.c: 189:     uint8_t i =0;
  1607  001F86  0E00               	movlw	0
  1608  001F88  6E33               	movwf	uart_printFloat@i^0,c
  1609  001F8A                     
  1610                           ;uart.c: 191:     uart_printInt32((int32_t)a);
  1611  001F8A  C0A8  F011         	movff	uart_printFloat@a,___fltol@f1
  1612  001F8E  C0A9  F012         	movff	uart_printFloat@a+1,___fltol@f1+1
  1613  001F92  C0AA  F013         	movff	uart_printFloat@a+2,___fltol@f1+2
  1614  001F96  C0AB  F014         	movff	uart_printFloat@a+3,___fltol@f1+3
  1615  001F9A  EC63  F013         	call	___fltol	;wreg free
  1616  001F9E  C011  F029         	movff	?___fltol,uart_printInt32@a
  1617  001FA2  C012  F02A         	movff	?___fltol+1,uart_printInt32@a+1
  1618  001FA6  C013  F02B         	movff	?___fltol+2,uart_printInt32@a+2
  1619  001FAA  C014  F02C         	movff	?___fltol+3,uart_printInt32@a+3
  1620  001FAE  EC99  F00C         	call	_uart_printInt32	;wreg free
  1621  001FB2                     
  1622                           ;uart.c: 192:     uart_putc('.');
  1623  001FB2  0E2E               	movlw	46
  1624  001FB4  ECA8  F017         	call	_uart_putc
  1625  001FB8                     
  1626                           ;uart.c: 194:     a = a - (int32_t) a;
  1627  001FB8  C0A8  F029         	movff	uart_printFloat@a,___flsub@b
  1628  001FBC  C0A9  F02A         	movff	uart_printFloat@a+1,___flsub@b+1
  1629  001FC0  C0AA  F02B         	movff	uart_printFloat@a+2,___flsub@b+2
  1630  001FC4  C0AB  F02C         	movff	uart_printFloat@a+3,___flsub@b+3
  1631  001FC8  C0A8  F011         	movff	uart_printFloat@a,___fltol@f1
  1632  001FCC  C0A9  F012         	movff	uart_printFloat@a+1,___fltol@f1+1
  1633  001FD0  C0AA  F013         	movff	uart_printFloat@a+2,___fltol@f1+2
  1634  001FD4  C0AB  F014         	movff	uart_printFloat@a+3,___fltol@f1+3
  1635  001FD8  EC63  F013         	call	___fltol	;wreg free
  1636  001FDC  C011  F01B         	movff	?___fltol,___xxtofl@val
  1637  001FE0  C012  F01C         	movff	?___fltol+1,___xxtofl@val+1
  1638  001FE4  C013  F01D         	movff	?___fltol+2,___xxtofl@val+2
  1639  001FE8  C014  F01E         	movff	?___fltol+3,___xxtofl@val+3
  1640  001FEC  0E01               	movlw	1
  1641  001FEE  EC79  F00D         	call	___xxtofl
  1642  001FF2  C01B  F02D         	movff	?___xxtofl,___flsub@a
  1643  001FF6  C01C  F02E         	movff	?___xxtofl+1,___flsub@a+1
  1644  001FFA  C01D  F02F         	movff	?___xxtofl+2,___flsub@a+2
  1645  001FFE  C01E  F030         	movff	?___xxtofl+3,___flsub@a+3
  1646  002002  EC2C  F018         	call	___flsub	;wreg free
  1647  002006  C029  F0A8         	movff	?___flsub,uart_printFloat@a
  1648  00200A  C02A  F0A9         	movff	?___flsub+1,uart_printFloat@a+1
  1649  00200E  C02B  F0AA         	movff	?___flsub+2,uart_printFloat@a+2
  1650  002012  C02C  F0AB         	movff	?___flsub+3,uart_printFloat@a+3
  1651  002016                     
  1652                           ;uart.c: 195:     if (a < 0.0)
  1653  002016  0100               	movlb	0	; () banked
  1654  002018  BFAB               	btfsc	(uart_printFloat@a+3)& (0+255),7,b
  1655  00201A  EF13  F010         	goto	u5080
  1656  00201E  EF11  F010         	goto	u5081
  1657  002022                     u5081:
  1658  002022  EF62  F010         	goto	l4056
  1659  002026                     u5080:
  1660  002026                     
  1661                           ; BSR set to: 0
  1662                           ;uart.c: 196:         a *= -1;
  1663  002026  C0A8  F011         	movff	uart_printFloat@a,___flmul@b
  1664  00202A  C0A9  F012         	movff	uart_printFloat@a+1,___flmul@b+1
  1665  00202E  C0AA  F013         	movff	uart_printFloat@a+2,___flmul@b+2
  1666  002032  C0AB  F014         	movff	uart_printFloat@a+3,___flmul@b+3
  1667  002036  0E00               	movlw	0
  1668  002038  6E15               	movwf	___flmul@a^0,c
  1669  00203A  0E00               	movlw	0
  1670  00203C  6E16               	movwf	(___flmul@a+1)^0,c
  1671  00203E  0E80               	movlw	128
  1672  002040  6E17               	movwf	(___flmul@a+2)^0,c
  1673  002042  0EBF               	movlw	191
  1674  002044  6E18               	movwf	(___flmul@a+3)^0,c
  1675  002046  EC84  F00A         	call	___flmul	;wreg free
  1676  00204A  C011  F0A8         	movff	?___flmul,uart_printFloat@a
  1677  00204E  C012  F0A9         	movff	?___flmul+1,uart_printFloat@a+1
  1678  002052  C013  F0AA         	movff	?___flmul+2,uart_printFloat@a+2
  1679  002056  C014  F0AB         	movff	?___flmul+3,uart_printFloat@a+3
  1680  00205A  EF62  F010         	goto	l4056
  1681  00205E                     l4050:
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;uart.c: 199:     {;uart.c: 200:         a *= 10.0;
  1685  00205E  C0A8  F011         	movff	uart_printFloat@a,___flmul@b
  1686  002062  C0A9  F012         	movff	uart_printFloat@a+1,___flmul@b+1
  1687  002066  C0AA  F013         	movff	uart_printFloat@a+2,___flmul@b+2
  1688  00206A  C0AB  F014         	movff	uart_printFloat@a+3,___flmul@b+3
  1689  00206E  0E00               	movlw	0
  1690  002070  6E15               	movwf	___flmul@a^0,c
  1691  002072  0E00               	movlw	0
  1692  002074  6E16               	movwf	(___flmul@a+1)^0,c
  1693  002076  0E20               	movlw	32
  1694  002078  6E17               	movwf	(___flmul@a+2)^0,c
  1695  00207A  0E41               	movlw	65
  1696  00207C  6E18               	movwf	(___flmul@a+3)^0,c
  1697  00207E  EC84  F00A         	call	___flmul	;wreg free
  1698  002082  C011  F0A8         	movff	?___flmul,uart_printFloat@a
  1699  002086  C012  F0A9         	movff	?___flmul+1,uart_printFloat@a+1
  1700  00208A  C013  F0AA         	movff	?___flmul+2,uart_printFloat@a+2
  1701  00208E  C014  F0AB         	movff	?___flmul+3,uart_printFloat@a+3
  1702  002092                     
  1703                           ;uart.c: 201:         d = (uint8_t) a;
  1704  002092  C0A8  F011         	movff	uart_printFloat@a,___fltol@f1
  1705  002096  C0A9  F012         	movff	uart_printFloat@a+1,___fltol@f1+1
  1706  00209A  C0AA  F013         	movff	uart_printFloat@a+2,___fltol@f1+2
  1707  00209E  C0AB  F014         	movff	uart_printFloat@a+3,___fltol@f1+3
  1708  0020A2  EC63  F013         	call	___fltol	;wreg free
  1709  0020A6  5011               	movf	?___fltol^0,w,c
  1710  0020A8  6E32               	movwf	uart_printFloat@d^0,c
  1711  0020AA                     
  1712                           ;uart.c: 202:         uart_putc('0'+d%10);
  1713  0020AA  C032  F011         	movff	uart_printFloat@d,___awmod@dividend
  1714  0020AE  6A12               	clrf	(___awmod@dividend+1)^0,c
  1715  0020B0  0E00               	movlw	0
  1716  0020B2  6E14               	movwf	(___awmod@divisor+1)^0,c
  1717  0020B4  0E0A               	movlw	10
  1718  0020B6  6E13               	movwf	___awmod@divisor^0,c
  1719  0020B8  EC22  F016         	call	___awmod	;wreg free
  1720  0020BC  5011               	movf	?___awmod^0,w,c
  1721  0020BE  0F30               	addlw	48
  1722  0020C0  ECA8  F017         	call	_uart_putc
  1723  0020C4                     l4056:
  1724                           
  1725                           ;uart.c: 198:     while (i++ < digitsAfterComma)
  1726  0020C4  2A33               	incf	uart_printFloat@i^0,f,c
  1727  0020C6  0433               	decf	uart_printFloat@i^0,w,c
  1728  0020C8  6E31               	movwf	??_uart_printFloat^0,c
  1729  0020CA  0100               	movlb	0	; () banked
  1730  0020CC  51AC               	movf	uart_printFloat@digitsAfterComma& (0+255),w,b
  1731  0020CE  5C31               	subwf	??_uart_printFloat^0,w,c
  1732  0020D0  A0D8               	btfss	status,0,c
  1733  0020D2  EF6D  F010         	goto	u5091
  1734  0020D6  EF6F  F010         	goto	u5090
  1735  0020DA                     u5091:
  1736  0020DA  EF2F  F010         	goto	l4050
  1737  0020DE                     u5090:
  1738  0020DE                     
  1739                           ; BSR set to: 0
  1740  0020DE  0012               	return		;funcret
  1741  0020E0                     __end_of_uart_printFloat:
  1742                           	callstack 0
  1743                           
  1744 ;; *************** function _uart_printInt32 *****************
  1745 ;; Defined at:
  1746 ;;		line 162 in file "uart.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;  a               4   40[COMRAM] long 
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;  modulor         4    4[BANK0 ] long 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1760 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1761 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1762 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1763 ;;      Totals:         5       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1764 ;;Total ram usage:       13 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    6
  1767 ;; This function calls:
  1768 ;;		___aldiv
  1769 ;;		___almod
  1770 ;;		___lmul
  1771 ;;		_uart_putc
  1772 ;; This function is called by:
  1773 ;;		_main
  1774 ;;		_uart_printFloat
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778                           	psect	text9
  1779  001932                     __ptext9:
  1780                           	callstack 0
  1781  001932                     _uart_printInt32:
  1782                           	callstack 24
  1783  001932                     
  1784                           ;uart.c: 162: void uart_printInt32(int32_t a);uart.c: 163: {;uart.c: 164:     int32_t mo
      +                          dulor = 1;
  1785  001932  0E01               	movlw	1
  1786  001934  0100               	movlb	0	; () banked
  1787  001936  6FA4               	movwf	uart_printInt32@modulor& (0+255),b
  1788  001938  0E00               	movlw	0
  1789  00193A  6FA5               	movwf	(uart_printInt32@modulor+1)& (0+255),b
  1790  00193C  0E00               	movlw	0
  1791  00193E  6FA6               	movwf	(uart_printInt32@modulor+2)& (0+255),b
  1792  001940  0E00               	movlw	0
  1793  001942  6FA7               	movwf	(uart_printInt32@modulor+3)& (0+255),b
  1794  001944                     
  1795                           ; BSR set to: 0
  1796                           ;uart.c: 166:     if (a < 0)
  1797  001944  BE2C               	btfsc	(uart_printInt32@a+3)^0,7,c
  1798  001946  EFA9  F00C         	goto	u4290
  1799  00194A  EFA7  F00C         	goto	u4291
  1800  00194E                     u4291:
  1801  00194E  EFF5  F00C         	goto	l3538
  1802  001952                     u4290:
  1803  001952                     
  1804                           ; BSR set to: 0
  1805                           ;uart.c: 167:     {;uart.c: 168:         uart_putc('-');
  1806  001952  0E2D               	movlw	45
  1807  001954  ECA8  F017         	call	_uart_putc
  1808  001958                     
  1809                           ;uart.c: 169:         a *= -1;
  1810  001958  C029  F011         	movff	uart_printInt32@a,___lmul@multiplier
  1811  00195C  C02A  F012         	movff	uart_printInt32@a+1,___lmul@multiplier+1
  1812  001960  C02B  F013         	movff	uart_printInt32@a+2,___lmul@multiplier+2
  1813  001964  C02C  F014         	movff	uart_printInt32@a+3,___lmul@multiplier+3
  1814  001968  0EFF               	movlw	255
  1815  00196A  6E15               	movwf	___lmul@multiplicand^0,c
  1816  00196C  0EFF               	movlw	255
  1817  00196E  6E16               	movwf	(___lmul@multiplicand+1)^0,c
  1818  001970  0EFF               	movlw	255
  1819  001972  6E17               	movwf	(___lmul@multiplicand+2)^0,c
  1820  001974  0EFF               	movlw	255
  1821  001976  6E18               	movwf	(___lmul@multiplicand+3)^0,c
  1822  001978  EC41  F017         	call	___lmul	;wreg free
  1823  00197C  C011  F029         	movff	?___lmul,uart_printInt32@a
  1824  001980  C012  F02A         	movff	?___lmul+1,uart_printInt32@a+1
  1825  001984  C013  F02B         	movff	?___lmul+2,uart_printInt32@a+2
  1826  001988  C014  F02C         	movff	?___lmul+3,uart_printInt32@a+3
  1827  00198C  EFF5  F00C         	goto	l3538
  1828  001990                     l3532:
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;uart.c: 173:     {;uart.c: 174:         modulor *= 10;
  1832  001990  C0A4  F011         	movff	uart_printInt32@modulor,___lmul@multiplier
  1833  001994  C0A5  F012         	movff	uart_printInt32@modulor+1,___lmul@multiplier+1
  1834  001998  C0A6  F013         	movff	uart_printInt32@modulor+2,___lmul@multiplier+2
  1835  00199C  C0A7  F014         	movff	uart_printInt32@modulor+3,___lmul@multiplier+3
  1836  0019A0  0E0A               	movlw	10
  1837  0019A2  6E15               	movwf	___lmul@multiplicand^0,c
  1838  0019A4  0E00               	movlw	0
  1839  0019A6  6E16               	movwf	(___lmul@multiplicand+1)^0,c
  1840  0019A8  0E00               	movlw	0
  1841  0019AA  6E17               	movwf	(___lmul@multiplicand+2)^0,c
  1842  0019AC  0E00               	movlw	0
  1843  0019AE  6E18               	movwf	(___lmul@multiplicand+3)^0,c
  1844  0019B0  EC41  F017         	call	___lmul	;wreg free
  1845  0019B4  C011  F0A4         	movff	?___lmul,uart_printInt32@modulor
  1846  0019B8  C012  F0A5         	movff	?___lmul+1,uart_printInt32@modulor+1
  1847  0019BC  C013  F0A6         	movff	?___lmul+2,uart_printInt32@modulor+2
  1848  0019C0  C014  F0A7         	movff	?___lmul+3,uart_printInt32@modulor+3
  1849  0019C4                     
  1850                           ;uart.c: 175:         if (modulor == 1000000000)
  1851  0019C4  0ECA               	movlw	202
  1852  0019C6  0100               	movlb	0	; () banked
  1853  0019C8  19A5               	xorwf	(uart_printInt32@modulor+1)& (0+255),w,b
  1854  0019CA  E10B               	bnz	u4301
  1855  0019CC  0E9A               	movlw	154
  1856  0019CE  19A6               	xorwf	(uart_printInt32@modulor+2)& (0+255),w,b
  1857  0019D0  E108               	bnz	u4301
  1858  0019D2  0E3B               	movlw	59
  1859  0019D4  19A7               	xorwf	(uart_printInt32@modulor+3)& (0+255),w,b
  1860  0019D6  11A4               	iorwf	uart_printInt32@modulor& (0+255),w,b
  1861  0019D8  A4D8               	btfss	status,2,c
  1862  0019DA  EFF1  F00C         	goto	u4301
  1863  0019DE  EFF3  F00C         	goto	u4300
  1864  0019E2                     u4301:
  1865  0019E2  EFF5  F00C         	goto	l3538
  1866  0019E6                     u4300:
  1867  0019E6  EF67  F00D         	goto	l3546
  1868  0019EA                     l3538:
  1869                           
  1870                           ;uart.c: 172:     while (modulor < a)
  1871  0019EA  5029               	movf	uart_printInt32@a^0,w,c
  1872  0019EC  0100               	movlb	0	; () banked
  1873  0019EE  5DA4               	subwf	uart_printInt32@modulor& (0+255),w,b
  1874  0019F0  502A               	movf	(uart_printInt32@a+1)^0,w,c
  1875  0019F2  59A5               	subwfb	(uart_printInt32@modulor+1)& (0+255),w,b
  1876  0019F4  502B               	movf	(uart_printInt32@a+2)^0,w,c
  1877  0019F6  59A6               	subwfb	(uart_printInt32@modulor+2)& (0+255),w,b
  1878  0019F8  51A7               	movf	(uart_printInt32@modulor+3)& (0+255),w,b
  1879  0019FA  0A80               	xorlw	128
  1880  0019FC  6E2D               	movwf	??_uart_printInt32^0,c
  1881  0019FE  502C               	movf	(uart_printInt32@a+3)^0,w,c
  1882  001A00  0A80               	xorlw	128
  1883  001A02  582D               	subwfb	??_uart_printInt32^0,w,c
  1884  001A04  A0D8               	btfss	status,0,c
  1885  001A06  EF07  F00D         	goto	u4311
  1886  001A0A  EF09  F00D         	goto	u4310
  1887  001A0E                     u4311:
  1888  001A0E  EFC8  F00C         	goto	l3532
  1889  001A12                     u4310:
  1890  001A12  EF67  F00D         	goto	l3546
  1891  001A16                     l3540:
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;uart.c: 180:     {;uart.c: 181:         uart_putc('0' + (a%modulor)/(modulor/10));
  1895  001A16  0E0A               	movlw	10
  1896  001A18  6E1F               	movwf	___aldiv@divisor^0,c
  1897  001A1A  0E00               	movlw	0
  1898  001A1C  6E20               	movwf	(___aldiv@divisor+1)^0,c
  1899  001A1E  0E00               	movlw	0
  1900  001A20  6E21               	movwf	(___aldiv@divisor+2)^0,c
  1901  001A22  0E00               	movlw	0
  1902  001A24  6E22               	movwf	(___aldiv@divisor+3)^0,c
  1903  001A26  C0A4  F01B         	movff	uart_printInt32@modulor,___aldiv@dividend
  1904  001A2A  C0A5  F01C         	movff	uart_printInt32@modulor+1,___aldiv@dividend+1
  1905  001A2E  C0A6  F01D         	movff	uart_printInt32@modulor+2,___aldiv@dividend+2
  1906  001A32  C0A7  F01E         	movff	uart_printInt32@modulor+3,___aldiv@dividend+3
  1907  001A36  ECDD  F012         	call	___aldiv	;wreg free
  1908  001A3A  C01B  F0A0         	movff	?___aldiv,_uart_printInt32$1047
  1909  001A3E  C01C  F0A1         	movff	?___aldiv+1,_uart_printInt32$1047+1
  1910  001A42  C01D  F0A2         	movff	?___aldiv+2,_uart_printInt32$1047+2
  1911  001A46  C01E  F0A3         	movff	?___aldiv+3,_uart_printInt32$1047+3
  1912  001A4A                     
  1913                           ;uart.c: 180:     {;uart.c: 181:         uart_putc('0' + (a%modulor)/(modulor/10));
  1914  001A4A  C0A4  F015         	movff	uart_printInt32@modulor,___almod@divisor
  1915  001A4E  C0A5  F016         	movff	uart_printInt32@modulor+1,___almod@divisor+1
  1916  001A52  C0A6  F017         	movff	uart_printInt32@modulor+2,___almod@divisor+2
  1917  001A56  C0A7  F018         	movff	uart_printInt32@modulor+3,___almod@divisor+3
  1918  001A5A  C029  F011         	movff	uart_printInt32@a,___almod@dividend
  1919  001A5E  C02A  F012         	movff	uart_printInt32@a+1,___almod@dividend+1
  1920  001A62  C02B  F013         	movff	uart_printInt32@a+2,___almod@dividend+2
  1921  001A66  C02C  F014         	movff	uart_printInt32@a+3,___almod@dividend+3
  1922  001A6A  ECE0  F014         	call	___almod	;wreg free
  1923  001A6E  C011  F01B         	movff	?___almod,___aldiv@dividend
  1924  001A72  C012  F01C         	movff	?___almod+1,___aldiv@dividend+1
  1925  001A76  C013  F01D         	movff	?___almod+2,___aldiv@dividend+2
  1926  001A7A  C014  F01E         	movff	?___almod+3,___aldiv@dividend+3
  1927  001A7E  C0A0  F01F         	movff	_uart_printInt32$1047,___aldiv@divisor
  1928  001A82  C0A1  F020         	movff	_uart_printInt32$1047+1,___aldiv@divisor+1
  1929  001A86  C0A2  F021         	movff	_uart_printInt32$1047+2,___aldiv@divisor+2
  1930  001A8A  C0A3  F022         	movff	_uart_printInt32$1047+3,___aldiv@divisor+3
  1931  001A8E  ECDD  F012         	call	___aldiv	;wreg free
  1932  001A92  501B               	movf	?___aldiv^0,w,c
  1933  001A94  0F30               	addlw	48
  1934  001A96  ECA8  F017         	call	_uart_putc
  1935  001A9A                     
  1936                           ;uart.c: 182:         modulor /= 10;
  1937  001A9A  C0A4  F01B         	movff	uart_printInt32@modulor,___aldiv@dividend
  1938  001A9E  C0A5  F01C         	movff	uart_printInt32@modulor+1,___aldiv@dividend+1
  1939  001AA2  C0A6  F01D         	movff	uart_printInt32@modulor+2,___aldiv@dividend+2
  1940  001AA6  C0A7  F01E         	movff	uart_printInt32@modulor+3,___aldiv@dividend+3
  1941  001AAA  0E0A               	movlw	10
  1942  001AAC  6E1F               	movwf	___aldiv@divisor^0,c
  1943  001AAE  0E00               	movlw	0
  1944  001AB0  6E20               	movwf	(___aldiv@divisor+1)^0,c
  1945  001AB2  0E00               	movlw	0
  1946  001AB4  6E21               	movwf	(___aldiv@divisor+2)^0,c
  1947  001AB6  0E00               	movlw	0
  1948  001AB8  6E22               	movwf	(___aldiv@divisor+3)^0,c
  1949  001ABA  ECDD  F012         	call	___aldiv	;wreg free
  1950  001ABE  C01B  F0A4         	movff	?___aldiv,uart_printInt32@modulor
  1951  001AC2  C01C  F0A5         	movff	?___aldiv+1,uart_printInt32@modulor+1
  1952  001AC6  C01D  F0A6         	movff	?___aldiv+2,uart_printInt32@modulor+2
  1953  001ACA  C01E  F0A7         	movff	?___aldiv+3,uart_printInt32@modulor+3
  1954  001ACE                     l3546:
  1955                           
  1956                           ;uart.c: 179:     while (modulor > 1)
  1957  001ACE  0100               	movlb	0	; () banked
  1958  001AD0  BFA7               	btfsc	(uart_printInt32@modulor+3)& (0+255),7,b
  1959  001AD2  EF78  F00D         	goto	u4320
  1960  001AD6  51A7               	movf	(uart_printInt32@modulor+3)& (0+255),w,b
  1961  001AD8  11A6               	iorwf	(uart_printInt32@modulor+2)& (0+255),w,b
  1962  001ADA  11A5               	iorwf	(uart_printInt32@modulor+1)& (0+255),w,b
  1963  001ADC  E107               	bnz	u4321
  1964  001ADE  0E02               	movlw	2
  1965  001AE0  5DA4               	subwf	uart_printInt32@modulor& (0+255),w,b
  1966  001AE2  B0D8               	btfsc	status,0,c
  1967  001AE4  EF76  F00D         	goto	u4321
  1968  001AE8  EF78  F00D         	goto	u4320
  1969  001AEC                     u4321:
  1970  001AEC  EF0B  F00D         	goto	l3540
  1971  001AF0                     u4320:
  1972  001AF0                     
  1973                           ; BSR set to: 0
  1974  001AF0  0012               	return		;funcret
  1975  001AF2                     __end_of_uart_printInt32:
  1976                           	callstack 0
  1977                           
  1978 ;; *************** function ___lmul *****************
  1979 ;; Defined at:
  1980 ;;		line 15 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/Umul32.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;  multiplier      4   16[COMRAM] unsigned long 
  1983 ;;  multiplicand    4   20[COMRAM] unsigned long 
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;  product         4   24[COMRAM] unsigned long 
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  4   16[COMRAM] unsigned long 
  1988 ;; Registers used:
  1989 ;;		wreg, status,2, status,0
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1995 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1999 ;;Total ram usage:       12 bytes
  2000 ;; Hardware stack levels used:    1
  2001 ;; Hardware stack levels required when called:    4
  2002 ;; This function calls:
  2003 ;;		Nothing
  2004 ;; This function is called by:
  2005 ;;		_uart_printInt32
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text10
  2010  002E82                     __ptext10:
  2011                           	callstack 0
  2012  002E82                     ___lmul:
  2013                           	callstack 25
  2014  002E82  0E00               	movlw	0
  2015  002E84  6E19               	movwf	___lmul@product^0,c
  2016  002E86  0E00               	movlw	0
  2017  002E88  6E1A               	movwf	(___lmul@product+1)^0,c
  2018  002E8A  0E00               	movlw	0
  2019  002E8C  6E1B               	movwf	(___lmul@product+2)^0,c
  2020  002E8E  0E00               	movlw	0
  2021  002E90  6E1C               	movwf	(___lmul@product+3)^0,c
  2022  002E92                     l3226:
  2023  002E92  A011               	btfss	___lmul@multiplier^0,0,c
  2024  002E94  EF4E  F017         	goto	u3751
  2025  002E98  EF50  F017         	goto	u3750
  2026  002E9C                     u3751:
  2027  002E9C  EF58  F017         	goto	l3230
  2028  002EA0                     u3750:
  2029  002EA0  5015               	movf	___lmul@multiplicand^0,w,c
  2030  002EA2  2619               	addwf	___lmul@product^0,f,c
  2031  002EA4  5016               	movf	(___lmul@multiplicand+1)^0,w,c
  2032  002EA6  221A               	addwfc	(___lmul@product+1)^0,f,c
  2033  002EA8  5017               	movf	(___lmul@multiplicand+2)^0,w,c
  2034  002EAA  221B               	addwfc	(___lmul@product+2)^0,f,c
  2035  002EAC  5018               	movf	(___lmul@multiplicand+3)^0,w,c
  2036  002EAE  221C               	addwfc	(___lmul@product+3)^0,f,c
  2037  002EB0                     l3230:
  2038  002EB0  90D8               	bcf	status,0,c
  2039  002EB2  3615               	rlcf	___lmul@multiplicand^0,f,c
  2040  002EB4  3616               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2041  002EB6  3617               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2042  002EB8  3618               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2043  002EBA  90D8               	bcf	status,0,c
  2044  002EBC  3214               	rrcf	(___lmul@multiplier+3)^0,f,c
  2045  002EBE  3213               	rrcf	(___lmul@multiplier+2)^0,f,c
  2046  002EC0  3212               	rrcf	(___lmul@multiplier+1)^0,f,c
  2047  002EC2  3211               	rrcf	___lmul@multiplier^0,f,c
  2048  002EC4  5011               	movf	___lmul@multiplier^0,w,c
  2049  002EC6  1012               	iorwf	(___lmul@multiplier+1)^0,w,c
  2050  002EC8  1013               	iorwf	(___lmul@multiplier+2)^0,w,c
  2051  002ECA  1014               	iorwf	(___lmul@multiplier+3)^0,w,c
  2052  002ECC  A4D8               	btfss	status,2,c
  2053  002ECE  EF6B  F017         	goto	u3761
  2054  002ED2  EF6D  F017         	goto	u3760
  2055  002ED6                     u3761:
  2056  002ED6  EF49  F017         	goto	l3226
  2057  002EDA                     u3760:
  2058  002EDA  C019  F011         	movff	___lmul@product,?___lmul
  2059  002EDE  C01A  F012         	movff	___lmul@product+1,?___lmul+1
  2060  002EE2  C01B  F013         	movff	___lmul@product+2,?___lmul+2
  2061  002EE6  C01C  F014         	movff	___lmul@product+3,?___lmul+3
  2062  002EEA  0012               	return		;funcret
  2063  002EEC                     __end_of___lmul:
  2064                           	callstack 0
  2065                           
  2066 ;; *************** function ___almod *****************
  2067 ;; Defined at:
  2068 ;;		line 7 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/almod.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;  dividend        4   16[COMRAM] long 
  2071 ;;  divisor         4   20[COMRAM] long 
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;  sign            1   25[COMRAM] unsigned char 
  2074 ;;  counter         1   24[COMRAM] unsigned char 
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  4   16[COMRAM] long 
  2077 ;; Registers used:
  2078 ;;		wreg, status,2, status,0
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2084 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2085 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2087 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;Total ram usage:       10 bytes
  2089 ;; Hardware stack levels used:    1
  2090 ;; Hardware stack levels required when called:    4
  2091 ;; This function calls:
  2092 ;;		Nothing
  2093 ;; This function is called by:
  2094 ;;		_uart_printInt32
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           	psect	text11
  2099  0029C0                     __ptext11:
  2100                           	callstack 0
  2101  0029C0                     ___almod:
  2102                           	callstack 25
  2103  0029C0  0E00               	movlw	0
  2104  0029C2  6E1A               	movwf	___almod@sign^0,c
  2105  0029C4  BE14               	btfsc	(___almod@dividend+3)^0,7,c
  2106  0029C6  EFE9  F014         	goto	u3830
  2107  0029CA  EFE7  F014         	goto	u3831
  2108  0029CE                     u3831:
  2109  0029CE  EFF3  F014         	goto	l3286
  2110  0029D2                     u3830:
  2111  0029D2  1E14               	comf	(___almod@dividend+3)^0,f,c
  2112  0029D4  1E13               	comf	(___almod@dividend+2)^0,f,c
  2113  0029D6  1E12               	comf	(___almod@dividend+1)^0,f,c
  2114  0029D8  6C11               	negf	___almod@dividend^0,c
  2115  0029DA  0E00               	movlw	0
  2116  0029DC  2212               	addwfc	(___almod@dividend+1)^0,f,c
  2117  0029DE  2213               	addwfc	(___almod@dividend+2)^0,f,c
  2118  0029E0  2214               	addwfc	(___almod@dividend+3)^0,f,c
  2119  0029E2  0E01               	movlw	1
  2120  0029E4  6E1A               	movwf	___almod@sign^0,c
  2121  0029E6                     l3286:
  2122  0029E6  BE18               	btfsc	(___almod@divisor+3)^0,7,c
  2123  0029E8  EFFA  F014         	goto	u3840
  2124  0029EC  EFF8  F014         	goto	u3841
  2125  0029F0                     u3841:
  2126  0029F0  EF02  F015         	goto	l3290
  2127  0029F4                     u3840:
  2128  0029F4  1E18               	comf	(___almod@divisor+3)^0,f,c
  2129  0029F6  1E17               	comf	(___almod@divisor+2)^0,f,c
  2130  0029F8  1E16               	comf	(___almod@divisor+1)^0,f,c
  2131  0029FA  6C15               	negf	___almod@divisor^0,c
  2132  0029FC  0E00               	movlw	0
  2133  0029FE  2216               	addwfc	(___almod@divisor+1)^0,f,c
  2134  002A00  2217               	addwfc	(___almod@divisor+2)^0,f,c
  2135  002A02  2218               	addwfc	(___almod@divisor+3)^0,f,c
  2136  002A04                     l3290:
  2137  002A04  5015               	movf	___almod@divisor^0,w,c
  2138  002A06  1016               	iorwf	(___almod@divisor+1)^0,w,c
  2139  002A08  1017               	iorwf	(___almod@divisor+2)^0,w,c
  2140  002A0A  1018               	iorwf	(___almod@divisor+3)^0,w,c
  2141  002A0C  B4D8               	btfsc	status,2,c
  2142  002A0E  EF0B  F015         	goto	u3851
  2143  002A12  EF0D  F015         	goto	u3850
  2144  002A16                     u3851:
  2145  002A16  EF3D  F015         	goto	l3306
  2146  002A1A                     u3850:
  2147  002A1A  0E01               	movlw	1
  2148  002A1C  6E19               	movwf	___almod@counter^0,c
  2149  002A1E  EF17  F015         	goto	l3296
  2150  002A22                     l3294:
  2151  002A22  90D8               	bcf	status,0,c
  2152  002A24  3615               	rlcf	___almod@divisor^0,f,c
  2153  002A26  3616               	rlcf	(___almod@divisor+1)^0,f,c
  2154  002A28  3617               	rlcf	(___almod@divisor+2)^0,f,c
  2155  002A2A  3618               	rlcf	(___almod@divisor+3)^0,f,c
  2156  002A2C  2A19               	incf	___almod@counter^0,f,c
  2157  002A2E                     l3296:
  2158  002A2E  AE18               	btfss	(___almod@divisor+3)^0,7,c
  2159  002A30  EF1C  F015         	goto	u3861
  2160  002A34  EF1E  F015         	goto	u3860
  2161  002A38                     u3861:
  2162  002A38  EF11  F015         	goto	l3294
  2163  002A3C                     u3860:
  2164  002A3C                     l3298:
  2165  002A3C  5015               	movf	___almod@divisor^0,w,c
  2166  002A3E  5C11               	subwf	___almod@dividend^0,w,c
  2167  002A40  5016               	movf	(___almod@divisor+1)^0,w,c
  2168  002A42  5812               	subwfb	(___almod@dividend+1)^0,w,c
  2169  002A44  5017               	movf	(___almod@divisor+2)^0,w,c
  2170  002A46  5813               	subwfb	(___almod@dividend+2)^0,w,c
  2171  002A48  5018               	movf	(___almod@divisor+3)^0,w,c
  2172  002A4A  5814               	subwfb	(___almod@dividend+3)^0,w,c
  2173  002A4C  A0D8               	btfss	status,0,c
  2174  002A4E  EF2B  F015         	goto	u3871
  2175  002A52  EF2D  F015         	goto	u3870
  2176  002A56                     u3871:
  2177  002A56  EF35  F015         	goto	l3302
  2178  002A5A                     u3870:
  2179  002A5A  5015               	movf	___almod@divisor^0,w,c
  2180  002A5C  5E11               	subwf	___almod@dividend^0,f,c
  2181  002A5E  5016               	movf	(___almod@divisor+1)^0,w,c
  2182  002A60  5A12               	subwfb	(___almod@dividend+1)^0,f,c
  2183  002A62  5017               	movf	(___almod@divisor+2)^0,w,c
  2184  002A64  5A13               	subwfb	(___almod@dividend+2)^0,f,c
  2185  002A66  5018               	movf	(___almod@divisor+3)^0,w,c
  2186  002A68  5A14               	subwfb	(___almod@dividend+3)^0,f,c
  2187  002A6A                     l3302:
  2188  002A6A  90D8               	bcf	status,0,c
  2189  002A6C  3218               	rrcf	(___almod@divisor+3)^0,f,c
  2190  002A6E  3217               	rrcf	(___almod@divisor+2)^0,f,c
  2191  002A70  3216               	rrcf	(___almod@divisor+1)^0,f,c
  2192  002A72  3215               	rrcf	___almod@divisor^0,f,c
  2193  002A74  2E19               	decfsz	___almod@counter^0,f,c
  2194  002A76  EF1E  F015         	goto	l3298
  2195  002A7A                     l3306:
  2196  002A7A  501A               	movf	___almod@sign^0,w,c
  2197  002A7C  B4D8               	btfsc	status,2,c
  2198  002A7E  EF43  F015         	goto	u3881
  2199  002A82  EF45  F015         	goto	u3880
  2200  002A86                     u3881:
  2201  002A86  EF4D  F015         	goto	l3310
  2202  002A8A                     u3880:
  2203  002A8A  1E14               	comf	(___almod@dividend+3)^0,f,c
  2204  002A8C  1E13               	comf	(___almod@dividend+2)^0,f,c
  2205  002A8E  1E12               	comf	(___almod@dividend+1)^0,f,c
  2206  002A90  6C11               	negf	___almod@dividend^0,c
  2207  002A92  0E00               	movlw	0
  2208  002A94  2212               	addwfc	(___almod@dividend+1)^0,f,c
  2209  002A96  2213               	addwfc	(___almod@dividend+2)^0,f,c
  2210  002A98  2214               	addwfc	(___almod@dividend+3)^0,f,c
  2211  002A9A                     l3310:
  2212  002A9A  C011  F011         	movff	___almod@dividend,?___almod
  2213  002A9E  C012  F012         	movff	___almod@dividend+1,?___almod+1
  2214  002AA2  C013  F013         	movff	___almod@dividend+2,?___almod+2
  2215  002AA6  C014  F014         	movff	___almod@dividend+3,?___almod+3
  2216  002AAA  0012               	return		;funcret
  2217  002AAC                     __end_of___almod:
  2218                           	callstack 0
  2219                           
  2220 ;; *************** function ___aldiv *****************
  2221 ;; Defined at:
  2222 ;;		line 7 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/aldiv.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  dividend        4   26[COMRAM] long 
  2225 ;;  divisor         4   30[COMRAM] long 
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;  quotient        4   36[COMRAM] long 
  2228 ;;  sign            1   35[COMRAM] unsigned char 
  2229 ;;  counter         1   34[COMRAM] unsigned char 
  2230 ;; Return value:  Size  Location     Type
  2231 ;;                  4   26[COMRAM] long 
  2232 ;; Registers used:
  2233 ;;		wreg, status,2, status,0
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2239 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2240 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2242 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2243 ;;Total ram usage:       14 bytes
  2244 ;; Hardware stack levels used:    1
  2245 ;; Hardware stack levels required when called:    4
  2246 ;; This function calls:
  2247 ;;		Nothing
  2248 ;; This function is called by:
  2249 ;;		_uart_printInt32
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text12
  2254  0025BA                     __ptext12:
  2255                           	callstack 0
  2256  0025BA                     ___aldiv:
  2257                           	callstack 25
  2258  0025BA  0E00               	movlw	0
  2259  0025BC  6E24               	movwf	___aldiv@sign^0,c
  2260  0025BE  BE22               	btfsc	(___aldiv@divisor+3)^0,7,c
  2261  0025C0  EFE6  F012         	goto	u3770
  2262  0025C4  EFE4  F012         	goto	u3771
  2263  0025C8                     u3771:
  2264  0025C8  EFF0  F012         	goto	l3242
  2265  0025CC                     u3770:
  2266  0025CC  1E22               	comf	(___aldiv@divisor+3)^0,f,c
  2267  0025CE  1E21               	comf	(___aldiv@divisor+2)^0,f,c
  2268  0025D0  1E20               	comf	(___aldiv@divisor+1)^0,f,c
  2269  0025D2  6C1F               	negf	___aldiv@divisor^0,c
  2270  0025D4  0E00               	movlw	0
  2271  0025D6  2220               	addwfc	(___aldiv@divisor+1)^0,f,c
  2272  0025D8  2221               	addwfc	(___aldiv@divisor+2)^0,f,c
  2273  0025DA  2222               	addwfc	(___aldiv@divisor+3)^0,f,c
  2274  0025DC  0E01               	movlw	1
  2275  0025DE  6E24               	movwf	___aldiv@sign^0,c
  2276  0025E0                     l3242:
  2277  0025E0  BE1E               	btfsc	(___aldiv@dividend+3)^0,7,c
  2278  0025E2  EFF7  F012         	goto	u3780
  2279  0025E6  EFF5  F012         	goto	u3781
  2280  0025EA                     u3781:
  2281  0025EA  EF01  F013         	goto	l3248
  2282  0025EE                     u3780:
  2283  0025EE  1E1E               	comf	(___aldiv@dividend+3)^0,f,c
  2284  0025F0  1E1D               	comf	(___aldiv@dividend+2)^0,f,c
  2285  0025F2  1E1C               	comf	(___aldiv@dividend+1)^0,f,c
  2286  0025F4  6C1B               	negf	___aldiv@dividend^0,c
  2287  0025F6  0E00               	movlw	0
  2288  0025F8  221C               	addwfc	(___aldiv@dividend+1)^0,f,c
  2289  0025FA  221D               	addwfc	(___aldiv@dividend+2)^0,f,c
  2290  0025FC  221E               	addwfc	(___aldiv@dividend+3)^0,f,c
  2291  0025FE  0E01               	movlw	1
  2292  002600  1A24               	xorwf	___aldiv@sign^0,f,c
  2293  002602                     l3248:
  2294  002602  0E00               	movlw	0
  2295  002604  6E25               	movwf	___aldiv@quotient^0,c
  2296  002606  0E00               	movlw	0
  2297  002608  6E26               	movwf	(___aldiv@quotient+1)^0,c
  2298  00260A  0E00               	movlw	0
  2299  00260C  6E27               	movwf	(___aldiv@quotient+2)^0,c
  2300  00260E  0E00               	movlw	0
  2301  002610  6E28               	movwf	(___aldiv@quotient+3)^0,c
  2302  002612  501F               	movf	___aldiv@divisor^0,w,c
  2303  002614  1020               	iorwf	(___aldiv@divisor+1)^0,w,c
  2304  002616  1021               	iorwf	(___aldiv@divisor+2)^0,w,c
  2305  002618  1022               	iorwf	(___aldiv@divisor+3)^0,w,c
  2306  00261A  B4D8               	btfsc	status,2,c
  2307  00261C  EF12  F013         	goto	u3791
  2308  002620  EF14  F013         	goto	u3790
  2309  002624                     u3791:
  2310  002624  EF4A  F013         	goto	l3270
  2311  002628                     u3790:
  2312  002628  0E01               	movlw	1
  2313  00262A  6E23               	movwf	___aldiv@counter^0,c
  2314  00262C  EF1E  F013         	goto	l3256
  2315  002630                     l3254:
  2316  002630  90D8               	bcf	status,0,c
  2317  002632  361F               	rlcf	___aldiv@divisor^0,f,c
  2318  002634  3620               	rlcf	(___aldiv@divisor+1)^0,f,c
  2319  002636  3621               	rlcf	(___aldiv@divisor+2)^0,f,c
  2320  002638  3622               	rlcf	(___aldiv@divisor+3)^0,f,c
  2321  00263A  2A23               	incf	___aldiv@counter^0,f,c
  2322  00263C                     l3256:
  2323  00263C  AE22               	btfss	(___aldiv@divisor+3)^0,7,c
  2324  00263E  EF23  F013         	goto	u3801
  2325  002642  EF25  F013         	goto	u3800
  2326  002646                     u3801:
  2327  002646  EF18  F013         	goto	l3254
  2328  00264A                     u3800:
  2329  00264A                     l3258:
  2330  00264A  90D8               	bcf	status,0,c
  2331  00264C  3625               	rlcf	___aldiv@quotient^0,f,c
  2332  00264E  3626               	rlcf	(___aldiv@quotient+1)^0,f,c
  2333  002650  3627               	rlcf	(___aldiv@quotient+2)^0,f,c
  2334  002652  3628               	rlcf	(___aldiv@quotient+3)^0,f,c
  2335  002654  501F               	movf	___aldiv@divisor^0,w,c
  2336  002656  5C1B               	subwf	___aldiv@dividend^0,w,c
  2337  002658  5020               	movf	(___aldiv@divisor+1)^0,w,c
  2338  00265A  581C               	subwfb	(___aldiv@dividend+1)^0,w,c
  2339  00265C  5021               	movf	(___aldiv@divisor+2)^0,w,c
  2340  00265E  581D               	subwfb	(___aldiv@dividend+2)^0,w,c
  2341  002660  5022               	movf	(___aldiv@divisor+3)^0,w,c
  2342  002662  581E               	subwfb	(___aldiv@dividend+3)^0,w,c
  2343  002664  A0D8               	btfss	status,0,c
  2344  002666  EF37  F013         	goto	u3811
  2345  00266A  EF39  F013         	goto	u3810
  2346  00266E                     u3811:
  2347  00266E  EF42  F013         	goto	l3266
  2348  002672                     u3810:
  2349  002672  501F               	movf	___aldiv@divisor^0,w,c
  2350  002674  5E1B               	subwf	___aldiv@dividend^0,f,c
  2351  002676  5020               	movf	(___aldiv@divisor+1)^0,w,c
  2352  002678  5A1C               	subwfb	(___aldiv@dividend+1)^0,f,c
  2353  00267A  5021               	movf	(___aldiv@divisor+2)^0,w,c
  2354  00267C  5A1D               	subwfb	(___aldiv@dividend+2)^0,f,c
  2355  00267E  5022               	movf	(___aldiv@divisor+3)^0,w,c
  2356  002680  5A1E               	subwfb	(___aldiv@dividend+3)^0,f,c
  2357  002682  8025               	bsf	___aldiv@quotient^0,0,c
  2358  002684                     l3266:
  2359  002684  90D8               	bcf	status,0,c
  2360  002686  3222               	rrcf	(___aldiv@divisor+3)^0,f,c
  2361  002688  3221               	rrcf	(___aldiv@divisor+2)^0,f,c
  2362  00268A  3220               	rrcf	(___aldiv@divisor+1)^0,f,c
  2363  00268C  321F               	rrcf	___aldiv@divisor^0,f,c
  2364  00268E  2E23               	decfsz	___aldiv@counter^0,f,c
  2365  002690  EF25  F013         	goto	l3258
  2366  002694                     l3270:
  2367  002694  5024               	movf	___aldiv@sign^0,w,c
  2368  002696  B4D8               	btfsc	status,2,c
  2369  002698  EF50  F013         	goto	u3821
  2370  00269C  EF52  F013         	goto	u3820
  2371  0026A0                     u3821:
  2372  0026A0  EF5A  F013         	goto	l3274
  2373  0026A4                     u3820:
  2374  0026A4  1E28               	comf	(___aldiv@quotient+3)^0,f,c
  2375  0026A6  1E27               	comf	(___aldiv@quotient+2)^0,f,c
  2376  0026A8  1E26               	comf	(___aldiv@quotient+1)^0,f,c
  2377  0026AA  6C25               	negf	___aldiv@quotient^0,c
  2378  0026AC  0E00               	movlw	0
  2379  0026AE  2226               	addwfc	(___aldiv@quotient+1)^0,f,c
  2380  0026B0  2227               	addwfc	(___aldiv@quotient+2)^0,f,c
  2381  0026B2  2228               	addwfc	(___aldiv@quotient+3)^0,f,c
  2382  0026B4                     l3274:
  2383  0026B4  C025  F01B         	movff	___aldiv@quotient,?___aldiv
  2384  0026B8  C026  F01C         	movff	___aldiv@quotient+1,?___aldiv+1
  2385  0026BC  C027  F01D         	movff	___aldiv@quotient+2,?___aldiv+2
  2386  0026C0  C028  F01E         	movff	___aldiv@quotient+3,?___aldiv+3
  2387  0026C4  0012               	return		;funcret
  2388  0026C6                     __end_of___aldiv:
  2389                           	callstack 0
  2390                           
  2391 ;; *************** function ___xxtofl *****************
  2392 ;; Defined at:
  2393 ;;		line 10 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/xxtofl.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;  sign            1    wreg     unsigned char 
  2396 ;;  val             4   26[COMRAM] long 
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;  sign            1   34[COMRAM] unsigned char 
  2399 ;;  arg             4   36[COMRAM] unsigned long 
  2400 ;;  exp             1   35[COMRAM] unsigned char 
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  4   26[COMRAM] unsigned char 
  2403 ;; Registers used:
  2404 ;;		wreg, status,2, status,0
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2410 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2411 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2412 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2413 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;Total ram usage:       14 bytes
  2415 ;; Hardware stack levels used:    1
  2416 ;; Hardware stack levels required when called:    4
  2417 ;; This function calls:
  2418 ;;		Nothing
  2419 ;; This function is called by:
  2420 ;;		_uart_printFloat
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           	psect	text13
  2425  001AF2                     __ptext13:
  2426                           	callstack 0
  2427  001AF2                     ___xxtofl:
  2428                           	callstack 25
  2429                           
  2430                           ;incstack = 0
  2431                           ;___xxtofl@sign stored from wreg
  2432  001AF2  6E23               	movwf	___xxtofl@sign^0,c
  2433  001AF4  5023               	movf	___xxtofl@sign^0,w,c
  2434  001AF6  B4D8               	btfsc	status,2,c
  2435  001AF8  EF80  F00D         	goto	u4791
  2436  001AFC  EF82  F00D         	goto	u4790
  2437  001B00                     u4791:
  2438  001B00  EFA4  F00D         	goto	l896
  2439  001B04                     u4790:
  2440  001B04  BE1E               	btfsc	(___xxtofl@val+3)^0,7,c
  2441  001B06  EF89  F00D         	goto	u4800
  2442  001B0A  EF87  F00D         	goto	u4801
  2443  001B0E                     u4801:
  2444  001B0E  EFA4  F00D         	goto	l896
  2445  001B12                     u4800:
  2446  001B12  C01B  F01F         	movff	___xxtofl@val,??___xxtofl
  2447  001B16  C01C  F020         	movff	___xxtofl@val+1,??___xxtofl+1
  2448  001B1A  C01D  F021         	movff	___xxtofl@val+2,??___xxtofl+2
  2449  001B1E  C01E  F022         	movff	___xxtofl@val+3,??___xxtofl+3
  2450  001B22  1E1F               	comf	??___xxtofl^0,f,c
  2451  001B24  1E20               	comf	(??___xxtofl+1)^0,f,c
  2452  001B26  1E21               	comf	(??___xxtofl+2)^0,f,c
  2453  001B28  1E22               	comf	(??___xxtofl+3)^0,f,c
  2454  001B2A  2A1F               	incf	??___xxtofl^0,f,c
  2455  001B2C  0E00               	movlw	0
  2456  001B2E  2220               	addwfc	(??___xxtofl+1)^0,f,c
  2457  001B30  2221               	addwfc	(??___xxtofl+2)^0,f,c
  2458  001B32  2222               	addwfc	(??___xxtofl+3)^0,f,c
  2459  001B34  C01F  F025         	movff	??___xxtofl,___xxtofl@arg
  2460  001B38  C020  F026         	movff	??___xxtofl+1,___xxtofl@arg+1
  2461  001B3C  C021  F027         	movff	??___xxtofl+2,___xxtofl@arg+2
  2462  001B40  C022  F028         	movff	??___xxtofl+3,___xxtofl@arg+3
  2463  001B44  EFAC  F00D         	goto	l3884
  2464  001B48                     l896:
  2465  001B48  C01B  F025         	movff	___xxtofl@val,___xxtofl@arg
  2466  001B4C  C01C  F026         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2467  001B50  C01D  F027         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2468  001B54  C01E  F028         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2469  001B58                     l3884:
  2470  001B58  501B               	movf	___xxtofl@val^0,w,c
  2471  001B5A  101C               	iorwf	(___xxtofl@val+1)^0,w,c
  2472  001B5C  101D               	iorwf	(___xxtofl@val+2)^0,w,c
  2473  001B5E  101E               	iorwf	(___xxtofl@val+3)^0,w,c
  2474  001B60  A4D8               	btfss	status,2,c
  2475  001B62  EFB5  F00D         	goto	u4811
  2476  001B66  EFB7  F00D         	goto	u4810
  2477  001B6A                     u4811:
  2478  001B6A  EFC1  F00D         	goto	l3890
  2479  001B6E                     u4810:
  2480  001B6E  0E00               	movlw	0
  2481  001B70  6E1B               	movwf	?___xxtofl^0,c
  2482  001B72  0E00               	movlw	0
  2483  001B74  6E1C               	movwf	(?___xxtofl+1)^0,c
  2484  001B76  0E00               	movlw	0
  2485  001B78  6E1D               	movwf	(?___xxtofl+2)^0,c
  2486  001B7A  0E00               	movlw	0
  2487  001B7C  6E1E               	movwf	(?___xxtofl+3)^0,c
  2488  001B7E  EF52  F00E         	goto	l899
  2489  001B82                     l3890:
  2490  001B82  0E96               	movlw	150
  2491  001B84  6E24               	movwf	___xxtofl@exp^0,c
  2492  001B86  EFCB  F00D         	goto	l3894
  2493  001B8A                     l3892:
  2494  001B8A  2A24               	incf	___xxtofl@exp^0,f,c
  2495  001B8C  90D8               	bcf	status,0,c
  2496  001B8E  3228               	rrcf	(___xxtofl@arg+3)^0,f,c
  2497  001B90  3227               	rrcf	(___xxtofl@arg+2)^0,f,c
  2498  001B92  3226               	rrcf	(___xxtofl@arg+1)^0,f,c
  2499  001B94  3225               	rrcf	___xxtofl@arg^0,f,c
  2500  001B96                     l3894:
  2501  001B96  0E00               	movlw	0
  2502  001B98  1425               	andwf	___xxtofl@arg^0,w,c
  2503  001B9A  6E1F               	movwf	??___xxtofl^0,c
  2504  001B9C  0E00               	movlw	0
  2505  001B9E  1426               	andwf	(___xxtofl@arg+1)^0,w,c
  2506  001BA0  6E20               	movwf	(??___xxtofl+1)^0,c
  2507  001BA2  0E00               	movlw	0
  2508  001BA4  1427               	andwf	(___xxtofl@arg+2)^0,w,c
  2509  001BA6  6E21               	movwf	(??___xxtofl+2)^0,c
  2510  001BA8  0EFE               	movlw	254
  2511  001BAA  1428               	andwf	(___xxtofl@arg+3)^0,w,c
  2512  001BAC  6E22               	movwf	(??___xxtofl+3)^0,c
  2513  001BAE  501F               	movf	??___xxtofl^0,w,c
  2514  001BB0  1020               	iorwf	(??___xxtofl+1)^0,w,c
  2515  001BB2  1021               	iorwf	(??___xxtofl+2)^0,w,c
  2516  001BB4  1022               	iorwf	(??___xxtofl+3)^0,w,c
  2517  001BB6  A4D8               	btfss	status,2,c
  2518  001BB8  EFE0  F00D         	goto	u4821
  2519  001BBC  EFE2  F00D         	goto	u4820
  2520  001BC0                     u4821:
  2521  001BC0  EFC5  F00D         	goto	l3892
  2522  001BC4                     u4820:
  2523  001BC4  EFF0  F00D         	goto	l903
  2524  001BC8                     l3896:
  2525  001BC8  2A24               	incf	___xxtofl@exp^0,f,c
  2526  001BCA  0E01               	movlw	1
  2527  001BCC  2625               	addwf	___xxtofl@arg^0,f,c
  2528  001BCE  0E00               	movlw	0
  2529  001BD0  2226               	addwfc	(___xxtofl@arg+1)^0,f,c
  2530  001BD2  2227               	addwfc	(___xxtofl@arg+2)^0,f,c
  2531  001BD4  2228               	addwfc	(___xxtofl@arg+3)^0,f,c
  2532  001BD6  90D8               	bcf	status,0,c
  2533  001BD8  3228               	rrcf	(___xxtofl@arg+3)^0,f,c
  2534  001BDA  3227               	rrcf	(___xxtofl@arg+2)^0,f,c
  2535  001BDC  3226               	rrcf	(___xxtofl@arg+1)^0,f,c
  2536  001BDE  3225               	rrcf	___xxtofl@arg^0,f,c
  2537  001BE0                     l903:
  2538  001BE0  0E00               	movlw	0
  2539  001BE2  1425               	andwf	___xxtofl@arg^0,w,c
  2540  001BE4  6E1F               	movwf	??___xxtofl^0,c
  2541  001BE6  0E00               	movlw	0
  2542  001BE8  1426               	andwf	(___xxtofl@arg+1)^0,w,c
  2543  001BEA  6E20               	movwf	(??___xxtofl+1)^0,c
  2544  001BEC  0E00               	movlw	0
  2545  001BEE  1427               	andwf	(___xxtofl@arg+2)^0,w,c
  2546  001BF0  6E21               	movwf	(??___xxtofl+2)^0,c
  2547  001BF2  0EFF               	movlw	255
  2548  001BF4  1428               	andwf	(___xxtofl@arg+3)^0,w,c
  2549  001BF6  6E22               	movwf	(??___xxtofl+3)^0,c
  2550  001BF8  501F               	movf	??___xxtofl^0,w,c
  2551  001BFA  1020               	iorwf	(??___xxtofl+1)^0,w,c
  2552  001BFC  1021               	iorwf	(??___xxtofl+2)^0,w,c
  2553  001BFE  1022               	iorwf	(??___xxtofl+3)^0,w,c
  2554  001C00  A4D8               	btfss	status,2,c
  2555  001C02  EF05  F00E         	goto	u4831
  2556  001C06  EF07  F00E         	goto	u4830
  2557  001C0A                     u4831:
  2558  001C0A  EFE4  F00D         	goto	l3896
  2559  001C0E                     u4830:
  2560  001C0E  EF0F  F00E         	goto	l3904
  2561  001C12                     l3902:
  2562  001C12  0624               	decf	___xxtofl@exp^0,f,c
  2563  001C14  90D8               	bcf	status,0,c
  2564  001C16  3625               	rlcf	___xxtofl@arg^0,f,c
  2565  001C18  3626               	rlcf	(___xxtofl@arg+1)^0,f,c
  2566  001C1A  3627               	rlcf	(___xxtofl@arg+2)^0,f,c
  2567  001C1C  3628               	rlcf	(___xxtofl@arg+3)^0,f,c
  2568  001C1E                     l3904:
  2569  001C1E  BE27               	btfsc	(___xxtofl@arg+2)^0,7,c
  2570  001C20  EF14  F00E         	goto	u4841
  2571  001C24  EF16  F00E         	goto	u4840
  2572  001C28                     u4841:
  2573  001C28  EF1E  F00E         	goto	l910
  2574  001C2C                     u4840:
  2575  001C2C  0E02               	movlw	2
  2576  001C2E  6024               	cpfslt	___xxtofl@exp^0,c
  2577  001C30  EF1C  F00E         	goto	u4851
  2578  001C34  EF1E  F00E         	goto	u4850
  2579  001C38                     u4851:
  2580  001C38  EF09  F00E         	goto	l3902
  2581  001C3C                     u4850:
  2582  001C3C                     l910:
  2583  001C3C  B024               	btfsc	___xxtofl@exp^0,0,c
  2584  001C3E  EF23  F00E         	goto	u4861
  2585  001C42  EF25  F00E         	goto	u4860
  2586  001C46                     u4861:
  2587  001C46  EF26  F00E         	goto	l3910
  2588  001C4A                     u4860:
  2589  001C4A  9E27               	bcf	(___xxtofl@arg+2)^0,7,c
  2590  001C4C                     l3910:
  2591  001C4C  90D8               	bcf	status,0,c
  2592  001C4E  3224               	rrcf	___xxtofl@exp^0,f,c
  2593  001C50  C024  F01F         	movff	___xxtofl@exp,??___xxtofl
  2594  001C54  6A20               	clrf	(??___xxtofl+1)^0,c
  2595  001C56  6A21               	clrf	(??___xxtofl+2)^0,c
  2596  001C58  6A22               	clrf	(??___xxtofl+3)^0,c
  2597  001C5A  C01F  F022         	movff	??___xxtofl,??___xxtofl+3
  2598  001C5E  6A21               	clrf	(??___xxtofl+2)^0,c
  2599  001C60  6A20               	clrf	(??___xxtofl+1)^0,c
  2600  001C62  6A1F               	clrf	??___xxtofl^0,c
  2601  001C64  501F               	movf	??___xxtofl^0,w,c
  2602  001C66  1225               	iorwf	___xxtofl@arg^0,f,c
  2603  001C68  5020               	movf	(??___xxtofl+1)^0,w,c
  2604  001C6A  1226               	iorwf	(___xxtofl@arg+1)^0,f,c
  2605  001C6C  5021               	movf	(??___xxtofl+2)^0,w,c
  2606  001C6E  1227               	iorwf	(___xxtofl@arg+2)^0,f,c
  2607  001C70  5022               	movf	(??___xxtofl+3)^0,w,c
  2608  001C72  1228               	iorwf	(___xxtofl@arg+3)^0,f,c
  2609  001C74  5023               	movf	___xxtofl@sign^0,w,c
  2610  001C76  B4D8               	btfsc	status,2,c
  2611  001C78  EF40  F00E         	goto	u4871
  2612  001C7C  EF42  F00E         	goto	u4870
  2613  001C80                     u4871:
  2614  001C80  EF4A  F00E         	goto	l3920
  2615  001C84                     u4870:
  2616  001C84  BE1E               	btfsc	(___xxtofl@val+3)^0,7,c
  2617  001C86  EF49  F00E         	goto	u4880
  2618  001C8A  EF47  F00E         	goto	u4881
  2619  001C8E                     u4881:
  2620  001C8E  EF4A  F00E         	goto	l3920
  2621  001C92                     u4880:
  2622  001C92  8E28               	bsf	(___xxtofl@arg+3)^0,7,c
  2623  001C94                     l3920:
  2624  001C94  C025  F01B         	movff	___xxtofl@arg,?___xxtofl
  2625  001C98  C026  F01C         	movff	___xxtofl@arg+1,?___xxtofl+1
  2626  001C9C  C027  F01D         	movff	___xxtofl@arg+2,?___xxtofl+2
  2627  001CA0  C028  F01E         	movff	___xxtofl@arg+3,?___xxtofl+3
  2628  001CA4                     l899:
  2629  001CA4  0012               	return		;funcret
  2630  001CA6                     __end_of___xxtofl:
  2631                           	callstack 0
  2632                           
  2633 ;; *************** function ___fltol *****************
  2634 ;; Defined at:
  2635 ;;		line 43 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/fltol.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;  f1              4   16[COMRAM] unsigned char 
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;  exp1            1   25[COMRAM] unsigned char 
  2640 ;;  sign1           1   24[COMRAM] unsigned char 
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  4   16[COMRAM] long 
  2643 ;; Registers used:
  2644 ;;		wreg, status,2, status,0
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2650 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2654 ;;Total ram usage:       10 bytes
  2655 ;; Hardware stack levels used:    1
  2656 ;; Hardware stack levels required when called:    4
  2657 ;; This function calls:
  2658 ;;		Nothing
  2659 ;; This function is called by:
  2660 ;;		_uart_printFloat
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           	psect	text14
  2665  0026C6                     __ptext14:
  2666                           	callstack 0
  2667  0026C6                     ___fltol:
  2668                           	callstack 25
  2669  0026C6  3413               	rlcf	(___fltol@f1+2)^0,w,c
  2670  0026C8  3414               	rlcf	(___fltol@f1+3)^0,w,c
  2671  0026CA  6E1A               	movwf	___fltol@exp1^0,c
  2672  0026CC  501A               	movf	___fltol@exp1^0,w,c
  2673  0026CE  A4D8               	btfss	status,2,c
  2674  0026D0  EF6C  F013         	goto	u4721
  2675  0026D4  EF6E  F013         	goto	u4720
  2676  0026D8                     u4721:
  2677  0026D8  EF78  F013         	goto	l3840
  2678  0026DC                     u4720:
  2679  0026DC                     l3836:
  2680  0026DC  0E00               	movlw	0
  2681  0026DE  6E11               	movwf	?___fltol^0,c
  2682  0026E0  0E00               	movlw	0
  2683  0026E2  6E12               	movwf	(?___fltol+1)^0,c
  2684  0026E4  0E00               	movlw	0
  2685  0026E6  6E13               	movwf	(?___fltol+2)^0,c
  2686  0026E8  0E00               	movlw	0
  2687  0026EA  6E14               	movwf	(?___fltol+3)^0,c
  2688  0026EC  EFE5  F013         	goto	l538
  2689  0026F0                     l3840:
  2690  0026F0  C011  F015         	movff	___fltol@f1,??___fltol
  2691  0026F4  C012  F016         	movff	___fltol@f1+1,??___fltol+1
  2692  0026F8  C013  F017         	movff	___fltol@f1+2,??___fltol+2
  2693  0026FC  C014  F018         	movff	___fltol@f1+3,??___fltol+3
  2694  002700  0E20               	movlw	32
  2695  002702  EF88  F013         	goto	u4730
  2696  002706                     u4735:
  2697  002706  90D8               	bcf	status,0,c
  2698  002708  3218               	rrcf	(??___fltol+3)^0,f,c
  2699  00270A  3217               	rrcf	(??___fltol+2)^0,f,c
  2700  00270C  3216               	rrcf	(??___fltol+1)^0,f,c
  2701  00270E  3215               	rrcf	??___fltol^0,f,c
  2702  002710                     u4730:
  2703  002710  2EE8               	decfsz	wreg,f,c
  2704  002712  EF83  F013         	goto	u4735
  2705  002716  5015               	movf	??___fltol^0,w,c
  2706  002718  6E19               	movwf	___fltol@sign1^0,c
  2707  00271A  8E13               	bsf	(___fltol@f1+2)^0,7,c
  2708  00271C  0EFF               	movlw	255
  2709  00271E  1611               	andwf	___fltol@f1^0,f,c
  2710  002720  0EFF               	movlw	255
  2711  002722  1612               	andwf	(___fltol@f1+1)^0,f,c
  2712  002724  0EFF               	movlw	255
  2713  002726  1613               	andwf	(___fltol@f1+2)^0,f,c
  2714  002728  0E00               	movlw	0
  2715  00272A  1614               	andwf	(___fltol@f1+3)^0,f,c
  2716  00272C  0E96               	movlw	150
  2717  00272E  5E1A               	subwf	___fltol@exp1^0,f,c
  2718  002730  BE1A               	btfsc	___fltol@exp1^0,7,c
  2719  002732  EF9F  F013         	goto	u4740
  2720  002736  EF9D  F013         	goto	u4741
  2721  00273A                     u4741:
  2722  00273A  EFB5  F013         	goto	l3860
  2723  00273E                     u4740:
  2724  00273E  501A               	movf	___fltol@exp1^0,w,c
  2725  002740  0A80               	xorlw	128
  2726  002742  0F97               	addlw	151
  2727  002744  B0D8               	btfsc	status,0,c
  2728  002746  EFA7  F013         	goto	u4751
  2729  00274A  EFA9  F013         	goto	u4750
  2730  00274E                     u4751:
  2731  00274E  EFAB  F013         	goto	l3856
  2732  002752                     u4750:
  2733  002752  EF6E  F013         	goto	l3836
  2734  002756                     l3856:
  2735  002756  90D8               	bcf	status,0,c
  2736  002758  3214               	rrcf	(___fltol@f1+3)^0,f,c
  2737  00275A  3213               	rrcf	(___fltol@f1+2)^0,f,c
  2738  00275C  3212               	rrcf	(___fltol@f1+1)^0,f,c
  2739  00275E  3211               	rrcf	___fltol@f1^0,f,c
  2740  002760  3E1A               	incfsz	___fltol@exp1^0,f,c
  2741  002762  EFAB  F013         	goto	l3856
  2742  002766  EFCD  F013         	goto	l3870
  2743  00276A                     l3860:
  2744  00276A  0E1F               	movlw	31
  2745  00276C  641A               	cpfsgt	___fltol@exp1^0,c
  2746  00276E  EFBB  F013         	goto	u4761
  2747  002772  EFBD  F013         	goto	u4760
  2748  002776                     u4761:
  2749  002776  EFC5  F013         	goto	l3868
  2750  00277A                     u4760:
  2751  00277A  EF6E  F013         	goto	l3836
  2752  00277E                     l3866:
  2753  00277E  90D8               	bcf	status,0,c
  2754  002780  3611               	rlcf	___fltol@f1^0,f,c
  2755  002782  3612               	rlcf	(___fltol@f1+1)^0,f,c
  2756  002784  3613               	rlcf	(___fltol@f1+2)^0,f,c
  2757  002786  3614               	rlcf	(___fltol@f1+3)^0,f,c
  2758  002788  061A               	decf	___fltol@exp1^0,f,c
  2759  00278A                     l3868:
  2760  00278A  501A               	movf	___fltol@exp1^0,w,c
  2761  00278C  A4D8               	btfss	status,2,c
  2762  00278E  EFCB  F013         	goto	u4771
  2763  002792  EFCD  F013         	goto	u4770
  2764  002796                     u4771:
  2765  002796  EFBF  F013         	goto	l3866
  2766  00279A                     u4770:
  2767  00279A                     l3870:
  2768  00279A  5019               	movf	___fltol@sign1^0,w,c
  2769  00279C  B4D8               	btfsc	status,2,c
  2770  00279E  EFD3  F013         	goto	u4781
  2771  0027A2  EFD5  F013         	goto	u4780
  2772  0027A6                     u4781:
  2773  0027A6  EFDD  F013         	goto	l3874
  2774  0027AA                     u4780:
  2775  0027AA  1E14               	comf	(___fltol@f1+3)^0,f,c
  2776  0027AC  1E13               	comf	(___fltol@f1+2)^0,f,c
  2777  0027AE  1E12               	comf	(___fltol@f1+1)^0,f,c
  2778  0027B0  6C11               	negf	___fltol@f1^0,c
  2779  0027B2  0E00               	movlw	0
  2780  0027B4  2212               	addwfc	(___fltol@f1+1)^0,f,c
  2781  0027B6  2213               	addwfc	(___fltol@f1+2)^0,f,c
  2782  0027B8  2214               	addwfc	(___fltol@f1+3)^0,f,c
  2783  0027BA                     l3874:
  2784  0027BA  C011  F011         	movff	___fltol@f1,?___fltol
  2785  0027BE  C012  F012         	movff	___fltol@f1+1,?___fltol+1
  2786  0027C2  C013  F013         	movff	___fltol@f1+2,?___fltol+2
  2787  0027C6  C014  F014         	movff	___fltol@f1+3,?___fltol+3
  2788  0027CA                     l538:
  2789  0027CA  0012               	return		;funcret
  2790  0027CC                     __end_of___fltol:
  2791                           	callstack 0
  2792                           
  2793 ;; *************** function ___flsub *****************
  2794 ;; Defined at:
  2795 ;;		line 245 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcadd.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  b               4   40[COMRAM] long 
  2798 ;;  a               4   44[COMRAM] long 
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;		None
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  4   40[COMRAM] long 
  2803 ;; Registers used:
  2804 ;;		wreg, status,2, status,0, cstack
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2810 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2813 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2814 ;;Total ram usage:        8 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; Hardware stack levels required when called:    5
  2817 ;; This function calls:
  2818 ;;		___fladd
  2819 ;; This function is called by:
  2820 ;;		_uart_printFloat
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           	psect	text15
  2825  003058                     __ptext15:
  2826                           	callstack 0
  2827  003058                     ___flsub:
  2828                           	callstack 24
  2829  003058  0E00               	movlw	0
  2830  00305A  1A2D               	xorwf	___flsub@a^0,f,c
  2831  00305C  0E00               	movlw	0
  2832  00305E  1A2E               	xorwf	(___flsub@a+1)^0,f,c
  2833  003060  0E00               	movlw	0
  2834  003062  1A2F               	xorwf	(___flsub@a+2)^0,f,c
  2835  003064  0E80               	movlw	128
  2836  003066  1A30               	xorwf	(___flsub@a+3)^0,f,c
  2837  003068  C029  F011         	movff	___flsub@b,___fladd@b
  2838  00306C  C02A  F012         	movff	___flsub@b+1,___fladd@b+1
  2839  003070  C02B  F013         	movff	___flsub@b+2,___fladd@b+2
  2840  003074  C02C  F014         	movff	___flsub@b+3,___fladd@b+3
  2841  003078  C02D  F015         	movff	___flsub@a,___fladd@a
  2842  00307C  C02E  F016         	movff	___flsub@a+1,___fladd@a+1
  2843  003080  C02F  F017         	movff	___flsub@a+2,___fladd@a+2
  2844  003084  C030  F018         	movff	___flsub@a+3,___fladd@a+3
  2845  003088  EC24  F008         	call	___fladd	;wreg free
  2846  00308C  C011  F029         	movff	?___fladd,?___flsub
  2847  003090  C012  F02A         	movff	?___fladd+1,?___flsub+1
  2848  003094  C013  F02B         	movff	?___fladd+2,?___flsub+2
  2849  003098  C014  F02C         	movff	?___fladd+3,?___flsub+3
  2850  00309C  0012               	return		;funcret
  2851  00309E                     __end_of___flsub:
  2852                           	callstack 0
  2853                           
  2854 ;; *************** function ___fladd *****************
  2855 ;; Defined at:
  2856 ;;		line 10 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcadd.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;  b               4   16[COMRAM] long 
  2859 ;;  a               4   20[COMRAM] long 
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;  grs             1   31[COMRAM] unsigned char 
  2862 ;;  bexp            1   30[COMRAM] unsigned char 
  2863 ;;  aexp            1   29[COMRAM] unsigned char 
  2864 ;;  signs           1   28[COMRAM] unsigned char 
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  4   16[COMRAM] unsigned char 
  2867 ;; Registers used:
  2868 ;;		wreg, status,2, status,0
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2874 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2875 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2876 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;Total ram usage:       16 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; Hardware stack levels required when called:    4
  2881 ;; This function calls:
  2882 ;;		Nothing
  2883 ;; This function is called by:
  2884 ;;		___flsub
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text16
  2889  001048                     __ptext16:
  2890                           	callstack 0
  2891  001048                     ___fladd:
  2892                           	callstack 24
  2893  001048  5014               	movf	(___fladd@b+3)^0,w,c
  2894  00104A  0B80               	andlw	128
  2895  00104C  6E1D               	movwf	___fladd@signs^0,c
  2896  00104E  5014               	movf	(___fladd@b+3)^0,w,c
  2897  001050  2414               	addwf	(___fladd@b+3)^0,w,c
  2898  001052  6E1F               	movwf	___fladd@bexp^0,c
  2899  001054  AE13               	btfss	(___fladd@b+2)^0,7,c
  2900  001056  EF2F  F008         	goto	u3891
  2901  00105A  EF31  F008         	goto	u3890
  2902  00105E                     u3891:
  2903  00105E  EF32  F008         	goto	l3320
  2904  001062                     u3890:
  2905  001062  801F               	bsf	___fladd@bexp^0,0,c
  2906  001064                     l3320:
  2907  001064  501F               	movf	___fladd@bexp^0,w,c
  2908  001066  B4D8               	btfsc	status,2,c
  2909  001068  EF38  F008         	goto	u3901
  2910  00106C  EF3A  F008         	goto	u3900
  2911  001070                     u3901:
  2912  001070  EF4F  F008         	goto	l3330
  2913  001074                     u3900:
  2914  001074  281F               	incf	___fladd@bexp^0,w,c
  2915  001076  A4D8               	btfss	status,2,c
  2916  001078  EF40  F008         	goto	u3911
  2917  00107C  EF42  F008         	goto	u3910
  2918  001080                     u3911:
  2919  001080  EF4A  F008         	goto	l3326
  2920  001084                     u3910:
  2921  001084  0E00               	movlw	0
  2922  001086  6E11               	movwf	___fladd@b^0,c
  2923  001088  0E00               	movlw	0
  2924  00108A  6E12               	movwf	(___fladd@b+1)^0,c
  2925  00108C  0E00               	movlw	0
  2926  00108E  6E13               	movwf	(___fladd@b+2)^0,c
  2927  001090  0E00               	movlw	0
  2928  001092  6E14               	movwf	(___fladd@b+3)^0,c
  2929  001094                     l3326:
  2930  001094  8E13               	bsf	(___fladd@b+2)^0,7,c
  2931  001096  0E00               	movlw	0
  2932  001098  6E14               	movwf	(___fladd@b+3)^0,c
  2933  00109A  EF57  F008         	goto	l3332
  2934  00109E                     l3330:
  2935  00109E  0E00               	movlw	0
  2936  0010A0  6E11               	movwf	___fladd@b^0,c
  2937  0010A2  0E00               	movlw	0
  2938  0010A4  6E12               	movwf	(___fladd@b+1)^0,c
  2939  0010A6  0E00               	movlw	0
  2940  0010A8  6E13               	movwf	(___fladd@b+2)^0,c
  2941  0010AA  0E00               	movlw	0
  2942  0010AC  6E14               	movwf	(___fladd@b+3)^0,c
  2943  0010AE                     l3332:
  2944  0010AE  5018               	movf	(___fladd@a+3)^0,w,c
  2945  0010B0  0B80               	andlw	128
  2946  0010B2  6E1E               	movwf	___fladd@aexp^0,c
  2947  0010B4  501D               	movf	___fladd@signs^0,w,c
  2948  0010B6  181E               	xorwf	___fladd@aexp^0,w,c
  2949  0010B8  B4D8               	btfsc	status,2,c
  2950  0010BA  EF61  F008         	goto	u3921
  2951  0010BE  EF63  F008         	goto	u3920
  2952  0010C2                     u3921:
  2953  0010C2  EF64  F008         	goto	l3338
  2954  0010C6                     u3920:
  2955  0010C6  8C1D               	bsf	___fladd@signs^0,6,c
  2956  0010C8                     l3338:
  2957  0010C8  5018               	movf	(___fladd@a+3)^0,w,c
  2958  0010CA  2418               	addwf	(___fladd@a+3)^0,w,c
  2959  0010CC  6E1E               	movwf	___fladd@aexp^0,c
  2960  0010CE  AE17               	btfss	(___fladd@a+2)^0,7,c
  2961  0010D0  EF6C  F008         	goto	u3931
  2962  0010D4  EF6E  F008         	goto	u3930
  2963  0010D8                     u3931:
  2964  0010D8  EF6F  F008         	goto	l3344
  2965  0010DC                     u3930:
  2966  0010DC  801E               	bsf	___fladd@aexp^0,0,c
  2967  0010DE                     l3344:
  2968  0010DE  501E               	movf	___fladd@aexp^0,w,c
  2969  0010E0  B4D8               	btfsc	status,2,c
  2970  0010E2  EF75  F008         	goto	u3941
  2971  0010E6  EF77  F008         	goto	u3940
  2972  0010EA                     u3941:
  2973  0010EA  EF8C  F008         	goto	l3354
  2974  0010EE                     u3940:
  2975  0010EE  281E               	incf	___fladd@aexp^0,w,c
  2976  0010F0  A4D8               	btfss	status,2,c
  2977  0010F2  EF7D  F008         	goto	u3951
  2978  0010F6  EF7F  F008         	goto	u3950
  2979  0010FA                     u3951:
  2980  0010FA  EF87  F008         	goto	l3350
  2981  0010FE                     u3950:
  2982  0010FE  0E00               	movlw	0
  2983  001100  6E15               	movwf	___fladd@a^0,c
  2984  001102  0E00               	movlw	0
  2985  001104  6E16               	movwf	(___fladd@a+1)^0,c
  2986  001106  0E00               	movlw	0
  2987  001108  6E17               	movwf	(___fladd@a+2)^0,c
  2988  00110A  0E00               	movlw	0
  2989  00110C  6E18               	movwf	(___fladd@a+3)^0,c
  2990  00110E                     l3350:
  2991  00110E  8E17               	bsf	(___fladd@a+2)^0,7,c
  2992  001110  0E00               	movlw	0
  2993  001112  6E18               	movwf	(___fladd@a+3)^0,c
  2994  001114  EF94  F008         	goto	l3356
  2995  001118                     l3354:
  2996  001118  0E00               	movlw	0
  2997  00111A  6E15               	movwf	___fladd@a^0,c
  2998  00111C  0E00               	movlw	0
  2999  00111E  6E16               	movwf	(___fladd@a+1)^0,c
  3000  001120  0E00               	movlw	0
  3001  001122  6E17               	movwf	(___fladd@a+2)^0,c
  3002  001124  0E00               	movlw	0
  3003  001126  6E18               	movwf	(___fladd@a+3)^0,c
  3004  001128                     l3356:
  3005  001128  501F               	movf	___fladd@bexp^0,w,c
  3006  00112A  5C1E               	subwf	___fladd@aexp^0,w,c
  3007  00112C  B0D8               	btfsc	status,0,c
  3008  00112E  EF9B  F008         	goto	u3961
  3009  001132  EF9D  F008         	goto	u3960
  3010  001136                     u3961:
  3011  001136  EFC4  F008         	goto	l3392
  3012  00113A                     u3960:
  3013  00113A  AC1D               	btfss	___fladd@signs^0,6,c
  3014  00113C  EFA2  F008         	goto	u3971
  3015  001140  EFA4  F008         	goto	u3970
  3016  001144                     u3971:
  3017  001144  EFA6  F008         	goto	l3362
  3018  001148                     u3970:
  3019  001148  0E80               	movlw	128
  3020  00114A  1A1D               	xorwf	___fladd@signs^0,f,c
  3021  00114C                     l3362:
  3022  00114C  C01F  F020         	movff	___fladd@bexp,___fladd@grs
  3023  001150  C01E  F01F         	movff	___fladd@aexp,___fladd@bexp
  3024  001154  C020  F01E         	movff	___fladd@grs,___fladd@aexp
  3025  001158  C011  F020         	movff	___fladd@b,___fladd@grs
  3026  00115C  C015  F011         	movff	___fladd@a,___fladd@b
  3027  001160  C020  F015         	movff	___fladd@grs,___fladd@a
  3028  001164  C012  F020         	movff	___fladd@b+1,___fladd@grs
  3029  001168  C016  F012         	movff	___fladd@a+1,___fladd@b+1
  3030  00116C  C020  F016         	movff	___fladd@grs,___fladd@a+1
  3031  001170  C013  F020         	movff	___fladd@b+2,___fladd@grs
  3032  001174  C017  F013         	movff	___fladd@a+2,___fladd@b+2
  3033  001178  C020  F017         	movff	___fladd@grs,___fladd@a+2
  3034  00117C  C014  F020         	movff	___fladd@b+3,___fladd@grs
  3035  001180  C018  F014         	movff	___fladd@a+3,___fladd@b+3
  3036  001184  C020  F018         	movff	___fladd@grs,___fladd@a+3
  3037  001188                     l3392:
  3038  001188  0E00               	movlw	0
  3039  00118A  6E20               	movwf	___fladd@grs^0,c
  3040  00118C  501F               	movf	___fladd@bexp^0,w,c
  3041  00118E  C01E  F019         	movff	___fladd@aexp,??___fladd
  3042  001192  6A1A               	clrf	(??___fladd+1)^0,c
  3043  001194  5E19               	subwf	??___fladd^0,f,c
  3044  001196  0E00               	movlw	0
  3045  001198  5A1A               	subwfb	(??___fladd+1)^0,f,c
  3046  00119A  BE1A               	btfsc	(??___fladd+1)^0,7,c
  3047  00119C  EFD9  F008         	goto	u3981
  3048  0011A0  501A               	movf	(??___fladd+1)^0,w,c
  3049  0011A2  E109               	bnz	u3980
  3050  0011A4  0E1A               	movlw	26
  3051  0011A6  5C19               	subwf	??___fladd^0,w,c
  3052  0011A8  A0D8               	btfss	status,0,c
  3053  0011AA  EFD9  F008         	goto	u3981
  3054  0011AE  EFDB  F008         	goto	u3980
  3055  0011B2                     u3981:
  3056  0011B2  EF12  F009         	goto	l770
  3057  0011B6                     u3980:
  3058  0011B6  5011               	movf	___fladd@b^0,w,c
  3059  0011B8  1012               	iorwf	(___fladd@b+1)^0,w,c
  3060  0011BA  1013               	iorwf	(___fladd@b+2)^0,w,c
  3061  0011BC  1014               	iorwf	(___fladd@b+3)^0,w,c
  3062  0011BE  A4D8               	btfss	status,2,c
  3063  0011C0  EFE4  F008         	goto	u3991
  3064  0011C4  EFE7  F008         	goto	u3990
  3065  0011C8                     u3991:
  3066  0011C8  0E01               	movlw	1
  3067  0011CA  EFE8  F008         	goto	u4000
  3068  0011CE                     u3990:
  3069  0011CE  0E00               	movlw	0
  3070  0011D0                     u4000:
  3071  0011D0  6E20               	movwf	___fladd@grs^0,c
  3072  0011D2  0E00               	movlw	0
  3073  0011D4  6E11               	movwf	___fladd@b^0,c
  3074  0011D6  0E00               	movlw	0
  3075  0011D8  6E12               	movwf	(___fladd@b+1)^0,c
  3076  0011DA  0E00               	movlw	0
  3077  0011DC  6E13               	movwf	(___fladd@b+2)^0,c
  3078  0011DE  0E00               	movlw	0
  3079  0011E0  6E14               	movwf	(___fladd@b+3)^0,c
  3080  0011E2  C01E  F01F         	movff	___fladd@aexp,___fladd@bexp
  3081  0011E6  EF1B  F009         	goto	l769
  3082  0011EA                     l771:
  3083  0011EA  A020               	btfss	___fladd@grs^0,0,c
  3084  0011EC  EFFA  F008         	goto	u4011
  3085  0011F0  EFFC  F008         	goto	u4010
  3086  0011F4                     u4011:
  3087  0011F4  EF02  F009         	goto	l3404
  3088  0011F8                     u4010:
  3089  0011F8  90D8               	bcf	status,0,c
  3090  0011FA  3020               	rrcf	___fladd@grs^0,w,c
  3091  0011FC  0901               	iorlw	1
  3092  0011FE  6E20               	movwf	___fladd@grs^0,c
  3093  001200  EF04  F009         	goto	l3406
  3094  001204                     l3404:
  3095  001204  90D8               	bcf	status,0,c
  3096  001206  3220               	rrcf	___fladd@grs^0,f,c
  3097  001208                     l3406:
  3098  001208  A011               	btfss	___fladd@b^0,0,c
  3099  00120A  EF09  F009         	goto	u4021
  3100  00120E  EF0B  F009         	goto	u4020
  3101  001212                     u4021:
  3102  001212  EF0C  F009         	goto	l3410
  3103  001216                     u4020:
  3104  001216  8E20               	bsf	___fladd@grs^0,7,c
  3105  001218                     l3410:
  3106  001218  3414               	rlcf	(___fladd@b+3)^0,w,c
  3107  00121A  3214               	rrcf	(___fladd@b+3)^0,f,c
  3108  00121C  3213               	rrcf	(___fladd@b+2)^0,f,c
  3109  00121E  3212               	rrcf	(___fladd@b+1)^0,f,c
  3110  001220  3211               	rrcf	___fladd@b^0,f,c
  3111  001222  2A1F               	incf	___fladd@bexp^0,f,c
  3112  001224                     l770:
  3113  001224  501E               	movf	___fladd@aexp^0,w,c
  3114  001226  5C1F               	subwf	___fladd@bexp^0,w,c
  3115  001228  A0D8               	btfss	status,0,c
  3116  00122A  EF19  F009         	goto	u4031
  3117  00122E  EF1B  F009         	goto	u4030
  3118  001232                     u4031:
  3119  001232  EFF5  F008         	goto	l771
  3120  001236                     u4030:
  3121  001236                     l769:
  3122  001236  BC1D               	btfsc	___fladd@signs^0,6,c
  3123  001238  EF20  F009         	goto	u4041
  3124  00123C  EF22  F009         	goto	u4040
  3125  001240                     u4041:
  3126  001240  EF62  F009         	goto	l3438
  3127  001244                     u4040:
  3128  001244  501F               	movf	___fladd@bexp^0,w,c
  3129  001246  A4D8               	btfss	status,2,c
  3130  001248  EF28  F009         	goto	u4051
  3131  00124C  EF2A  F009         	goto	u4050
  3132  001250                     u4051:
  3133  001250  EF34  F009         	goto	l3420
  3134  001254                     u4050:
  3135  001254  0E00               	movlw	0
  3136  001256  6E11               	movwf	?___fladd^0,c
  3137  001258  0E00               	movlw	0
  3138  00125A  6E12               	movwf	(?___fladd+1)^0,c
  3139  00125C  0E00               	movlw	0
  3140  00125E  6E13               	movwf	(?___fladd+2)^0,c
  3141  001260  0E00               	movlw	0
  3142  001262  6E14               	movwf	(?___fladd+3)^0,c
  3143  001264  EF83  F00A         	goto	l778
  3144  001268                     l3420:
  3145  001268  5015               	movf	___fladd@a^0,w,c
  3146  00126A  2611               	addwf	___fladd@b^0,f,c
  3147  00126C  5016               	movf	(___fladd@a+1)^0,w,c
  3148  00126E  2212               	addwfc	(___fladd@b+1)^0,f,c
  3149  001270  5017               	movf	(___fladd@a+2)^0,w,c
  3150  001272  2213               	addwfc	(___fladd@b+2)^0,f,c
  3151  001274  5018               	movf	(___fladd@a+3)^0,w,c
  3152  001276  2214               	addwfc	(___fladd@b+3)^0,f,c
  3153  001278  A014               	btfss	(___fladd@b+3)^0,0,c
  3154  00127A  EF41  F009         	goto	u4061
  3155  00127E  EF43  F009         	goto	u4060
  3156  001282                     u4061:
  3157  001282  EFEF  F009         	goto	l3474
  3158  001286                     u4060:
  3159  001286  A020               	btfss	___fladd@grs^0,0,c
  3160  001288  EF48  F009         	goto	u4071
  3161  00128C  EF4A  F009         	goto	u4070
  3162  001290                     u4071:
  3163  001290  EF50  F009         	goto	l3428
  3164  001294                     u4070:
  3165  001294  90D8               	bcf	status,0,c
  3166  001296  3020               	rrcf	___fladd@grs^0,w,c
  3167  001298  0901               	iorlw	1
  3168  00129A  6E20               	movwf	___fladd@grs^0,c
  3169  00129C  EF52  F009         	goto	l3430
  3170  0012A0                     l3428:
  3171  0012A0  90D8               	bcf	status,0,c
  3172  0012A2  3220               	rrcf	___fladd@grs^0,f,c
  3173  0012A4                     l3430:
  3174  0012A4  A011               	btfss	___fladd@b^0,0,c
  3175  0012A6  EF57  F009         	goto	u4081
  3176  0012AA  EF59  F009         	goto	u4080
  3177  0012AE                     u4081:
  3178  0012AE  EF5A  F009         	goto	l3434
  3179  0012B2                     u4080:
  3180  0012B2  8E20               	bsf	___fladd@grs^0,7,c
  3181  0012B4                     l3434:
  3182  0012B4  3414               	rlcf	(___fladd@b+3)^0,w,c
  3183  0012B6  3214               	rrcf	(___fladd@b+3)^0,f,c
  3184  0012B8  3213               	rrcf	(___fladd@b+2)^0,f,c
  3185  0012BA  3212               	rrcf	(___fladd@b+1)^0,f,c
  3186  0012BC  3211               	rrcf	___fladd@b^0,f,c
  3187  0012BE  2A1F               	incf	___fladd@bexp^0,f,c
  3188  0012C0  EFEF  F009         	goto	l3474
  3189  0012C4                     l3438:
  3190  0012C4  5015               	movf	___fladd@a^0,w,c
  3191  0012C6  5C11               	subwf	___fladd@b^0,w,c
  3192  0012C8  5016               	movf	(___fladd@a+1)^0,w,c
  3193  0012CA  5812               	subwfb	(___fladd@b+1)^0,w,c
  3194  0012CC  5017               	movf	(___fladd@a+2)^0,w,c
  3195  0012CE  5813               	subwfb	(___fladd@b+2)^0,w,c
  3196  0012D0  5014               	movf	(___fladd@b+3)^0,w,c
  3197  0012D2  0A80               	xorlw	128
  3198  0012D4  6E19               	movwf	??___fladd^0,c
  3199  0012D6  5018               	movf	(___fladd@a+3)^0,w,c
  3200  0012D8  0A80               	xorlw	128
  3201  0012DA  5819               	subwfb	??___fladd^0,w,c
  3202  0012DC  B0D8               	btfsc	status,0,c
  3203  0012DE  EF73  F009         	goto	u4091
  3204  0012E2  EF75  F009         	goto	u4090
  3205  0012E6                     u4091:
  3206  0012E6  EFA0  F009         	goto	l3448
  3207  0012EA                     u4090:
  3208  0012EA  5011               	movf	___fladd@b^0,w,c
  3209  0012EC  5C15               	subwf	___fladd@a^0,w,c
  3210  0012EE  6E19               	movwf	??___fladd^0,c
  3211  0012F0  5012               	movf	(___fladd@b+1)^0,w,c
  3212  0012F2  5816               	subwfb	(___fladd@a+1)^0,w,c
  3213  0012F4  6E1A               	movwf	(??___fladd+1)^0,c
  3214  0012F6  5013               	movf	(___fladd@b+2)^0,w,c
  3215  0012F8  5817               	subwfb	(___fladd@a+2)^0,w,c
  3216  0012FA  6E1B               	movwf	(??___fladd+2)^0,c
  3217  0012FC  5014               	movf	(___fladd@b+3)^0,w,c
  3218  0012FE  5818               	subwfb	(___fladd@a+3)^0,w,c
  3219  001300  6E1C               	movwf	(??___fladd+3)^0,c
  3220  001302  0EFF               	movlw	255
  3221  001304  2419               	addwf	??___fladd^0,w,c
  3222  001306  6E11               	movwf	___fladd@b^0,c
  3223  001308  0EFF               	movlw	255
  3224  00130A  201A               	addwfc	(??___fladd+1)^0,w,c
  3225  00130C  6E12               	movwf	(___fladd@b+1)^0,c
  3226  00130E  0EFF               	movlw	255
  3227  001310  201B               	addwfc	(??___fladd+2)^0,w,c
  3228  001312  6E13               	movwf	(___fladd@b+2)^0,c
  3229  001314  0EFF               	movlw	255
  3230  001316  201C               	addwfc	(??___fladd+3)^0,w,c
  3231  001318  6E14               	movwf	(___fladd@b+3)^0,c
  3232  00131A  0E80               	movlw	128
  3233  00131C  1A1D               	xorwf	___fladd@signs^0,f,c
  3234  00131E  6C20               	negf	___fladd@grs^0,c
  3235  001320  5020               	movf	___fladd@grs^0,w,c
  3236  001322  A4D8               	btfss	status,2,c
  3237  001324  EF96  F009         	goto	u4101
  3238  001328  EF98  F009         	goto	u4100
  3239  00132C                     u4101:
  3240  00132C  EFA8  F009         	goto	l786
  3241  001330                     u4100:
  3242  001330  0E01               	movlw	1
  3243  001332  2611               	addwf	___fladd@b^0,f,c
  3244  001334  0E00               	movlw	0
  3245  001336  2212               	addwfc	(___fladd@b+1)^0,f,c
  3246  001338  2213               	addwfc	(___fladd@b+2)^0,f,c
  3247  00133A  2214               	addwfc	(___fladd@b+3)^0,f,c
  3248  00133C  EFA8  F009         	goto	l786
  3249  001340                     l3448:
  3250  001340  5015               	movf	___fladd@a^0,w,c
  3251  001342  5E11               	subwf	___fladd@b^0,f,c
  3252  001344  5016               	movf	(___fladd@a+1)^0,w,c
  3253  001346  5A12               	subwfb	(___fladd@b+1)^0,f,c
  3254  001348  5017               	movf	(___fladd@a+2)^0,w,c
  3255  00134A  5A13               	subwfb	(___fladd@b+2)^0,f,c
  3256  00134C  5018               	movf	(___fladd@a+3)^0,w,c
  3257  00134E  5A14               	subwfb	(___fladd@b+3)^0,f,c
  3258  001350                     l786:
  3259  001350  5011               	movf	___fladd@b^0,w,c
  3260  001352  1012               	iorwf	(___fladd@b+1)^0,w,c
  3261  001354  1013               	iorwf	(___fladd@b+2)^0,w,c
  3262  001356  1014               	iorwf	(___fladd@b+3)^0,w,c
  3263  001358  A4D8               	btfss	status,2,c
  3264  00135A  EFB1  F009         	goto	u4111
  3265  00135E  EFB3  F009         	goto	u4110
  3266  001362                     u4111:
  3267  001362  EFE8  F009         	goto	l3472
  3268  001366                     u4110:
  3269  001366  5020               	movf	___fladd@grs^0,w,c
  3270  001368  A4D8               	btfss	status,2,c
  3271  00136A  EFB9  F009         	goto	u4121
  3272  00136E  EFBB  F009         	goto	u4120
  3273  001372                     u4121:
  3274  001372  EFE8  F009         	goto	l3472
  3275  001376                     u4120:
  3276  001376  0E00               	movlw	0
  3277  001378  6E11               	movwf	?___fladd^0,c
  3278  00137A  0E00               	movlw	0
  3279  00137C  6E12               	movwf	(?___fladd+1)^0,c
  3280  00137E  0E00               	movlw	0
  3281  001380  6E13               	movwf	(?___fladd+2)^0,c
  3282  001382  0E00               	movlw	0
  3283  001384  6E14               	movwf	(?___fladd+3)^0,c
  3284  001386  EF83  F00A         	goto	l778
  3285  00138A                     l3456:
  3286  00138A  90D8               	bcf	status,0,c
  3287  00138C  3611               	rlcf	___fladd@b^0,f,c
  3288  00138E  3612               	rlcf	(___fladd@b+1)^0,f,c
  3289  001390  3613               	rlcf	(___fladd@b+2)^0,f,c
  3290  001392  3614               	rlcf	(___fladd@b+3)^0,f,c
  3291  001394  AE20               	btfss	___fladd@grs^0,7,c
  3292  001396  EFCF  F009         	goto	u4131
  3293  00139A  EFD1  F009         	goto	u4130
  3294  00139E                     u4131:
  3295  00139E  EFD2  F009         	goto	l3462
  3296  0013A2                     u4130:
  3297  0013A2  8011               	bsf	___fladd@b^0,0,c
  3298  0013A4                     l3462:
  3299  0013A4  A020               	btfss	___fladd@grs^0,0,c
  3300  0013A6  EFD7  F009         	goto	u4141
  3301  0013AA  EFD9  F009         	goto	u4140
  3302  0013AE                     u4141:
  3303  0013AE  EFDD  F009         	goto	l3466
  3304  0013B2                     u4140:
  3305  0013B2  80D8               	bsf	status,0,c
  3306  0013B4  3620               	rlcf	___fladd@grs^0,f,c
  3307  0013B6  EFDF  F009         	goto	l3468
  3308  0013BA                     l3466:
  3309  0013BA  90D8               	bcf	status,0,c
  3310  0013BC  3620               	rlcf	___fladd@grs^0,f,c
  3311  0013BE                     l3468:
  3312  0013BE  501F               	movf	___fladd@bexp^0,w,c
  3313  0013C0  B4D8               	btfsc	status,2,c
  3314  0013C2  EFE5  F009         	goto	u4151
  3315  0013C6  EFE7  F009         	goto	u4150
  3316  0013CA                     u4151:
  3317  0013CA  EFE8  F009         	goto	l3472
  3318  0013CE                     u4150:
  3319  0013CE  061F               	decf	___fladd@bexp^0,f,c
  3320  0013D0                     l3472:
  3321  0013D0  AE13               	btfss	(___fladd@b+2)^0,7,c
  3322  0013D2  EFED  F009         	goto	u4161
  3323  0013D6  EFEF  F009         	goto	u4160
  3324  0013DA                     u4161:
  3325  0013DA  EFC5  F009         	goto	l3456
  3326  0013DE                     u4160:
  3327  0013DE                     l3474:
  3328  0013DE  0E00               	movlw	0
  3329  0013E0  6E1E               	movwf	___fladd@aexp^0,c
  3330  0013E2  AE20               	btfss	___fladd@grs^0,7,c
  3331  0013E4  EFF6  F009         	goto	u4171
  3332  0013E8  EFF8  F009         	goto	u4170
  3333  0013EC                     u4171:
  3334  0013EC  EF10  F00A         	goto	l795
  3335  0013F0                     u4170:
  3336  0013F0  C020  F019         	movff	___fladd@grs,??___fladd
  3337  0013F4  0E7F               	movlw	127
  3338  0013F6  1619               	andwf	??___fladd^0,f,c
  3339  0013F8  B4D8               	btfsc	status,2,c
  3340  0013FA  EF01  F00A         	goto	u4181
  3341  0013FE  EF03  F00A         	goto	u4180
  3342  001402                     u4181:
  3343  001402  EF07  F00A         	goto	l796
  3344  001406                     u4180:
  3345  001406                     l3480:
  3346  001406  0E01               	movlw	1
  3347  001408  6E1E               	movwf	___fladd@aexp^0,c
  3348  00140A  EF10  F00A         	goto	l795
  3349  00140E                     l796:
  3350  00140E  A011               	btfss	___fladd@b^0,0,c
  3351  001410  EF0C  F00A         	goto	u4191
  3352  001414  EF0E  F00A         	goto	u4190
  3353  001418                     u4191:
  3354  001418  EF10  F00A         	goto	l795
  3355  00141C                     u4190:
  3356  00141C  EF03  F00A         	goto	l3480
  3357  001420                     l795:
  3358  001420  501E               	movf	___fladd@aexp^0,w,c
  3359  001422  B4D8               	btfsc	status,2,c
  3360  001424  EF16  F00A         	goto	u4201
  3361  001428  EF18  F00A         	goto	u4200
  3362  00142C                     u4201:
  3363  00142C  EF43  F00A         	goto	l3492
  3364  001430                     u4200:
  3365  001430  0E01               	movlw	1
  3366  001432  2611               	addwf	___fladd@b^0,f,c
  3367  001434  0E00               	movlw	0
  3368  001436  2212               	addwfc	(___fladd@b+1)^0,f,c
  3369  001438  2213               	addwfc	(___fladd@b+2)^0,f,c
  3370  00143A  2214               	addwfc	(___fladd@b+3)^0,f,c
  3371  00143C  A014               	btfss	(___fladd@b+3)^0,0,c
  3372  00143E  EF23  F00A         	goto	u4211
  3373  001442  EF25  F00A         	goto	u4210
  3374  001446                     u4211:
  3375  001446  EF43  F00A         	goto	l3492
  3376  00144A                     u4210:
  3377  00144A  C011  F019         	movff	___fladd@b,??___fladd
  3378  00144E  C012  F01A         	movff	___fladd@b+1,??___fladd+1
  3379  001452  C013  F01B         	movff	___fladd@b+2,??___fladd+2
  3380  001456  C014  F01C         	movff	___fladd@b+3,??___fladd+3
  3381  00145A  341C               	rlcf	(??___fladd+3)^0,w,c
  3382  00145C  321C               	rrcf	(??___fladd+3)^0,f,c
  3383  00145E  321B               	rrcf	(??___fladd+2)^0,f,c
  3384  001460  321A               	rrcf	(??___fladd+1)^0,f,c
  3385  001462  3219               	rrcf	??___fladd^0,f,c
  3386  001464  C019  F011         	movff	??___fladd,___fladd@b
  3387  001468  C01A  F012         	movff	??___fladd+1,___fladd@b+1
  3388  00146C  C01B  F013         	movff	??___fladd+2,___fladd@b+2
  3389  001470  C01C  F014         	movff	??___fladd+3,___fladd@b+3
  3390  001474  281F               	incf	___fladd@bexp^0,w,c
  3391  001476  B4D8               	btfsc	status,2,c
  3392  001478  EF40  F00A         	goto	u4221
  3393  00147C  EF42  F00A         	goto	u4220
  3394  001480                     u4221:
  3395  001480  EF43  F00A         	goto	l3492
  3396  001484                     u4220:
  3397  001484  2A1F               	incf	___fladd@bexp^0,f,c
  3398  001486                     l3492:
  3399  001486  281F               	incf	___fladd@bexp^0,w,c
  3400  001488  B4D8               	btfsc	status,2,c
  3401  00148A  EF49  F00A         	goto	u4231
  3402  00148E  EF4B  F00A         	goto	u4230
  3403  001492                     u4231:
  3404  001492  EF53  F00A         	goto	l3496
  3405  001496                     u4230:
  3406  001496  501F               	movf	___fladd@bexp^0,w,c
  3407  001498  A4D8               	btfss	status,2,c
  3408  00149A  EF51  F00A         	goto	u4241
  3409  00149E  EF53  F00A         	goto	u4240
  3410  0014A2                     u4241:
  3411  0014A2  EF65  F00A         	goto	l3500
  3412  0014A6                     u4240:
  3413  0014A6                     l3496:
  3414  0014A6  0E00               	movlw	0
  3415  0014A8  6E11               	movwf	___fladd@b^0,c
  3416  0014AA  0E00               	movlw	0
  3417  0014AC  6E12               	movwf	(___fladd@b+1)^0,c
  3418  0014AE  0E00               	movlw	0
  3419  0014B0  6E13               	movwf	(___fladd@b+2)^0,c
  3420  0014B2  0E00               	movlw	0
  3421  0014B4  6E14               	movwf	(___fladd@b+3)^0,c
  3422  0014B6  501F               	movf	___fladd@bexp^0,w,c
  3423  0014B8  A4D8               	btfss	status,2,c
  3424  0014BA  EF61  F00A         	goto	u4251
  3425  0014BE  EF63  F00A         	goto	u4250
  3426  0014C2                     u4251:
  3427  0014C2  EF65  F00A         	goto	l3500
  3428  0014C6                     u4250:
  3429  0014C6  0E00               	movlw	0
  3430  0014C8  6E1D               	movwf	___fladd@signs^0,c
  3431  0014CA                     l3500:
  3432  0014CA  A01F               	btfss	___fladd@bexp^0,0,c
  3433  0014CC  EF6A  F00A         	goto	u4261
  3434  0014D0  EF6C  F00A         	goto	u4260
  3435  0014D4                     u4261:
  3436  0014D4  EF6F  F00A         	goto	l3504
  3437  0014D8                     u4260:
  3438  0014D8  8E13               	bsf	(___fladd@b+2)^0,7,c
  3439  0014DA  EF70  F00A         	goto	l3506
  3440  0014DE                     l3504:
  3441  0014DE  9E13               	bcf	(___fladd@b+2)^0,7,c
  3442  0014E0                     l3506:
  3443  0014E0  90D8               	bcf	status,0,c
  3444  0014E2  301F               	rrcf	___fladd@bexp^0,w,c
  3445  0014E4  6E14               	movwf	(___fladd@b+3)^0,c
  3446  0014E6  AE1D               	btfss	___fladd@signs^0,7,c
  3447  0014E8  EF78  F00A         	goto	u4271
  3448  0014EC  EF7A  F00A         	goto	u4270
  3449  0014F0                     u4271:
  3450  0014F0  EF7B  F00A         	goto	l3512
  3451  0014F4                     u4270:
  3452  0014F4  8E14               	bsf	(___fladd@b+3)^0,7,c
  3453  0014F6                     l3512:
  3454  0014F6  C011  F011         	movff	___fladd@b,?___fladd
  3455  0014FA  C012  F012         	movff	___fladd@b+1,?___fladd+1
  3456  0014FE  C013  F013         	movff	___fladd@b+2,?___fladd+2
  3457  001502  C014  F014         	movff	___fladd@b+3,?___fladd+3
  3458  001506                     l778:
  3459  001506  0012               	return		;funcret
  3460  001508                     __end_of___fladd:
  3461                           	callstack 0
  3462                           
  3463 ;; *************** function ___flmul *****************
  3464 ;; Defined at:
  3465 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcmul.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;  b               4   16[COMRAM] unsigned char 
  3468 ;;  a               4   20[COMRAM] unsigned char 
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;  prod            4   35[COMRAM] struct .
  3471 ;;  grs             4   30[COMRAM] unsigned long 
  3472 ;;  temp            2   39[COMRAM] struct .
  3473 ;;  bexp            1   34[COMRAM] unsigned char 
  3474 ;;  aexp            1   29[COMRAM] unsigned char 
  3475 ;;  sign            1   28[COMRAM] unsigned char 
  3476 ;; Return value:  Size  Location     Type
  3477 ;;                  4   16[COMRAM] unsigned char 
  3478 ;; Registers used:
  3479 ;;		wreg, status,2, status,0, prodl, prodh
  3480 ;; Tracked objects:
  3481 ;;		On entry : 0/0
  3482 ;;		On exit  : 0/0
  3483 ;;		Unchanged: 0/0
  3484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3485 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3486 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3487 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3488 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3489 ;;Total ram usage:       25 bytes
  3490 ;; Hardware stack levels used:    1
  3491 ;; Hardware stack levels required when called:    4
  3492 ;; This function calls:
  3493 ;;		Nothing
  3494 ;; This function is called by:
  3495 ;;		_uart_printFloat
  3496 ;; This function uses a non-reentrant model
  3497 ;;
  3498                           
  3499                           	psect	text17
  3500  001508                     __ptext17:
  3501                           	callstack 0
  3502  001508                     ___flmul:
  3503                           	callstack 25
  3504  001508  5014               	movf	(___flmul@b+3)^0,w,c
  3505  00150A  0B80               	andlw	128
  3506  00150C  6E1D               	movwf	___flmul@sign^0,c
  3507  00150E  5014               	movf	(___flmul@b+3)^0,w,c
  3508  001510  2414               	addwf	(___flmul@b+3)^0,w,c
  3509  001512  6E23               	movwf	___flmul@bexp^0,c
  3510  001514  AE13               	btfss	(___flmul@b+2)^0,7,c
  3511  001516  EF8F  F00A         	goto	u4411
  3512  00151A  EF91  F00A         	goto	u4410
  3513  00151E                     u4411:
  3514  00151E  EF92  F00A         	goto	l3624
  3515  001522                     u4410:
  3516  001522  8023               	bsf	___flmul@bexp^0,0,c
  3517  001524                     l3624:
  3518  001524  5023               	movf	___flmul@bexp^0,w,c
  3519  001526  B4D8               	btfsc	status,2,c
  3520  001528  EF98  F00A         	goto	u4421
  3521  00152C  EF9A  F00A         	goto	u4420
  3522  001530                     u4421:
  3523  001530  EFAD  F00A         	goto	l3632
  3524  001534                     u4420:
  3525  001534  2823               	incf	___flmul@bexp^0,w,c
  3526  001536  A4D8               	btfss	status,2,c
  3527  001538  EFA0  F00A         	goto	u4431
  3528  00153C  EFA2  F00A         	goto	u4430
  3529  001540                     u4431:
  3530  001540  EFAA  F00A         	goto	l3630
  3531  001544                     u4430:
  3532  001544  0E00               	movlw	0
  3533  001546  6E11               	movwf	___flmul@b^0,c
  3534  001548  0E00               	movlw	0
  3535  00154A  6E12               	movwf	(___flmul@b+1)^0,c
  3536  00154C  0E00               	movlw	0
  3537  00154E  6E13               	movwf	(___flmul@b+2)^0,c
  3538  001550  0E00               	movlw	0
  3539  001552  6E14               	movwf	(___flmul@b+3)^0,c
  3540  001554                     l3630:
  3541  001554  8E13               	bsf	(___flmul@b+2)^0,7,c
  3542  001556  EFB5  F00A         	goto	l3634
  3543  00155A                     l3632:
  3544  00155A  0E00               	movlw	0
  3545  00155C  6E11               	movwf	___flmul@b^0,c
  3546  00155E  0E00               	movlw	0
  3547  001560  6E12               	movwf	(___flmul@b+1)^0,c
  3548  001562  0E00               	movlw	0
  3549  001564  6E13               	movwf	(___flmul@b+2)^0,c
  3550  001566  0E00               	movlw	0
  3551  001568  6E14               	movwf	(___flmul@b+3)^0,c
  3552  00156A                     l3634:
  3553  00156A  5018               	movf	(___flmul@a+3)^0,w,c
  3554  00156C  0B80               	andlw	128
  3555  00156E  1A1D               	xorwf	___flmul@sign^0,f,c
  3556  001570  5018               	movf	(___flmul@a+3)^0,w,c
  3557  001572  2418               	addwf	(___flmul@a+3)^0,w,c
  3558  001574  6E1E               	movwf	___flmul@aexp^0,c
  3559  001576  AE17               	btfss	(___flmul@a+2)^0,7,c
  3560  001578  EFC0  F00A         	goto	u4441
  3561  00157C  EFC2  F00A         	goto	u4440
  3562  001580                     u4441:
  3563  001580  EFC3  F00A         	goto	l3642
  3564  001584                     u4440:
  3565  001584  801E               	bsf	___flmul@aexp^0,0,c
  3566  001586                     l3642:
  3567  001586  501E               	movf	___flmul@aexp^0,w,c
  3568  001588  B4D8               	btfsc	status,2,c
  3569  00158A  EFC9  F00A         	goto	u4451
  3570  00158E  EFCB  F00A         	goto	u4450
  3571  001592                     u4451:
  3572  001592  EFDE  F00A         	goto	l3650
  3573  001596                     u4450:
  3574  001596  281E               	incf	___flmul@aexp^0,w,c
  3575  001598  A4D8               	btfss	status,2,c
  3576  00159A  EFD1  F00A         	goto	u4461
  3577  00159E  EFD3  F00A         	goto	u4460
  3578  0015A2                     u4461:
  3579  0015A2  EFDB  F00A         	goto	l3648
  3580  0015A6                     u4460:
  3581  0015A6  0E00               	movlw	0
  3582  0015A8  6E15               	movwf	___flmul@a^0,c
  3583  0015AA  0E00               	movlw	0
  3584  0015AC  6E16               	movwf	(___flmul@a+1)^0,c
  3585  0015AE  0E00               	movlw	0
  3586  0015B0  6E17               	movwf	(___flmul@a+2)^0,c
  3587  0015B2  0E00               	movlw	0
  3588  0015B4  6E18               	movwf	(___flmul@a+3)^0,c
  3589  0015B6                     l3648:
  3590  0015B6  8E17               	bsf	(___flmul@a+2)^0,7,c
  3591  0015B8  EFE6  F00A         	goto	l855
  3592  0015BC                     l3650:
  3593  0015BC  0E00               	movlw	0
  3594  0015BE  6E15               	movwf	___flmul@a^0,c
  3595  0015C0  0E00               	movlw	0
  3596  0015C2  6E16               	movwf	(___flmul@a+1)^0,c
  3597  0015C4  0E00               	movlw	0
  3598  0015C6  6E17               	movwf	(___flmul@a+2)^0,c
  3599  0015C8  0E00               	movlw	0
  3600  0015CA  6E18               	movwf	(___flmul@a+3)^0,c
  3601  0015CC                     l855:
  3602  0015CC  501E               	movf	___flmul@aexp^0,w,c
  3603  0015CE  B4D8               	btfsc	status,2,c
  3604  0015D0  EFEC  F00A         	goto	u4471
  3605  0015D4  EFEE  F00A         	goto	u4470
  3606  0015D8                     u4471:
  3607  0015D8  EFF6  F00A         	goto	l3654
  3608  0015DC                     u4470:
  3609  0015DC  5023               	movf	___flmul@bexp^0,w,c
  3610  0015DE  A4D8               	btfss	status,2,c
  3611  0015E0  EFF4  F00A         	goto	u4481
  3612  0015E4  EFF6  F00A         	goto	u4480
  3613  0015E8                     u4481:
  3614  0015E8  EF00  F00B         	goto	l3658
  3615  0015EC                     u4480:
  3616  0015EC                     l3654:
  3617  0015EC  0E00               	movlw	0
  3618  0015EE  6E11               	movwf	?___flmul^0,c
  3619  0015F0  0E00               	movlw	0
  3620  0015F2  6E12               	movwf	(?___flmul+1)^0,c
  3621  0015F4  0E00               	movlw	0
  3622  0015F6  6E13               	movwf	(?___flmul+2)^0,c
  3623  0015F8  0E00               	movlw	0
  3624  0015FA  6E14               	movwf	(?___flmul+3)^0,c
  3625  0015FC  EF98  F00C         	goto	l859
  3626  001600                     l3658:
  3627  001600  5017               	movf	(___flmul@a+2)^0,w,c
  3628  001602  0211               	mulwf	___flmul@b^0,c
  3629  001604  CFF3 F028          	movff	prodl,___flmul@temp
  3630  001608  CFF4 F029          	movff	prodh,___flmul@temp+1
  3631  00160C  5028               	movf	___flmul@temp^0,w,c
  3632  00160E  6E1F               	movwf	___flmul@grs^0,c
  3633  001610  6A20               	clrf	(___flmul@grs+1)^0,c
  3634  001612  6A21               	clrf	(___flmul@grs+2)^0,c
  3635  001614  6A22               	clrf	(___flmul@grs+3)^0,c
  3636  001616  5029               	movf	(___flmul@temp+1)^0,w,c
  3637  001618  6E24               	movwf	___flmul@prod^0,c
  3638  00161A  6A25               	clrf	(___flmul@prod+1)^0,c
  3639  00161C  6A26               	clrf	(___flmul@prod+2)^0,c
  3640  00161E  6A27               	clrf	(___flmul@prod+3)^0,c
  3641  001620  5016               	movf	(___flmul@a+1)^0,w,c
  3642  001622  0212               	mulwf	(___flmul@b+1)^0,c
  3643  001624  CFF3 F028          	movff	prodl,___flmul@temp
  3644  001628  CFF4 F029          	movff	prodh,___flmul@temp+1
  3645  00162C  5028               	movf	___flmul@temp^0,w,c
  3646  00162E  261F               	addwf	___flmul@grs^0,f,c
  3647  001630  0E00               	movlw	0
  3648  001632  2220               	addwfc	(___flmul@grs+1)^0,f,c
  3649  001634  2221               	addwfc	(___flmul@grs+2)^0,f,c
  3650  001636  2222               	addwfc	(___flmul@grs+3)^0,f,c
  3651  001638  5029               	movf	(___flmul@temp+1)^0,w,c
  3652  00163A  2624               	addwf	___flmul@prod^0,f,c
  3653  00163C  0E00               	movlw	0
  3654  00163E  2225               	addwfc	(___flmul@prod+1)^0,f,c
  3655  001640  2226               	addwfc	(___flmul@prod+2)^0,f,c
  3656  001642  2227               	addwfc	(___flmul@prod+3)^0,f,c
  3657  001644  5015               	movf	___flmul@a^0,w,c
  3658  001646  0213               	mulwf	(___flmul@b+2)^0,c
  3659  001648  CFF3 F028          	movff	prodl,___flmul@temp
  3660  00164C  CFF4 F029          	movff	prodh,___flmul@temp+1
  3661  001650  5028               	movf	___flmul@temp^0,w,c
  3662  001652  261F               	addwf	___flmul@grs^0,f,c
  3663  001654  0E00               	movlw	0
  3664  001656  2220               	addwfc	(___flmul@grs+1)^0,f,c
  3665  001658  2221               	addwfc	(___flmul@grs+2)^0,f,c
  3666  00165A  2222               	addwfc	(___flmul@grs+3)^0,f,c
  3667  00165C  5029               	movf	(___flmul@temp+1)^0,w,c
  3668  00165E  2624               	addwf	___flmul@prod^0,f,c
  3669  001660  0E00               	movlw	0
  3670  001662  2225               	addwfc	(___flmul@prod+1)^0,f,c
  3671  001664  2226               	addwfc	(___flmul@prod+2)^0,f,c
  3672  001666  2227               	addwfc	(___flmul@prod+3)^0,f,c
  3673  001668  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  3674  00166C  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  3675  001670  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  3676  001674  6A1F               	clrf	___flmul@grs^0,c
  3677  001676  5015               	movf	___flmul@a^0,w,c
  3678  001678  0212               	mulwf	(___flmul@b+1)^0,c
  3679  00167A  CFF3 F028          	movff	prodl,___flmul@temp
  3680  00167E  CFF4 F029          	movff	prodh,___flmul@temp+1
  3681  001682  5028               	movf	___flmul@temp^0,w,c
  3682  001684  261F               	addwf	___flmul@grs^0,f,c
  3683  001686  5029               	movf	(___flmul@temp+1)^0,w,c
  3684  001688  2220               	addwfc	(___flmul@grs+1)^0,f,c
  3685  00168A  0E00               	movlw	0
  3686  00168C  2221               	addwfc	(___flmul@grs+2)^0,f,c
  3687  00168E  0E00               	movlw	0
  3688  001690  2222               	addwfc	(___flmul@grs+3)^0,f,c
  3689  001692  5016               	movf	(___flmul@a+1)^0,w,c
  3690  001694  0211               	mulwf	___flmul@b^0,c
  3691  001696  CFF3 F028          	movff	prodl,___flmul@temp
  3692  00169A  CFF4 F029          	movff	prodh,___flmul@temp+1
  3693  00169E  5028               	movf	___flmul@temp^0,w,c
  3694  0016A0  261F               	addwf	___flmul@grs^0,f,c
  3695  0016A2  5029               	movf	(___flmul@temp+1)^0,w,c
  3696  0016A4  2220               	addwfc	(___flmul@grs+1)^0,f,c
  3697  0016A6  0E00               	movlw	0
  3698  0016A8  2221               	addwfc	(___flmul@grs+2)^0,f,c
  3699  0016AA  0E00               	movlw	0
  3700  0016AC  2222               	addwfc	(___flmul@grs+3)^0,f,c
  3701  0016AE  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  3702  0016B2  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  3703  0016B6  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  3704  0016BA  6A1F               	clrf	___flmul@grs^0,c
  3705  0016BC  5015               	movf	___flmul@a^0,w,c
  3706  0016BE  0211               	mulwf	___flmul@b^0,c
  3707  0016C0  CFF3 F028          	movff	prodl,___flmul@temp
  3708  0016C4  CFF4 F029          	movff	prodh,___flmul@temp+1
  3709  0016C8  5028               	movf	___flmul@temp^0,w,c
  3710  0016CA  261F               	addwf	___flmul@grs^0,f,c
  3711  0016CC  5029               	movf	(___flmul@temp+1)^0,w,c
  3712  0016CE  2220               	addwfc	(___flmul@grs+1)^0,f,c
  3713  0016D0  0E00               	movlw	0
  3714  0016D2  2221               	addwfc	(___flmul@grs+2)^0,f,c
  3715  0016D4  0E00               	movlw	0
  3716  0016D6  2222               	addwfc	(___flmul@grs+3)^0,f,c
  3717  0016D8  5017               	movf	(___flmul@a+2)^0,w,c
  3718  0016DA  0212               	mulwf	(___flmul@b+1)^0,c
  3719  0016DC  CFF3 F028          	movff	prodl,___flmul@temp
  3720  0016E0  CFF4 F029          	movff	prodh,___flmul@temp+1
  3721  0016E4  5028               	movf	___flmul@temp^0,w,c
  3722  0016E6  2624               	addwf	___flmul@prod^0,f,c
  3723  0016E8  5029               	movf	(___flmul@temp+1)^0,w,c
  3724  0016EA  2225               	addwfc	(___flmul@prod+1)^0,f,c
  3725  0016EC  0E00               	movlw	0
  3726  0016EE  2226               	addwfc	(___flmul@prod+2)^0,f,c
  3727  0016F0  0E00               	movlw	0
  3728  0016F2  2227               	addwfc	(___flmul@prod+3)^0,f,c
  3729  0016F4  5016               	movf	(___flmul@a+1)^0,w,c
  3730  0016F6  0213               	mulwf	(___flmul@b+2)^0,c
  3731  0016F8  CFF3 F028          	movff	prodl,___flmul@temp
  3732  0016FC  CFF4 F029          	movff	prodh,___flmul@temp+1
  3733  001700  5028               	movf	___flmul@temp^0,w,c
  3734  001702  2624               	addwf	___flmul@prod^0,f,c
  3735  001704  5029               	movf	(___flmul@temp+1)^0,w,c
  3736  001706  2225               	addwfc	(___flmul@prod+1)^0,f,c
  3737  001708  0E00               	movlw	0
  3738  00170A  2226               	addwfc	(___flmul@prod+2)^0,f,c
  3739  00170C  0E00               	movlw	0
  3740  00170E  2227               	addwfc	(___flmul@prod+3)^0,f,c
  3741  001710  5017               	movf	(___flmul@a+2)^0,w,c
  3742  001712  0213               	mulwf	(___flmul@b+2)^0,c
  3743  001714  CFF3 F028          	movff	prodl,___flmul@temp
  3744  001718  CFF4 F029          	movff	prodh,___flmul@temp+1
  3745  00171C  5028               	movf	___flmul@temp^0,w,c
  3746  00171E  6E19               	movwf	??___flmul^0,c
  3747  001720  5029               	movf	(___flmul@temp+1)^0,w,c
  3748  001722  6E1A               	movwf	(??___flmul+1)^0,c
  3749  001724  6A1B               	clrf	(??___flmul+2)^0,c
  3750  001726  6A1C               	clrf	(??___flmul+3)^0,c
  3751  001728  C01B  F01C         	movff	??___flmul+2,??___flmul+3
  3752  00172C  C01A  F01B         	movff	??___flmul+1,??___flmul+2
  3753  001730  C019  F01A         	movff	??___flmul,??___flmul+1
  3754  001734  6A19               	clrf	??___flmul^0,c
  3755  001736  5019               	movf	??___flmul^0,w,c
  3756  001738  2624               	addwf	___flmul@prod^0,f,c
  3757  00173A  501A               	movf	(??___flmul+1)^0,w,c
  3758  00173C  2225               	addwfc	(___flmul@prod+1)^0,f,c
  3759  00173E  501B               	movf	(??___flmul+2)^0,w,c
  3760  001740  2226               	addwfc	(___flmul@prod+2)^0,f,c
  3761  001742  501C               	movf	(??___flmul+3)^0,w,c
  3762  001744  2227               	addwfc	(___flmul@prod+3)^0,f,c
  3763  001746  C01F  F019         	movff	___flmul@grs,??___flmul
  3764  00174A  C020  F01A         	movff	___flmul@grs+1,??___flmul+1
  3765  00174E  C021  F01B         	movff	___flmul@grs+2,??___flmul+2
  3766  001752  C022  F01C         	movff	___flmul@grs+3,??___flmul+3
  3767  001756  0E19               	movlw	25
  3768  001758  EFB3  F00B         	goto	u4490
  3769  00175C                     u4495:
  3770  00175C  90D8               	bcf	status,0,c
  3771  00175E  321C               	rrcf	(??___flmul+3)^0,f,c
  3772  001760  321B               	rrcf	(??___flmul+2)^0,f,c
  3773  001762  321A               	rrcf	(??___flmul+1)^0,f,c
  3774  001764  3219               	rrcf	??___flmul^0,f,c
  3775  001766                     u4490:
  3776  001766  2EE8               	decfsz	wreg,f,c
  3777  001768  EFAE  F00B         	goto	u4495
  3778  00176C  5019               	movf	??___flmul^0,w,c
  3779  00176E  2624               	addwf	___flmul@prod^0,f,c
  3780  001770  501A               	movf	(??___flmul+1)^0,w,c
  3781  001772  2225               	addwfc	(___flmul@prod+1)^0,f,c
  3782  001774  501B               	movf	(??___flmul+2)^0,w,c
  3783  001776  2226               	addwfc	(___flmul@prod+2)^0,f,c
  3784  001778  501C               	movf	(??___flmul+3)^0,w,c
  3785  00177A  2227               	addwfc	(___flmul@prod+3)^0,f,c
  3786  00177C  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  3787  001780  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  3788  001784  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  3789  001788  6A1F               	clrf	___flmul@grs^0,c
  3790  00178A  501E               	movf	___flmul@aexp^0,w,c
  3791  00178C  C023  F019         	movff	___flmul@bexp,??___flmul
  3792  001790  6A1A               	clrf	(??___flmul+1)^0,c
  3793  001792  2619               	addwf	??___flmul^0,f,c
  3794  001794  0E00               	movlw	0
  3795  001796  221A               	addwfc	(??___flmul+1)^0,f,c
  3796  001798  0E82               	movlw	130
  3797  00179A  2419               	addwf	??___flmul^0,w,c
  3798  00179C  6E28               	movwf	___flmul@temp^0,c
  3799  00179E  0EFF               	movlw	255
  3800  0017A0  201A               	addwfc	(??___flmul+1)^0,w,c
  3801  0017A2  6E29               	movwf	(___flmul@temp+1)^0,c
  3802  0017A4  EFE9  F00B         	goto	l3706
  3803  0017A8                     l3700:
  3804  0017A8  90D8               	bcf	status,0,c
  3805  0017AA  3624               	rlcf	___flmul@prod^0,f,c
  3806  0017AC  3625               	rlcf	(___flmul@prod+1)^0,f,c
  3807  0017AE  3626               	rlcf	(___flmul@prod+2)^0,f,c
  3808  0017B0  3627               	rlcf	(___flmul@prod+3)^0,f,c
  3809  0017B2  AE22               	btfss	(___flmul@grs+3)^0,7,c
  3810  0017B4  EFDE  F00B         	goto	u4501
  3811  0017B8  EFE0  F00B         	goto	u4500
  3812  0017BC                     u4501:
  3813  0017BC  EFE1  F00B         	goto	l862
  3814  0017C0                     u4500:
  3815  0017C0  8024               	bsf	___flmul@prod^0,0,c
  3816  0017C2                     l862:
  3817  0017C2  90D8               	bcf	status,0,c
  3818  0017C4  361F               	rlcf	___flmul@grs^0,f,c
  3819  0017C6  3620               	rlcf	(___flmul@grs+1)^0,f,c
  3820  0017C8  3621               	rlcf	(___flmul@grs+2)^0,f,c
  3821  0017CA  3622               	rlcf	(___flmul@grs+3)^0,f,c
  3822  0017CC  0628               	decf	___flmul@temp^0,f,c
  3823  0017CE  A0D8               	btfss	status,0,c
  3824  0017D0  0629               	decf	(___flmul@temp+1)^0,f,c
  3825  0017D2                     l3706:
  3826  0017D2  AE26               	btfss	(___flmul@prod+2)^0,7,c
  3827  0017D4  EFEE  F00B         	goto	u4511
  3828  0017D8  EFF0  F00B         	goto	u4510
  3829  0017DC                     u4511:
  3830  0017DC  EFD4  F00B         	goto	l3700
  3831  0017E0                     u4510:
  3832  0017E0  0E00               	movlw	0
  3833  0017E2  6E1E               	movwf	___flmul@aexp^0,c
  3834  0017E4  AE22               	btfss	(___flmul@grs+3)^0,7,c
  3835  0017E6  EFF7  F00B         	goto	u4521
  3836  0017EA  EFF9  F00B         	goto	u4520
  3837  0017EE                     u4521:
  3838  0017EE  EF1D  F00C         	goto	l864
  3839  0017F2                     u4520:
  3840  0017F2  0EFF               	movlw	255
  3841  0017F4  141F               	andwf	___flmul@grs^0,w,c
  3842  0017F6  6E19               	movwf	??___flmul^0,c
  3843  0017F8  0EFF               	movlw	255
  3844  0017FA  1420               	andwf	(___flmul@grs+1)^0,w,c
  3845  0017FC  6E1A               	movwf	(??___flmul+1)^0,c
  3846  0017FE  0EFF               	movlw	255
  3847  001800  1421               	andwf	(___flmul@grs+2)^0,w,c
  3848  001802  6E1B               	movwf	(??___flmul+2)^0,c
  3849  001804  0E7F               	movlw	127
  3850  001806  1422               	andwf	(___flmul@grs+3)^0,w,c
  3851  001808  6E1C               	movwf	(??___flmul+3)^0,c
  3852  00180A  5019               	movf	??___flmul^0,w,c
  3853  00180C  101A               	iorwf	(??___flmul+1)^0,w,c
  3854  00180E  101B               	iorwf	(??___flmul+2)^0,w,c
  3855  001810  101C               	iorwf	(??___flmul+3)^0,w,c
  3856  001812  B4D8               	btfsc	status,2,c
  3857  001814  EF0E  F00C         	goto	u4531
  3858  001818  EF10  F00C         	goto	u4530
  3859  00181C                     u4531:
  3860  00181C  EF14  F00C         	goto	l865
  3861  001820                     u4530:
  3862  001820                     l3714:
  3863  001820  0E01               	movlw	1
  3864  001822  6E1E               	movwf	___flmul@aexp^0,c
  3865  001824  EF1D  F00C         	goto	l864
  3866  001828                     l865:
  3867  001828  A024               	btfss	___flmul@prod^0,0,c
  3868  00182A  EF19  F00C         	goto	u4541
  3869  00182E  EF1B  F00C         	goto	u4540
  3870  001832                     u4541:
  3871  001832  EF1D  F00C         	goto	l864
  3872  001836                     u4540:
  3873  001836  EF10  F00C         	goto	l3714
  3874  00183A                     l864:
  3875  00183A  501E               	movf	___flmul@aexp^0,w,c
  3876  00183C  B4D8               	btfsc	status,2,c
  3877  00183E  EF23  F00C         	goto	u4551
  3878  001842  EF25  F00C         	goto	u4550
  3879  001846                     u4551:
  3880  001846  EF49  F00C         	goto	l3726
  3881  00184A                     u4550:
  3882  00184A  0E01               	movlw	1
  3883  00184C  2624               	addwf	___flmul@prod^0,f,c
  3884  00184E  0E00               	movlw	0
  3885  001850  2225               	addwfc	(___flmul@prod+1)^0,f,c
  3886  001852  2226               	addwfc	(___flmul@prod+2)^0,f,c
  3887  001854  2227               	addwfc	(___flmul@prod+3)^0,f,c
  3888  001856  A027               	btfss	(___flmul@prod+3)^0,0,c
  3889  001858  EF30  F00C         	goto	u4561
  3890  00185C  EF32  F00C         	goto	u4560
  3891  001860                     u4561:
  3892  001860  EF49  F00C         	goto	l3726
  3893  001864                     u4560:
  3894  001864  C024  F019         	movff	___flmul@prod,??___flmul
  3895  001868  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
  3896  00186C  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
  3897  001870  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
  3898  001874  341C               	rlcf	(??___flmul+3)^0,w,c
  3899  001876  321C               	rrcf	(??___flmul+3)^0,f,c
  3900  001878  321B               	rrcf	(??___flmul+2)^0,f,c
  3901  00187A  321A               	rrcf	(??___flmul+1)^0,f,c
  3902  00187C  3219               	rrcf	??___flmul^0,f,c
  3903  00187E  C019  F024         	movff	??___flmul,___flmul@prod
  3904  001882  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
  3905  001886  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
  3906  00188A  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
  3907  00188E  4A28               	infsnz	___flmul@temp^0,f,c
  3908  001890  2A29               	incf	(___flmul@temp+1)^0,f,c
  3909  001892                     l3726:
  3910  001892  BE29               	btfsc	(___flmul@temp+1)^0,7,c
  3911  001894  EF54  F00C         	goto	u4571
  3912  001898  5029               	movf	(___flmul@temp+1)^0,w,c
  3913  00189A  E108               	bnz	u4570
  3914  00189C  2828               	incf	___flmul@temp^0,w,c
  3915  00189E  A0D8               	btfss	status,0,c
  3916  0018A0  EF54  F00C         	goto	u4571
  3917  0018A4  EF56  F00C         	goto	u4570
  3918  0018A8                     u4571:
  3919  0018A8  EF60  F00C         	goto	l3730
  3920  0018AC                     u4570:
  3921  0018AC  0E00               	movlw	0
  3922  0018AE  6E24               	movwf	___flmul@prod^0,c
  3923  0018B0  0E00               	movlw	0
  3924  0018B2  6E25               	movwf	(___flmul@prod+1)^0,c
  3925  0018B4  0E80               	movlw	128
  3926  0018B6  6E26               	movwf	(___flmul@prod+2)^0,c
  3927  0018B8  0E7F               	movlw	127
  3928  0018BA  6E27               	movwf	(___flmul@prod+3)^0,c
  3929  0018BC  EF8E  F00C         	goto	l3742
  3930  0018C0                     l3730:
  3931  0018C0  BE29               	btfsc	(___flmul@temp+1)^0,7,c
  3932  0018C2  EF6D  F00C         	goto	u4580
  3933  0018C6  5029               	movf	(___flmul@temp+1)^0,w,c
  3934  0018C8  E106               	bnz	u4581
  3935  0018CA  0428               	decf	___flmul@temp^0,w,c
  3936  0018CC  B0D8               	btfsc	status,0,c
  3937  0018CE  EF6B  F00C         	goto	u4581
  3938  0018D2  EF6D  F00C         	goto	u4580
  3939  0018D6                     u4581:
  3940  0018D6  EF79  F00C         	goto	l872
  3941  0018DA                     u4580:
  3942  0018DA  0E00               	movlw	0
  3943  0018DC  6E24               	movwf	___flmul@prod^0,c
  3944  0018DE  0E00               	movlw	0
  3945  0018E0  6E25               	movwf	(___flmul@prod+1)^0,c
  3946  0018E2  0E00               	movlw	0
  3947  0018E4  6E26               	movwf	(___flmul@prod+2)^0,c
  3948  0018E6  0E00               	movlw	0
  3949  0018E8  6E27               	movwf	(___flmul@prod+3)^0,c
  3950  0018EA  0E00               	movlw	0
  3951  0018EC  6E1D               	movwf	___flmul@sign^0,c
  3952  0018EE  EF8E  F00C         	goto	l3742
  3953  0018F2                     l872:
  3954  0018F2  C028  F023         	movff	___flmul@temp,___flmul@bexp
  3955  0018F6  0EFF               	movlw	255
  3956  0018F8  1624               	andwf	___flmul@prod^0,f,c
  3957  0018FA  0EFF               	movlw	255
  3958  0018FC  1625               	andwf	(___flmul@prod+1)^0,f,c
  3959  0018FE  0E7F               	movlw	127
  3960  001900  1626               	andwf	(___flmul@prod+2)^0,f,c
  3961  001902  0E00               	movlw	0
  3962  001904  1627               	andwf	(___flmul@prod+3)^0,f,c
  3963  001906  A023               	btfss	___flmul@bexp^0,0,c
  3964  001908  EF88  F00C         	goto	u4591
  3965  00190C  EF8A  F00C         	goto	u4590
  3966  001910                     u4591:
  3967  001910  EF8B  F00C         	goto	l3740
  3968  001914                     u4590:
  3969  001914  8E26               	bsf	(___flmul@prod+2)^0,7,c
  3970  001916                     l3740:
  3971  001916  90D8               	bcf	status,0,c
  3972  001918  3023               	rrcf	___flmul@bexp^0,w,c
  3973  00191A  6E27               	movwf	(___flmul@prod+3)^0,c
  3974  00191C                     l3742:
  3975  00191C  501D               	movf	___flmul@sign^0,w,c
  3976  00191E  1227               	iorwf	(___flmul@prod+3)^0,f,c
  3977  001920  C024  F011         	movff	___flmul@prod,?___flmul
  3978  001924  C025  F012         	movff	___flmul@prod+1,?___flmul+1
  3979  001928  C026  F013         	movff	___flmul@prod+2,?___flmul+2
  3980  00192C  C027  F014         	movff	___flmul@prod+3,?___flmul+3
  3981  001930                     l859:
  3982  001930  0012               	return		;funcret
  3983  001932                     __end_of___flmul:
  3984                           	callstack 0
  3985                           
  3986 ;; *************** function ___awmod *****************
  3987 ;; Defined at:
  3988 ;;		line 7 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/awmod.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;  dividend        2   16[COMRAM] int 
  3991 ;;  divisor         2   18[COMRAM] int 
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  sign            1   21[COMRAM] unsigned char 
  3994 ;;  counter         1   20[COMRAM] unsigned char 
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  2   16[COMRAM] int 
  3997 ;; Registers used:
  3998 ;;		wreg, status,2, status,0
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4004 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4005 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4007 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4008 ;;Total ram usage:        6 bytes
  4009 ;; Hardware stack levels used:    1
  4010 ;; Hardware stack levels required when called:    4
  4011 ;; This function calls:
  4012 ;;		Nothing
  4013 ;; This function is called by:
  4014 ;;		_uart_printUint8
  4015 ;;		_uart_printFloat
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           	psect	text18
  4020  002C44                     __ptext18:
  4021                           	callstack 0
  4022  002C44                     ___awmod:
  4023                           	callstack 25
  4024  002C44  0E00               	movlw	0
  4025  002C46  6E16               	movwf	___awmod@sign^0,c
  4026  002C48  BE12               	btfsc	(___awmod@dividend+1)^0,7,c
  4027  002C4A  EF2B  F016         	goto	u4660
  4028  002C4E  EF29  F016         	goto	u4661
  4029  002C52                     u4661:
  4030  002C52  EF31  F016         	goto	l3806
  4031  002C56                     u4660:
  4032  002C56  6C11               	negf	___awmod@dividend^0,c
  4033  002C58  1E12               	comf	(___awmod@dividend+1)^0,f,c
  4034  002C5A  B0D8               	btfsc	status,0,c
  4035  002C5C  2A12               	incf	(___awmod@dividend+1)^0,f,c
  4036  002C5E  0E01               	movlw	1
  4037  002C60  6E16               	movwf	___awmod@sign^0,c
  4038  002C62                     l3806:
  4039  002C62  BE14               	btfsc	(___awmod@divisor+1)^0,7,c
  4040  002C64  EF38  F016         	goto	u4670
  4041  002C68  EF36  F016         	goto	u4671
  4042  002C6C                     u4671:
  4043  002C6C  EF3C  F016         	goto	l3810
  4044  002C70                     u4670:
  4045  002C70  6C13               	negf	___awmod@divisor^0,c
  4046  002C72  1E14               	comf	(___awmod@divisor+1)^0,f,c
  4047  002C74  B0D8               	btfsc	status,0,c
  4048  002C76  2A14               	incf	(___awmod@divisor+1)^0,f,c
  4049  002C78                     l3810:
  4050  002C78  5013               	movf	___awmod@divisor^0,w,c
  4051  002C7A  1014               	iorwf	(___awmod@divisor+1)^0,w,c
  4052  002C7C  B4D8               	btfsc	status,2,c
  4053  002C7E  EF43  F016         	goto	u4681
  4054  002C82  EF45  F016         	goto	u4680
  4055  002C86                     u4681:
  4056  002C86  EF69  F016         	goto	l3826
  4057  002C8A                     u4680:
  4058  002C8A  0E01               	movlw	1
  4059  002C8C  6E15               	movwf	___awmod@counter^0,c
  4060  002C8E  EF4D  F016         	goto	l3816
  4061  002C92                     l3814:
  4062  002C92  90D8               	bcf	status,0,c
  4063  002C94  3613               	rlcf	___awmod@divisor^0,f,c
  4064  002C96  3614               	rlcf	(___awmod@divisor+1)^0,f,c
  4065  002C98  2A15               	incf	___awmod@counter^0,f,c
  4066  002C9A                     l3816:
  4067  002C9A  AE14               	btfss	(___awmod@divisor+1)^0,7,c
  4068  002C9C  EF52  F016         	goto	u4691
  4069  002CA0  EF54  F016         	goto	u4690
  4070  002CA4                     u4691:
  4071  002CA4  EF49  F016         	goto	l3814
  4072  002CA8                     u4690:
  4073  002CA8                     l3818:
  4074  002CA8  5013               	movf	___awmod@divisor^0,w,c
  4075  002CAA  5C11               	subwf	___awmod@dividend^0,w,c
  4076  002CAC  5014               	movf	(___awmod@divisor+1)^0,w,c
  4077  002CAE  5812               	subwfb	(___awmod@dividend+1)^0,w,c
  4078  002CB0  A0D8               	btfss	status,0,c
  4079  002CB2  EF5D  F016         	goto	u4701
  4080  002CB6  EF5F  F016         	goto	u4700
  4081  002CBA                     u4701:
  4082  002CBA  EF63  F016         	goto	l3822
  4083  002CBE                     u4700:
  4084  002CBE  5013               	movf	___awmod@divisor^0,w,c
  4085  002CC0  5E11               	subwf	___awmod@dividend^0,f,c
  4086  002CC2  5014               	movf	(___awmod@divisor+1)^0,w,c
  4087  002CC4  5A12               	subwfb	(___awmod@dividend+1)^0,f,c
  4088  002CC6                     l3822:
  4089  002CC6  90D8               	bcf	status,0,c
  4090  002CC8  3214               	rrcf	(___awmod@divisor+1)^0,f,c
  4091  002CCA  3213               	rrcf	___awmod@divisor^0,f,c
  4092  002CCC  2E15               	decfsz	___awmod@counter^0,f,c
  4093  002CCE  EF54  F016         	goto	l3818
  4094  002CD2                     l3826:
  4095  002CD2  5016               	movf	___awmod@sign^0,w,c
  4096  002CD4  B4D8               	btfsc	status,2,c
  4097  002CD6  EF6F  F016         	goto	u4711
  4098  002CDA  EF71  F016         	goto	u4710
  4099  002CDE                     u4711:
  4100  002CDE  EF75  F016         	goto	l3830
  4101  002CE2                     u4710:
  4102  002CE2  6C11               	negf	___awmod@dividend^0,c
  4103  002CE4  1E12               	comf	(___awmod@dividend+1)^0,f,c
  4104  002CE6  B0D8               	btfsc	status,0,c
  4105  002CE8  2A12               	incf	(___awmod@dividend+1)^0,f,c
  4106  002CEA                     l3830:
  4107  002CEA  C011  F011         	movff	___awmod@dividend,?___awmod
  4108  002CEE  C012  F012         	movff	___awmod@dividend+1,?___awmod+1
  4109  002CF2  0012               	return		;funcret
  4110  002CF4                     __end_of___awmod:
  4111                           	callstack 0
  4112                           
  4113 ;; *************** function _uart_printByteHex *****************
  4114 ;; Defined at:
  4115 ;;		line 148 in file "uart.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;  a               1    wreg     unsigned char 
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;  a               1   28[COMRAM] unsigned char 
  4120 ;; Return value:  Size  Location     Type
  4121 ;;                  1    wreg      void 
  4122 ;; Registers used:
  4123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4124 ;; Tracked objects:
  4125 ;;		On entry : 0/0
  4126 ;;		On exit  : 0/0
  4127 ;;		Unchanged: 0/0
  4128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4130 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4131 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4132 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4133 ;;Total ram usage:        2 bytes
  4134 ;; Hardware stack levels used:    1
  4135 ;; Hardware stack levels required when called:    6
  4136 ;; This function calls:
  4137 ;;		_uart_putc
  4138 ;; This function is called by:
  4139 ;;		_main
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           	psect	text19
  4144  002D98                     __ptext19:
  4145                           	callstack 0
  4146  002D98                     _uart_printByteHex:
  4147                           	callstack 24
  4148                           
  4149                           ;incstack = 0
  4150                           ;uart_printByteHex@a stored from wreg
  4151  002D98  6E1D               	movwf	uart_printByteHex@a^0,c
  4152  002D9A                     
  4153                           ;uart.c: 148: void uart_printByteHex(uint8_t a);uart.c: 149: {;uart.c: 150:     uart_put
      +                          c('0');
  4154  002D9A  0E30               	movlw	48
  4155  002D9C  ECA8  F017         	call	_uart_putc
  4156                           
  4157                           ;uart.c: 151:     uart_putc('x');
  4158  002DA0  0E78               	movlw	120
  4159  002DA2  ECA8  F017         	call	_uart_putc
  4160  002DA6                     
  4161                           ;uart.c: 152:     if (((a&0xF0)>>4) < 10)
  4162  002DA6  C01D  F01C         	movff	uart_printByteHex@a,??_uart_printByteHex
  4163  002DAA  3A1C               	swapf	??_uart_printByteHex^0,f,c
  4164  002DAC  0E0F               	movlw	15
  4165  002DAE  161C               	andwf	??_uart_printByteHex^0,f,c
  4166  002DB0  0E0F               	movlw	15
  4167  002DB2  161C               	andwf	??_uart_printByteHex^0,f,c
  4168  002DB4  0E0A               	movlw	10
  4169  002DB6  601C               	cpfslt	??_uart_printByteHex^0,c
  4170  002DB8  EFE0  F016         	goto	u5061
  4171  002DBC  EFE2  F016         	goto	u5060
  4172  002DC0                     u5061:
  4173  002DC0  EFEA  F016         	goto	l4030
  4174  002DC4                     u5060:
  4175  002DC4                     
  4176                           ;uart.c: 153:         uart_putc('0' + ((a&0xF0)>>4) );
  4177  002DC4  381D               	swapf	uart_printByteHex@a^0,w,c
  4178  002DC6  0B0F               	andlw	15
  4179  002DC8  0B0F               	andlw	15
  4180  002DCA  0F30               	addlw	48
  4181  002DCC  ECA8  F017         	call	_uart_putc
  4182  002DD0  EFF0  F016         	goto	l4032
  4183  002DD4                     l4030:
  4184                           
  4185                           ;uart.c: 155:         uart_putc('A' - 10 + ((a&0xF0)>>4));
  4186  002DD4  381D               	swapf	uart_printByteHex@a^0,w,c
  4187  002DD6  0B0F               	andlw	15
  4188  002DD8  0B0F               	andlw	15
  4189  002DDA  0F37               	addlw	55
  4190  002DDC  ECA8  F017         	call	_uart_putc
  4191  002DE0                     l4032:
  4192                           
  4193                           ;uart.c: 156:     if ((a&0x0F) < 10)
  4194  002DE0  C01D  F01C         	movff	uart_printByteHex@a,??_uart_printByteHex
  4195  002DE4  0E0F               	movlw	15
  4196  002DE6  161C               	andwf	??_uart_printByteHex^0,f,c
  4197  002DE8  0E0A               	movlw	10
  4198  002DEA  601C               	cpfslt	??_uart_printByteHex^0,c
  4199  002DEC  EFFA  F016         	goto	u5071
  4200  002DF0  EFFC  F016         	goto	u5070
  4201  002DF4                     u5071:
  4202  002DF4  EF03  F017         	goto	l4036
  4203  002DF8                     u5070:
  4204  002DF8                     
  4205                           ;uart.c: 157:         uart_putc('0' + a&0x0F);
  4206  002DF8  501D               	movf	uart_printByteHex@a^0,w,c
  4207  002DFA  0F30               	addlw	48
  4208  002DFC  0B0F               	andlw	15
  4209  002DFE  ECA8  F017         	call	_uart_putc
  4210  002E02  EF08  F017         	goto	l159
  4211  002E06                     l4036:
  4212                           
  4213                           ;uart.c: 159:         uart_putc('A' - 10 + (a&0x0F));
  4214  002E06  501D               	movf	uart_printByteHex@a^0,w,c
  4215  002E08  0B0F               	andlw	15
  4216  002E0A  0F37               	addlw	55
  4217  002E0C  ECA8  F017         	call	_uart_putc
  4218  002E10                     l159:
  4219  002E10  0012               	return		;funcret
  4220  002E12                     __end_of_uart_printByteHex:
  4221                           	callstack 0
  4222                           
  4223 ;; *************** function _uart_printByteBinary *****************
  4224 ;; Defined at:
  4225 ;;		line 132 in file "uart.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;  a               1    wreg     unsigned char 
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;  a               1   29[COMRAM] unsigned char 
  4230 ;;  i               1   30[COMRAM] unsigned char 
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  1    wreg      void 
  4233 ;; Registers used:
  4234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4241 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4242 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4243 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4244 ;;Total ram usage:        4 bytes
  4245 ;; Hardware stack levels used:    1
  4246 ;; Hardware stack levels required when called:    6
  4247 ;; This function calls:
  4248 ;;		_uart_putc
  4249 ;; This function is called by:
  4250 ;;		_main
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254                           	psect	text20
  4255  002EEC                     __ptext20:
  4256                           	callstack 0
  4257  002EEC                     _uart_printByteBinary:
  4258                           	callstack 24
  4259                           
  4260                           ;incstack = 0
  4261                           ;uart_printByteBinary@a stored from wreg
  4262  002EEC  6E1E               	movwf	uart_printByteBinary@a^0,c
  4263  002EEE                     
  4264                           ;uart.c: 132: void uart_printByteBinary(uint8_t a);uart.c: 133: {;uart.c: 134:     uint8
      +                          _t i;;uart.c: 136:     uart_putc('0');
  4265  002EEE  0E30               	movlw	48
  4266  002EF0  ECA8  F017         	call	_uart_putc
  4267                           
  4268                           ;uart.c: 137:     uart_putc('b');
  4269  002EF4  0E62               	movlw	98
  4270  002EF6  ECA8  F017         	call	_uart_putc
  4271  002EFA                     
  4272                           ;uart.c: 139:     for (i = 0; i < 8; i++)
  4273  002EFA  0E00               	movlw	0
  4274  002EFC  6E1F               	movwf	uart_printByteBinary@i^0,c
  4275  002EFE                     l4014:
  4276                           
  4277                           ;uart.c: 140:     {;uart.c: 141:         if (a & (1 << (7-i)))
  4278  002EFE  501F               	movf	uart_printByteBinary@i^0,w,c
  4279  002F00  0807               	sublw	7
  4280  002F02  6E1C               	movwf	??_uart_printByteBinary^0,c
  4281  002F04  0E01               	movlw	1
  4282  002F06  6E1D               	movwf	(??_uart_printByteBinary+1)^0,c
  4283  002F08  2A1C               	incf	??_uart_printByteBinary^0,f,c
  4284  002F0A  EF89  F017         	goto	u5034
  4285  002F0E                     u5035:
  4286  002F0E  90D8               	bcf	status,0,c
  4287  002F10  361D               	rlcf	(??_uart_printByteBinary+1)^0,f,c
  4288  002F12                     u5034:
  4289  002F12  2E1C               	decfsz	??_uart_printByteBinary^0,f,c
  4290  002F14  EF87  F017         	goto	u5035
  4291  002F18  501D               	movf	(??_uart_printByteBinary+1)^0,w,c
  4292  002F1A  141E               	andwf	uart_printByteBinary@a^0,w,c
  4293  002F1C  0900               	iorlw	0
  4294  002F1E  B4D8               	btfsc	status,2,c
  4295  002F20  EF94  F017         	goto	u5041
  4296  002F24  EF96  F017         	goto	u5040
  4297  002F28                     u5041:
  4298  002F28  EF9B  F017         	goto	l4018
  4299  002F2C                     u5040:
  4300  002F2C                     
  4301                           ;uart.c: 142:             uart_putc('1');
  4302  002F2C  0E31               	movlw	49
  4303  002F2E  ECA8  F017         	call	_uart_putc
  4304  002F32  EF9E  F017         	goto	l4020
  4305  002F36                     l4018:
  4306                           
  4307                           ;uart.c: 144:             uart_putc('0');
  4308  002F36  0E30               	movlw	48
  4309  002F38  ECA8  F017         	call	_uart_putc
  4310  002F3C                     l4020:
  4311                           
  4312                           ;uart.c: 145:     }
  4313  002F3C  2A1F               	incf	uart_printByteBinary@i^0,f,c
  4314  002F3E  0E07               	movlw	7
  4315  002F40  641F               	cpfsgt	uart_printByteBinary@i^0,c
  4316  002F42  EFA5  F017         	goto	u5051
  4317  002F46  EFA7  F017         	goto	u5050
  4318  002F4A                     u5051:
  4319  002F4A  EF7F  F017         	goto	l4014
  4320  002F4E                     u5050:
  4321  002F4E  0012               	return		;funcret
  4322  002F50                     __end_of_uart_printByteBinary:
  4323                           	callstack 0
  4324                           
  4325 ;; *************** function _uart_putc *****************
  4326 ;; Defined at:
  4327 ;;		line 74 in file "uart.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;  a               1    wreg     const unsigned char 
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;  a               1   26[COMRAM] const unsigned char 
  4332 ;; Return value:  Size  Location     Type
  4333 ;;                  1    wreg      void 
  4334 ;; Registers used:
  4335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4344 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4345 ;;Total ram usage:        1 bytes
  4346 ;; Hardware stack levels used:    1
  4347 ;; Hardware stack levels required when called:    5
  4348 ;; This function calls:
  4349 ;;		_circularBuffer_isFull
  4350 ;;		_circularBuffer_write
  4351 ;; This function is called by:
  4352 ;;		_main
  4353 ;;		_uart_print
  4354 ;;		_uart_newline
  4355 ;;		_uart_printUint8
  4356 ;;		_uart_printByteBinary
  4357 ;;		_uart_printByteHex
  4358 ;;		_uart_printInt32
  4359 ;;		_uart_printFloat
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363                           	psect	text21
  4364  002F50                     __ptext21:
  4365                           	callstack 0
  4366  002F50                     _uart_putc:
  4367                           	callstack 25
  4368                           
  4369                           ;incstack = 0
  4370                           ;uart_putc@a stored from wreg
  4371  002F50  6E1B               	movwf	uart_putc@a^0,c
  4372  002F52                     
  4373                           ;uart.c: 74: void uart_putc(const char a);uart.c: 75: {;uart.c: 77:     if (!sending)
  4374  002F52  5034               	movf	_sending^0,w,c	;volatile
  4375  002F54  A4D8               	btfss	status,2,c
  4376  002F56  EFAF  F017         	goto	u3721
  4377  002F5A  EFB1  F017         	goto	u3720
  4378  002F5E                     u3721:
  4379  002F5E  EFBF  F017         	goto	l3220
  4380  002F62                     u3720:
  4381  002F62                     l115:
  4382  002F62  A2AC               	btfss	4012,1,c	;volatile
  4383  002F64  EFB6  F017         	goto	u3731
  4384  002F68  EFB8  F017         	goto	u3730
  4385  002F6C                     u3731:
  4386  002F6C  EFB1  F017         	goto	l115
  4387  002F70                     u3730:
  4388  002F70                     
  4389                           ;uart.c: 81:         TXREG1 = a;
  4390  002F70  C01B  FFAD         	movff	uart_putc@a,4013	;volatile
  4391  002F74                     
  4392                           ;uart.c: 82:         sending = 1;
  4393  002F74  0E01               	movlw	1
  4394  002F76  6E34               	movwf	_sending^0,c	;volatile
  4395  002F78                     
  4396                           ;uart.c: 84:         PIE1bits.TX1IE = 1;
  4397  002F78  889D               	bsf	157,4,c	;volatile
  4398                           
  4399                           ;uart.c: 86:     } else {
  4400  002F7A  EFD5  F017         	goto	l122
  4401  002F7E                     l3220:
  4402  002F7E  0E45               	movlw	low _txBuffer
  4403  002F80  6E11               	movwf	circularBuffer_isFull@theCircularBuffer^0,c
  4404  002F82  0E00               	movlw	high _txBuffer
  4405  002F84  6E12               	movwf	(circularBuffer_isFull@theCircularBuffer+1)^0,c
  4406  002F86  ECE6  F013         	call	_circularBuffer_isFull	;wreg free
  4407  002F8A  0900               	iorlw	0
  4408  002F8C  A4D8               	btfss	status,2,c
  4409  002F8E  EFCB  F017         	goto	u3741
  4410  002F92  EFCD  F017         	goto	u3740
  4411  002F96                     u3741:
  4412  002F96  EFBF  F017         	goto	l3220
  4413  002F9A                     u3740:
  4414  002F9A                     
  4415                           ;uart.c: 88:         circularBuffer_write(&txBuffer, a);
  4416  002F9A  0E45               	movlw	low _txBuffer
  4417  002F9C  6E11               	movwf	circularBuffer_write@theCircularBuffer^0,c
  4418  002F9E  0E00               	movlw	high _txBuffer
  4419  002FA0  6E12               	movwf	(circularBuffer_write@theCircularBuffer+1)^0,c
  4420  002FA2  C01B  F013         	movff	uart_putc@a,circularBuffer_write@toWrite
  4421  002FA6  EC53  F00E         	call	_circularBuffer_write	;wreg free
  4422  002FAA                     l122:
  4423  002FAA  0012               	return		;funcret
  4424  002FAC                     __end_of_uart_putc:
  4425                           	callstack 0
  4426                           
  4427 ;; *************** function _circularBuffer_write *****************
  4428 ;; Defined at:
  4429 ;;		line 13 in file "circularBuffer.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;  theCircularB    2   16[COMRAM] PTR volatile struct .
  4432 ;;		 -> txBuffer(5), rxBuffer(5), 
  4433 ;;  toWrite         1   18[COMRAM] unsigned char 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;  gieSet          1   25[COMRAM] unsigned char 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      unsigned char 
  4438 ;; Registers used:
  4439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4445 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4446 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4447 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4448 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4449 ;;Total ram usage:       10 bytes
  4450 ;; Hardware stack levels used:    1
  4451 ;; Hardware stack levels required when called:    4
  4452 ;; This function calls:
  4453 ;;		Nothing
  4454 ;; This function is called by:
  4455 ;;		_uart_putc
  4456 ;;		_circularBuffer_writeString
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           	psect	text22
  4461  001CA6                     __ptext22:
  4462                           	callstack 0
  4463  001CA6                     _circularBuffer_write:
  4464                           	callstack 25
  4465  001CA6                     
  4466                           ;circularBuffer.c: 13: uint8_t circularBuffer_write(volatile CircularBuffer* theCircular
      +                          Buffer, uint8_t toWrite);circularBuffer.c: 14: {;circularBuffer.c: 15:     uint8_t gieSe
      +                          t = 0;
  4467  001CA6  0E00               	movlw	0
  4468  001CA8  6E1A               	movwf	circularBuffer_write@gieSet^0,c
  4469  001CAA                     
  4470                           ;circularBuffer.c: 16:     if(INTCONbits.GIE == 1)
  4471  001CAA  AEF2               	btfss	242,7,c	;volatile
  4472  001CAC  EF5A  F00E         	goto	u3651
  4473  001CB0  EF5C  F00E         	goto	u3650
  4474  001CB4                     u3651:
  4475  001CB4  EF5F  F00E         	goto	l3182
  4476  001CB8                     u3650:
  4477  001CB8                     
  4478                           ;circularBuffer.c: 17:     {;circularBuffer.c: 18:         gieSet = 1;
  4479  001CB8  0E01               	movlw	1
  4480  001CBA  6E1A               	movwf	circularBuffer_write@gieSet^0,c
  4481  001CBC                     
  4482                           ;circularBuffer.c: 19:         INTCONbits.GIE = 0;
  4483  001CBC  9EF2               	bcf	242,7,c	;volatile
  4484  001CBE                     l3182:
  4485                           
  4486                           ;circularBuffer.c: 21:     if (((theCircularBuffer->readPointer == 0) && (theCircularBuf
      +                          fer->writePointer == theCircularBuffer->size-1)) || (theCircularBuffer->writePointer == 
      +                          theCircularBuffer->readPointer-1) )
  4487  001CBE  EE20 F003          	lfsr	2,3
  4488  001CC2  5011               	movf	circularBuffer_write@theCircularBuffer^0,w,c
  4489  001CC4  26D9               	addwf	fsr2l,f,c
  4490  001CC6  5012               	movf	(circularBuffer_write@theCircularBuffer+1)^0,w,c
  4491  001CC8  22DA               	addwfc	fsr2h,f,c
  4492  001CCA  50DF               	movf	indf2,w,c
  4493  001CCC  A4D8               	btfss	status,2,c
  4494  001CCE  EF6B  F00E         	goto	u3661
  4495  001CD2  EF6D  F00E         	goto	u3660
  4496  001CD6                     u3661:
  4497  001CD6  EF93  F00E         	goto	l3186
  4498  001CDA                     u3660:
  4499  001CDA  EE20 F004          	lfsr	2,4
  4500  001CDE  5011               	movf	circularBuffer_write@theCircularBuffer^0,w,c
  4501  001CE0  26D9               	addwf	fsr2l,f,c
  4502  001CE2  5012               	movf	(circularBuffer_write@theCircularBuffer+1)^0,w,c
  4503  001CE4  22DA               	addwfc	fsr2h,f,c
  4504  001CE6  50DF               	movf	indf2,w,c
  4505  001CE8  6E14               	movwf	??_circularBuffer_write^0,c
  4506  001CEA  6A15               	clrf	(??_circularBuffer_write+1)^0,c
  4507  001CEC  0EFF               	movlw	255
  4508  001CEE  6E16               	movwf	(??_circularBuffer_write+2)^0,c
  4509  001CF0  0EFF               	movlw	255
  4510  001CF2  6E17               	movwf	(??_circularBuffer_write+3)^0,c
  4511  001CF4  EE20 F002          	lfsr	2,2
  4512  001CF8  5011               	movf	circularBuffer_write@theCircularBuffer^0,w,c
  4513  001CFA  26D9               	addwf	fsr2l,f,c
  4514  001CFC  5012               	movf	(circularBuffer_write@theCircularBuffer+1)^0,w,c
  4515  001CFE  22DA               	addwfc	fsr2h,f,c
  4516  001D00  50DF               	movf	indf2,w,c
  4517  001D02  6E18               	movwf	(??_circularBuffer_write+4)^0,c
  4518  001D04  6A19               	clrf	(??_circularBuffer_write+5)^0,c
  4519  001D06  5016               	movf	(??_circularBuffer_write+2)^0,w,c
  4520  001D08  2618               	addwf	(??_circularBuffer_write+4)^0,f,c
  4521  001D0A  5017               	movf	(??_circularBuffer_write+3)^0,w,c
  4522  001D0C  2219               	addwfc	(??_circularBuffer_write+5)^0,f,c
  4523  001D0E  5014               	movf	??_circularBuffer_write^0,w,c
  4524  001D10  1818               	xorwf	(??_circularBuffer_write+4)^0,w,c
  4525  001D12  E109               	bnz	u3670
  4526  001D14  5015               	movf	(??_circularBuffer_write+1)^0,w,c
  4527  001D16  1819               	xorwf	(??_circularBuffer_write+5)^0,w,c
  4528  001D18  B4D8               	btfsc	status,2,c
  4529  001D1A  EF91  F00E         	goto	u3671
  4530  001D1E  EF93  F00E         	goto	u3670
  4531  001D22                     u3671:
  4532  001D22  EFB9  F00E         	goto	l3188
  4533  001D26                     u3670:
  4534  001D26                     l3186:
  4535  001D26  EE20 F004          	lfsr	2,4
  4536  001D2A  5011               	movf	circularBuffer_write@theCircularBuffer^0,w,c
  4537  001D2C  26D9               	addwf	fsr2l,f,c
  4538  001D2E  5012               	movf	(circularBuffer_write@theCircularBuffer+1)^0,w,c
  4539  001D30  22DA               	addwfc	fsr2h,f,c
  4540  001D32  50DF               	movf	indf2,w,c
  4541  001D34  6E14               	movwf	??_circularBuffer_write^0,c
  4542  001D36  6A15               	clrf	(??_circularBuffer_write+1)^0,c
  4543  001D38  0EFF               	movlw	255
  4544  001D3A  6E16               	movwf	(??_circularBuffer_write+2)^0,c
  4545  001D3C  0EFF               	movlw	255
  4546  001D3E  6E17               	movwf	(??_circularBuffer_write+3)^0,c
  4547  001D40  EE20 F003          	lfsr	2,3
  4548  001D44  5011               	movf	circularBuffer_write@theCircularBuffer^0,w,c
  4549  001D46  26D9               	addwf	fsr2l,f,c
  4550  001D48  5012               	movf	(circularBuffer_write@theCircularBuffer+1)^0,w,c
  4551  001D4A  22DA               	addwfc	fsr2h,f,c
  4552  001D4C  50DF               	movf	indf2,w,c
  4553  001D4E  6E18               	movwf	(??_circularBuffer_write+4)^0,c
  4554  001D50  6A19               	clrf	(??_circularBuffer_write+5)^0,c
  4555  001D52  5016               	movf	(??_circularBuffer_write+2)^0,w,c
  4556  001D54  2618               	addwf	(??_circularBuffer_write+4)^0,f,c
  4557  001D56  5017               	movf	(??_circularBuffer_write+3)^0,w,c
  4558  001D58  2219               	addwfc	(??_circularBuffer_write+5)^0,f,c
  4559  001D5A  5014               	movf	??_circularBuffer_write^0,w,c
  4560  001D5C  1818               	xorwf	(??_circularBuffer_write+4)^0,w,c
  4561  001D5E  E107               	bnz	u3681
  4562  001D60  5015               	movf	(??_circularBuffer_write+1)^0,w,c
  4563  001D62  1819               	xorwf	(??_circularBuffer_write+5)^0,w,c
  4564  001D64  A4D8               	btfss	status,2,c
  4565  001D66  EFB7  F00E         	goto	u3681
  4566  001D6A  EFB9  F00E         	goto	u3680
  4567  001D6E                     u3681:
  4568  001D6E  EFC5  F00E         	goto	l3198
  4569  001D72                     u3680:
  4570  001D72                     l3188:
  4571                           
  4572                           ;circularBuffer.c: 22:     {;circularBuffer.c: 24:         if(gieSet) INTCONbits.GIE = 1
      +                          ;
  4573  001D72  501A               	movf	circularBuffer_write@gieSet^0,w,c
  4574  001D74  B4D8               	btfsc	status,2,c
  4575  001D76  EFBF  F00E         	goto	u3691
  4576  001D7A  EFC1  F00E         	goto	u3690
  4577  001D7E                     u3691:
  4578  001D7E  EFC2  F00E         	goto	l3192
  4579  001D82                     u3690:
  4580  001D82  8EF2               	bsf	242,7,c	;volatile
  4581  001D84                     l3192:
  4582                           
  4583                           ;circularBuffer.c: 25:         return 0;
  4584  001D84  0E00               	movlw	0
  4585  001D86  EF0B  F00F         	goto	l200
  4586  001D8A                     l3198:
  4587                           
  4588                           ;circularBuffer.c: 27:         theCircularBuffer->buffer[theCircularBuffer->writePointer
      +                          ++] = toWrite;
  4589  001D8A  EE20 F004          	lfsr	2,4
  4590  001D8E  5011               	movf	circularBuffer_write@theCircularBuffer^0,w,c
  4591  001D90  26D9               	addwf	fsr2l,f,c
  4592  001D92  5012               	movf	(circularBuffer_write@theCircularBuffer+1)^0,w,c
  4593  001D94  22DA               	addwfc	fsr2h,f,c
  4594  001D96  50DF               	movf	indf2,w,c
  4595  001D98  6E14               	movwf	??_circularBuffer_write^0,c
  4596  001D9A  C011  FFD9         	movff	circularBuffer_write@theCircularBuffer,fsr2l
  4597  001D9E  C012  FFDA         	movff	circularBuffer_write@theCircularBuffer+1,fsr2h
  4598  001DA2  CFDE F015          	movff	postinc2,??_circularBuffer_write+1
  4599  001DA6  CFDD F016          	movff	postdec2,??_circularBuffer_write+2
  4600  001DAA  5014               	movf	??_circularBuffer_write^0,w,c
  4601  001DAC  2415               	addwf	(??_circularBuffer_write+1)^0,w,c
  4602  001DAE  6ED9               	movwf	fsr2l,c
  4603  001DB0  0E00               	movlw	0
  4604  001DB2  2016               	addwfc	(??_circularBuffer_write+2)^0,w,c
  4605  001DB4  6EDA               	movwf	fsr2h,c
  4606  001DB6  C013  FFDF         	movff	circularBuffer_write@toWrite,indf2
  4607  001DBA  EE20 F004          	lfsr	2,4
  4608  001DBE  5011               	movf	circularBuffer_write@theCircularBuffer^0,w,c
  4609  001DC0  26D9               	addwf	fsr2l,f,c
  4610  001DC2  5012               	movf	(circularBuffer_write@theCircularBuffer+1)^0,w,c
  4611  001DC4  22DA               	addwfc	fsr2h,f,c
  4612  001DC6  2ADF               	incf	indf2,f,c
  4613  001DC8                     
  4614                           ;circularBuffer.c: 28:         if (theCircularBuffer->writePointer == theCircularBuffer-
      +                          >size)
  4615  001DC8  EE20 F002          	lfsr	2,2
  4616  001DCC  5011               	movf	circularBuffer_write@theCircularBuffer^0,w,c
  4617  001DCE  26D9               	addwf	fsr2l,f,c
  4618  001DD0  5012               	movf	(circularBuffer_write@theCircularBuffer+1)^0,w,c
  4619  001DD2  22DA               	addwfc	fsr2h,f,c
  4620  001DD4  EE10 F004          	lfsr	1,4
  4621  001DD8  5011               	movf	circularBuffer_write@theCircularBuffer^0,w,c
  4622  001DDA  26E1               	addwf	fsr1l,f,c
  4623  001DDC  5012               	movf	(circularBuffer_write@theCircularBuffer+1)^0,w,c
  4624  001DDE  22E2               	addwfc	fsr1h,f,c
  4625  001DE0  50DE               	movf	postinc2,w,c
  4626  001DE2  18E6               	xorwf	postinc1,w,c
  4627  001DE4  A4D8               	btfss	status,2,c
  4628  001DE6  EFF7  F00E         	goto	u3701
  4629  001DEA  EFF9  F00E         	goto	u3700
  4630  001DEE                     u3701:
  4631  001DEE  EF01  F00F         	goto	l3204
  4632  001DF2                     u3700:
  4633  001DF2                     
  4634                           ;circularBuffer.c: 29:             theCircularBuffer->writePointer = 0;
  4635  001DF2  EE20 F004          	lfsr	2,4
  4636  001DF6  5011               	movf	circularBuffer_write@theCircularBuffer^0,w,c
  4637  001DF8  26D9               	addwf	fsr2l,f,c
  4638  001DFA  5012               	movf	(circularBuffer_write@theCircularBuffer+1)^0,w,c
  4639  001DFC  22DA               	addwfc	fsr2h,f,c
  4640  001DFE  0E00               	movlw	0
  4641  001E00  6EDF               	movwf	indf2,c
  4642  001E02                     l3204:
  4643                           
  4644                           ;circularBuffer.c: 31:         if(gieSet) INTCONbits.GIE = 1;
  4645  001E02  501A               	movf	circularBuffer_write@gieSet^0,w,c
  4646  001E04  B4D8               	btfsc	status,2,c
  4647  001E06  EF07  F00F         	goto	u3711
  4648  001E0A  EF09  F00F         	goto	u3710
  4649  001E0E                     u3711:
  4650  001E0E  EF0A  F00F         	goto	l3208
  4651  001E12                     u3710:
  4652  001E12  8EF2               	bsf	242,7,c	;volatile
  4653  001E14                     l3208:
  4654                           
  4655                           ;circularBuffer.c: 32:         return 1;
  4656  001E14  0E01               	movlw	1
  4657  001E16                     l200:
  4658  001E16  0012               	return		;funcret
  4659  001E18                     __end_of_circularBuffer_write:
  4660                           	callstack 0
  4661                           
  4662 ;; *************** function _circularBuffer_isFull *****************
  4663 ;; Defined at:
  4664 ;;		line 83 in file "circularBuffer.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;  theCircularB    2   16[COMRAM] PTR volatile struct .
  4667 ;;		 -> txBuffer(5), 
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;  gieSet          1   24[COMRAM] unsigned char 
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  1    wreg      unsigned char 
  4672 ;; Registers used:
  4673 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4679 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;Total ram usage:        9 bytes
  4684 ;; Hardware stack levels used:    1
  4685 ;; Hardware stack levels required when called:    4
  4686 ;; This function calls:
  4687 ;;		Nothing
  4688 ;; This function is called by:
  4689 ;;		_uart_putc
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text23
  4694  0027CC                     __ptext23:
  4695                           	callstack 0
  4696  0027CC                     _circularBuffer_isFull:
  4697                           	callstack 25
  4698  0027CC                     
  4699                           ;circularBuffer.c: 83: uint8_t circularBuffer_isFull(volatile CircularBuffer* theCircula
      +                          rBuffer);circularBuffer.c: 84: {;circularBuffer.c: 85:     uint8_t gieSet = 0;
  4700  0027CC  0E00               	movlw	0
  4701  0027CE  6E19               	movwf	circularBuffer_isFull@gieSet^0,c
  4702  0027D0                     
  4703                           ;circularBuffer.c: 86:     if(INTCONbits.GIE == 1)
  4704  0027D0  AEF2               	btfss	242,7,c	;volatile
  4705  0027D2  EFED  F013         	goto	u3591
  4706  0027D6  EFEF  F013         	goto	u3590
  4707  0027DA                     u3591:
  4708  0027DA  EFF2  F013         	goto	l3150
  4709  0027DE                     u3590:
  4710  0027DE                     
  4711                           ;circularBuffer.c: 87:     {;circularBuffer.c: 88:         gieSet = 1;
  4712  0027DE  0E01               	movlw	1
  4713  0027E0  6E19               	movwf	circularBuffer_isFull@gieSet^0,c
  4714  0027E2                     
  4715                           ;circularBuffer.c: 89:         INTCONbits.GIE = 0;
  4716  0027E2  9EF2               	bcf	242,7,c	;volatile
  4717  0027E4                     l3150:
  4718                           
  4719                           ;circularBuffer.c: 91:     if (((theCircularBuffer->readPointer == 0) && (theCircularBuf
      +                          fer->writePointer == theCircularBuffer->size - 1)) ||
  4720  0027E4  EE20 F003          	lfsr	2,3
  4721  0027E8  5011               	movf	circularBuffer_isFull@theCircularBuffer^0,w,c
  4722  0027EA  26D9               	addwf	fsr2l,f,c
  4723  0027EC  5012               	movf	(circularBuffer_isFull@theCircularBuffer+1)^0,w,c
  4724  0027EE  22DA               	addwfc	fsr2h,f,c
  4725  0027F0  50DF               	movf	indf2,w,c
  4726  0027F2  A4D8               	btfss	status,2,c
  4727  0027F4  EFFE  F013         	goto	u3601
  4728  0027F8  EF00  F014         	goto	u3600
  4729  0027FC                     u3601:
  4730  0027FC  EF26  F014         	goto	l3154
  4731  002800                     u3600:
  4732  002800  EE20 F004          	lfsr	2,4
  4733  002804  5011               	movf	circularBuffer_isFull@theCircularBuffer^0,w,c
  4734  002806  26D9               	addwf	fsr2l,f,c
  4735  002808  5012               	movf	(circularBuffer_isFull@theCircularBuffer+1)^0,w,c
  4736  00280A  22DA               	addwfc	fsr2h,f,c
  4737  00280C  50DF               	movf	indf2,w,c
  4738  00280E  6E13               	movwf	??_circularBuffer_isFull^0,c
  4739  002810  6A14               	clrf	(??_circularBuffer_isFull+1)^0,c
  4740  002812  0EFF               	movlw	255
  4741  002814  6E15               	movwf	(??_circularBuffer_isFull+2)^0,c
  4742  002816  0EFF               	movlw	255
  4743  002818  6E16               	movwf	(??_circularBuffer_isFull+3)^0,c
  4744  00281A  EE20 F002          	lfsr	2,2
  4745  00281E  5011               	movf	circularBuffer_isFull@theCircularBuffer^0,w,c
  4746  002820  26D9               	addwf	fsr2l,f,c
  4747  002822  5012               	movf	(circularBuffer_isFull@theCircularBuffer+1)^0,w,c
  4748  002824  22DA               	addwfc	fsr2h,f,c
  4749  002826  50DF               	movf	indf2,w,c
  4750  002828  6E17               	movwf	(??_circularBuffer_isFull+4)^0,c
  4751  00282A  6A18               	clrf	(??_circularBuffer_isFull+5)^0,c
  4752  00282C  5015               	movf	(??_circularBuffer_isFull+2)^0,w,c
  4753  00282E  2617               	addwf	(??_circularBuffer_isFull+4)^0,f,c
  4754  002830  5016               	movf	(??_circularBuffer_isFull+3)^0,w,c
  4755  002832  2218               	addwfc	(??_circularBuffer_isFull+5)^0,f,c
  4756  002834  5013               	movf	??_circularBuffer_isFull^0,w,c
  4757  002836  1817               	xorwf	(??_circularBuffer_isFull+4)^0,w,c
  4758  002838  E109               	bnz	u3610
  4759  00283A  5014               	movf	(??_circularBuffer_isFull+1)^0,w,c
  4760  00283C  1818               	xorwf	(??_circularBuffer_isFull+5)^0,w,c
  4761  00283E  B4D8               	btfsc	status,2,c
  4762  002840  EF24  F014         	goto	u3611
  4763  002844  EF26  F014         	goto	u3610
  4764  002848                     u3611:
  4765  002848  EF4C  F014         	goto	l3156
  4766  00284C                     u3610:
  4767  00284C                     l3154:
  4768  00284C  EE20 F004          	lfsr	2,4
  4769  002850  5011               	movf	circularBuffer_isFull@theCircularBuffer^0,w,c
  4770  002852  26D9               	addwf	fsr2l,f,c
  4771  002854  5012               	movf	(circularBuffer_isFull@theCircularBuffer+1)^0,w,c
  4772  002856  22DA               	addwfc	fsr2h,f,c
  4773  002858  50DF               	movf	indf2,w,c
  4774  00285A  6E13               	movwf	??_circularBuffer_isFull^0,c
  4775  00285C  6A14               	clrf	(??_circularBuffer_isFull+1)^0,c
  4776  00285E  0EFF               	movlw	255
  4777  002860  6E15               	movwf	(??_circularBuffer_isFull+2)^0,c
  4778  002862  0EFF               	movlw	255
  4779  002864  6E16               	movwf	(??_circularBuffer_isFull+3)^0,c
  4780  002866  EE20 F003          	lfsr	2,3
  4781  00286A  5011               	movf	circularBuffer_isFull@theCircularBuffer^0,w,c
  4782  00286C  26D9               	addwf	fsr2l,f,c
  4783  00286E  5012               	movf	(circularBuffer_isFull@theCircularBuffer+1)^0,w,c
  4784  002870  22DA               	addwfc	fsr2h,f,c
  4785  002872  50DF               	movf	indf2,w,c
  4786  002874  6E17               	movwf	(??_circularBuffer_isFull+4)^0,c
  4787  002876  6A18               	clrf	(??_circularBuffer_isFull+5)^0,c
  4788  002878  5015               	movf	(??_circularBuffer_isFull+2)^0,w,c
  4789  00287A  2617               	addwf	(??_circularBuffer_isFull+4)^0,f,c
  4790  00287C  5016               	movf	(??_circularBuffer_isFull+3)^0,w,c
  4791  00287E  2218               	addwfc	(??_circularBuffer_isFull+5)^0,f,c
  4792  002880  5013               	movf	??_circularBuffer_isFull^0,w,c
  4793  002882  1817               	xorwf	(??_circularBuffer_isFull+4)^0,w,c
  4794  002884  E107               	bnz	u3621
  4795  002886  5014               	movf	(??_circularBuffer_isFull+1)^0,w,c
  4796  002888  1818               	xorwf	(??_circularBuffer_isFull+5)^0,w,c
  4797  00288A  A4D8               	btfss	status,2,c
  4798  00288C  EF4A  F014         	goto	u3621
  4799  002890  EF4C  F014         	goto	u3620
  4800  002894                     u3621:
  4801  002894  EF58  F014         	goto	l3166
  4802  002898                     u3620:
  4803  002898                     l3156:
  4804                           
  4805                           ;circularBuffer.c: 93:     {;circularBuffer.c: 95:         if(gieSet) INTCONbits.GIE = 1
      +                          ;
  4806  002898  5019               	movf	circularBuffer_isFull@gieSet^0,w,c
  4807  00289A  B4D8               	btfsc	status,2,c
  4808  00289C  EF52  F014         	goto	u3631
  4809  0028A0  EF54  F014         	goto	u3630
  4810  0028A4                     u3631:
  4811  0028A4  EF55  F014         	goto	l3160
  4812  0028A8                     u3630:
  4813  0028A8  8EF2               	bsf	242,7,c	;volatile
  4814  0028AA                     l3160:
  4815                           
  4816                           ;circularBuffer.c: 96:         return 1;
  4817  0028AA  0E01               	movlw	1
  4818  0028AC  EF62  F014         	goto	l230
  4819  0028B0                     l3166:
  4820                           
  4821                           ;circularBuffer.c: 99:         if(gieSet) INTCONbits.GIE = 1;
  4822  0028B0  5019               	movf	circularBuffer_isFull@gieSet^0,w,c
  4823  0028B2  B4D8               	btfsc	status,2,c
  4824  0028B4  EF5E  F014         	goto	u3641
  4825  0028B8  EF60  F014         	goto	u3640
  4826  0028BC                     u3641:
  4827  0028BC  EF61  F014         	goto	l3170
  4828  0028C0                     u3640:
  4829  0028C0  8EF2               	bsf	242,7,c	;volatile
  4830  0028C2                     l3170:
  4831                           
  4832                           ;circularBuffer.c: 100:         return 0;
  4833  0028C2  0E00               	movlw	0
  4834  0028C4                     l230:
  4835  0028C4  0012               	return		;funcret
  4836  0028C6                     __end_of_circularBuffer_isFull:
  4837                           	callstack 0
  4838                           
  4839 ;; *************** function _uart_init *****************
  4840 ;; Defined at:
  4841 ;;		line 16 in file "uart.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  baudrate        4   29[COMRAM] const unsigned long 
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;  a               2   37[COMRAM] short 
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  1    wreg      void 
  4848 ;; Registers used:
  4849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4855 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4856 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4857 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4858 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4859 ;;Total ram usage:       10 bytes
  4860 ;; Hardware stack levels used:    1
  4861 ;; Hardware stack levels required when called:    5
  4862 ;; This function calls:
  4863 ;;		___lldiv
  4864 ;;		_circularBuffer_init
  4865 ;; This function is called by:
  4866 ;;		_main
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           	psect	text24
  4871  002232                     __ptext24:
  4872                           	callstack 0
  4873  002232                     _uart_init:
  4874                           	callstack 25
  4875  002232                     
  4876                           ;uart.c: 16: void uart_init(const uint32_t baudrate);uart.c: 17: {;uart.c: 19:     circu
      +                          larBuffer_init(&rxBuffer, rxBufferMemory, 16);
  4877  002232  0E4A               	movlw	low _rxBuffer
  4878  002234  6E11               	movwf	circularBuffer_init@theCircularBuffer^0,c
  4879  002236  0E00               	movlw	high _rxBuffer
  4880  002238  6E12               	movwf	(circularBuffer_init@theCircularBuffer+1)^0,c
  4881  00223A  0E35               	movlw	low _rxBufferMemory
  4882  00223C  6E13               	movwf	circularBuffer_init@theBuffer^0,c
  4883  00223E  0E00               	movlw	high _rxBufferMemory
  4884  002240  6E14               	movwf	(circularBuffer_init@theBuffer+1)^0,c
  4885  002242  0E10               	movlw	16
  4886  002244  6E15               	movwf	circularBuffer_init@size^0,c
  4887  002246  EC4F  F018         	call	_circularBuffer_init	;wreg free
  4888                           
  4889                           ;uart.c: 20:     circularBuffer_init(&txBuffer, txBufferMemory, 64);
  4890  00224A  0E45               	movlw	low _txBuffer
  4891  00224C  6E11               	movwf	circularBuffer_init@theCircularBuffer^0,c
  4892  00224E  0E00               	movlw	high _txBuffer
  4893  002250  6E12               	movwf	(circularBuffer_init@theCircularBuffer+1)^0,c
  4894  002252  0E60               	movlw	low _txBufferMemory
  4895  002254  6E13               	movwf	circularBuffer_init@theBuffer^0,c
  4896  002256  0E00               	movlw	high _txBufferMemory
  4897  002258  6E14               	movwf	(circularBuffer_init@theBuffer+1)^0,c
  4898  00225A  0E40               	movlw	64
  4899  00225C  6E15               	movwf	circularBuffer_init@size^0,c
  4900  00225E  EC4F  F018         	call	_circularBuffer_init	;wreg free
  4901  002262                     
  4902                           ;uart.c: 22:     sending = 0;
  4903  002262  0E00               	movlw	0
  4904  002264  6E34               	movwf	_sending^0,c	;volatile
  4905  002266                     
  4906                           ;uart.c: 24:     int16_t a = ( 12000000UL / (16 * baudrate) ) - 1;
  4907  002266  0E00               	movlw	0
  4908  002268  6E11               	movwf	___lldiv@dividend^0,c
  4909  00226A  0E1B               	movlw	27
  4910  00226C  6E12               	movwf	(___lldiv@dividend+1)^0,c
  4911  00226E  0EB7               	movlw	183
  4912  002270  6E13               	movwf	(___lldiv@dividend+2)^0,c
  4913  002272  0E00               	movlw	0
  4914  002274  6E14               	movwf	(___lldiv@dividend+3)^0,c
  4915  002276  C01E  F022         	movff	uart_init@baudrate,??_uart_init
  4916  00227A  C01F  F023         	movff	uart_init@baudrate+1,??_uart_init+1
  4917  00227E  C020  F024         	movff	uart_init@baudrate+2,??_uart_init+2
  4918  002282  C021  F025         	movff	uart_init@baudrate+3,??_uart_init+3
  4919  002286  0E04               	movlw	4
  4920  002288                     u4945:
  4921  002288  90D8               	bcf	status,0,c
  4922  00228A  3622               	rlcf	??_uart_init^0,f,c
  4923  00228C  3623               	rlcf	(??_uart_init+1)^0,f,c
  4924  00228E  3624               	rlcf	(??_uart_init+2)^0,f,c
  4925  002290  3625               	rlcf	(??_uart_init+3)^0,f,c
  4926  002292  2EE8               	decfsz	wreg,f,c
  4927  002294  EF44  F011         	goto	u4945
  4928  002298  C022  F015         	movff	??_uart_init,___lldiv@divisor
  4929  00229C  C023  F016         	movff	??_uart_init+1,___lldiv@divisor+1
  4930  0022A0  C024  F017         	movff	??_uart_init+2,___lldiv@divisor+2
  4931  0022A4  C025  F018         	movff	??_uart_init+3,___lldiv@divisor+3
  4932  0022A8  EC7A  F016         	call	___lldiv	;wreg free
  4933  0022AC  0EFF               	movlw	255
  4934  0022AE  2411               	addwf	?___lldiv^0,w,c
  4935  0022B0  6E26               	movwf	uart_init@a^0,c
  4936  0022B2  0EFF               	movlw	255
  4937  0022B4  2012               	addwfc	(?___lldiv+1)^0,w,c
  4938  0022B6  6E27               	movwf	(uart_init@a+1)^0,c
  4939  0022B8                     
  4940                           ;uart.c: 26:     if (a < 0)
  4941  0022B8  BE27               	btfsc	(uart_init@a+1)^0,7,c
  4942  0022BA  EF63  F011         	goto	u4950
  4943  0022BE  EF61  F011         	goto	u4951
  4944  0022C2                     u4951:
  4945  0022C2  EF67  F011         	goto	l3964
  4946  0022C6                     u4950:
  4947  0022C6                     
  4948                           ;uart.c: 27:       a = 0;
  4949  0022C6  0E00               	movlw	0
  4950  0022C8  6E27               	movwf	(uart_init@a+1)^0,c
  4951  0022CA  0E00               	movlw	0
  4952  0022CC  6E26               	movwf	uart_init@a^0,c
  4953  0022CE                     l3964:
  4954                           
  4955                           ;uart.c: 29:     if (a > 255)
  4956  0022CE  BE27               	btfsc	(uart_init@a+1)^0,7,c
  4957  0022D0  EF70  F011         	goto	u4961
  4958  0022D4  0427               	decf	(uart_init@a+1)^0,w,c
  4959  0022D6  A0D8               	btfss	status,0,c
  4960  0022D8  EF70  F011         	goto	u4961
  4961  0022DC  EF72  F011         	goto	u4960
  4962  0022E0                     u4961:
  4963  0022E0  EFAF  F011         	goto	l94
  4964  0022E4                     u4960:
  4965  0022E4                     
  4966                           ;uart.c: 30:     {;uart.c: 31:       a = ( 12000000UL / (64 * baudrate) ) - 1;
  4967  0022E4  0E00               	movlw	0
  4968  0022E6  6E11               	movwf	___lldiv@dividend^0,c
  4969  0022E8  0E1B               	movlw	27
  4970  0022EA  6E12               	movwf	(___lldiv@dividend+1)^0,c
  4971  0022EC  0EB7               	movlw	183
  4972  0022EE  6E13               	movwf	(___lldiv@dividend+2)^0,c
  4973  0022F0  0E00               	movlw	0
  4974  0022F2  6E14               	movwf	(___lldiv@dividend+3)^0,c
  4975  0022F4  C01E  F022         	movff	uart_init@baudrate,??_uart_init
  4976  0022F8  C01F  F023         	movff	uart_init@baudrate+1,??_uart_init+1
  4977  0022FC  C020  F024         	movff	uart_init@baudrate+2,??_uart_init+2
  4978  002300  C021  F025         	movff	uart_init@baudrate+3,??_uart_init+3
  4979  002304  0E06               	movlw	6
  4980  002306                     u4975:
  4981  002306  90D8               	bcf	status,0,c
  4982  002308  3622               	rlcf	??_uart_init^0,f,c
  4983  00230A  3623               	rlcf	(??_uart_init+1)^0,f,c
  4984  00230C  3624               	rlcf	(??_uart_init+2)^0,f,c
  4985  00230E  3625               	rlcf	(??_uart_init+3)^0,f,c
  4986  002310  2EE8               	decfsz	wreg,f,c
  4987  002312  EF83  F011         	goto	u4975
  4988  002316  C022  F015         	movff	??_uart_init,___lldiv@divisor
  4989  00231A  C023  F016         	movff	??_uart_init+1,___lldiv@divisor+1
  4990  00231E  C024  F017         	movff	??_uart_init+2,___lldiv@divisor+2
  4991  002322  C025  F018         	movff	??_uart_init+3,___lldiv@divisor+3
  4992  002326  EC7A  F016         	call	___lldiv	;wreg free
  4993  00232A  0EFF               	movlw	255
  4994  00232C  2411               	addwf	?___lldiv^0,w,c
  4995  00232E  6E26               	movwf	uart_init@a^0,c
  4996  002330  0EFF               	movlw	255
  4997  002332  2012               	addwfc	(?___lldiv+1)^0,w,c
  4998  002334  6E27               	movwf	(uart_init@a+1)^0,c
  4999  002336                     
  5000                           ;uart.c: 32:       if (a > 255)
  5001  002336  BE27               	btfsc	(uart_init@a+1)^0,7,c
  5002  002338  EFA4  F011         	goto	u4981
  5003  00233C  0427               	decf	(uart_init@a+1)^0,w,c
  5004  00233E  A0D8               	btfss	status,0,c
  5005  002340  EFA4  F011         	goto	u4981
  5006  002344  EFA6  F011         	goto	u4980
  5007  002348                     u4981:
  5008  002348  EFA9  F011         	goto	l3972
  5009  00234C                     u4980:
  5010  00234C                     
  5011                           ;uart.c: 33:         a = 255;
  5012  00234C  0E00               	movlw	0
  5013  00234E  6E27               	movwf	(uart_init@a+1)^0,c
  5014  002350  6826               	setf	uart_init@a^0,c
  5015  002352                     l3972:
  5016                           
  5017                           ;uart.c: 34:       SPBRG1 = a;
  5018  002352  C026  FFAF         	movff	uart_init@a,4015	;volatile
  5019                           
  5020                           ;uart.c: 35:       TXSTA1 = (1<<5);
  5021  002356  0E20               	movlw	32
  5022  002358  6EAC               	movwf	172,c	;volatile
  5023                           
  5024                           ;uart.c: 36:     }
  5025  00235A  EFB3  F011         	goto	l96
  5026  00235E                     l94:
  5027                           
  5028                           ;uart.c: 39:     {;uart.c: 40:       SPBRG1 = a;
  5029  00235E  C026  FFAF         	movff	uart_init@a,4015	;volatile
  5030  002362                     
  5031                           ;uart.c: 41:       TXSTA1 = (1<<5) | (1<<2);
  5032  002362  0E24               	movlw	36
  5033  002364  6EAC               	movwf	172,c	;volatile
  5034  002366                     l96:
  5035                           
  5036                           ;uart.c: 44:     RCSTA1 = (1<<7) | (1<<4);
  5037  002366  0E90               	movlw	144
  5038  002368  6EAB               	movwf	171,c	;volatile
  5039  00236A                     
  5040                           ;uart.c: 47:     PIE1bits.RC1IE = 1;
  5041  00236A  8A9D               	bsf	157,5,c	;volatile
  5042  00236C  0012               	return		;funcret
  5043  00236E                     __end_of_uart_init:
  5044                           	callstack 0
  5045                           
  5046 ;; *************** function _circularBuffer_init *****************
  5047 ;; Defined at:
  5048 ;;		line 4 in file "circularBuffer.c"
  5049 ;; Parameters:    Size  Location     Type
  5050 ;;  theCircularB    2   16[COMRAM] PTR volatile struct .
  5051 ;;		 -> txBuffer(5), rxBuffer(5), 
  5052 ;;  theBuffer       2   18[COMRAM] PTR volatile unsigned ch
  5053 ;;		 -> txBufferMemory(64), rxBufferMemory(16), 
  5054 ;;  size            1   20[COMRAM] unsigned char 
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;		None
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      void 
  5059 ;; Registers used:
  5060 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5066 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5069 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5070 ;;Total ram usage:        5 bytes
  5071 ;; Hardware stack levels used:    1
  5072 ;; Hardware stack levels required when called:    4
  5073 ;; This function calls:
  5074 ;;		Nothing
  5075 ;; This function is called by:
  5076 ;;		_uart_init
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080                           	psect	text25
  5081  00309E                     __ptext25:
  5082                           	callstack 0
  5083  00309E                     _circularBuffer_init:
  5084                           	callstack 25
  5085  00309E                     
  5086                           ;circularBuffer.c: 4: void circularBuffer_init(volatile CircularBuffer* theCircularBuffe
      +                          r, volatile uint8_t* theBuffer, uint8_t size);circularBuffer.c: 5: {;circularBuffer.c: 6
      +                          :     theCircularBuffer->buffer = theBuffer;
  5087  00309E  C011  FFD9         	movff	circularBuffer_init@theCircularBuffer,fsr2l
  5088  0030A2  C012  FFDA         	movff	circularBuffer_init@theCircularBuffer+1,fsr2h
  5089  0030A6  C013  FFDE         	movff	circularBuffer_init@theBuffer,postinc2
  5090  0030AA  C014  FFDD         	movff	circularBuffer_init@theBuffer+1,postdec2
  5091  0030AE                     
  5092                           ;circularBuffer.c: 7:     theCircularBuffer->size = size;
  5093  0030AE  EE20 F002          	lfsr	2,2
  5094  0030B2  5011               	movf	circularBuffer_init@theCircularBuffer^0,w,c
  5095  0030B4  26D9               	addwf	fsr2l,f,c
  5096  0030B6  5012               	movf	(circularBuffer_init@theCircularBuffer+1)^0,w,c
  5097  0030B8  22DA               	addwfc	fsr2h,f,c
  5098  0030BA  C015  FFDF         	movff	circularBuffer_init@size,indf2
  5099  0030BE                     
  5100                           ;circularBuffer.c: 8:     theCircularBuffer->readPointer = 0;
  5101  0030BE  EE20 F003          	lfsr	2,3
  5102  0030C2  5011               	movf	circularBuffer_init@theCircularBuffer^0,w,c
  5103  0030C4  26D9               	addwf	fsr2l,f,c
  5104  0030C6  5012               	movf	(circularBuffer_init@theCircularBuffer+1)^0,w,c
  5105  0030C8  22DA               	addwfc	fsr2h,f,c
  5106  0030CA  0E00               	movlw	0
  5107  0030CC  6EDF               	movwf	indf2,c
  5108  0030CE                     
  5109                           ;circularBuffer.c: 9:     theCircularBuffer->writePointer = 0;
  5110  0030CE  EE20 F004          	lfsr	2,4
  5111  0030D2  5011               	movf	circularBuffer_init@theCircularBuffer^0,w,c
  5112  0030D4  26D9               	addwf	fsr2l,f,c
  5113  0030D6  5012               	movf	(circularBuffer_init@theCircularBuffer+1)^0,w,c
  5114  0030D8  22DA               	addwfc	fsr2h,f,c
  5115  0030DA  0E00               	movlw	0
  5116  0030DC  6EDF               	movwf	indf2,c
  5117  0030DE  0012               	return		;funcret
  5118  0030E0                     __end_of_circularBuffer_init:
  5119                           	callstack 0
  5120                           
  5121 ;; *************** function ___lldiv *****************
  5122 ;; Defined at:
  5123 ;;		line 7 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/__lldiv.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;  dividend        4   16[COMRAM] unsigned long 
  5126 ;;  divisor         4   20[COMRAM] unsigned long 
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;  quotient        4   24[COMRAM] unsigned long 
  5129 ;;  counter         1   28[COMRAM] unsigned char 
  5130 ;; Return value:  Size  Location     Type
  5131 ;;                  4   16[COMRAM] unsigned long 
  5132 ;; Registers used:
  5133 ;;		wreg, status,2, status,0
  5134 ;; Tracked objects:
  5135 ;;		On entry : 0/0
  5136 ;;		On exit  : 0/0
  5137 ;;		Unchanged: 0/0
  5138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5139 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5140 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5142 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5143 ;;Total ram usage:       13 bytes
  5144 ;; Hardware stack levels used:    1
  5145 ;; Hardware stack levels required when called:    4
  5146 ;; This function calls:
  5147 ;;		Nothing
  5148 ;; This function is called by:
  5149 ;;		_uart_init
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           	psect	text26
  5154  002CF4                     __ptext26:
  5155                           	callstack 0
  5156  002CF4                     ___lldiv:
  5157                           	callstack 25
  5158  002CF4  0E00               	movlw	0
  5159  002CF6  6E19               	movwf	___lldiv@quotient^0,c
  5160  002CF8  0E00               	movlw	0
  5161  002CFA  6E1A               	movwf	(___lldiv@quotient+1)^0,c
  5162  002CFC  0E00               	movlw	0
  5163  002CFE  6E1B               	movwf	(___lldiv@quotient+2)^0,c
  5164  002D00  0E00               	movlw	0
  5165  002D02  6E1C               	movwf	(___lldiv@quotient+3)^0,c
  5166  002D04  5015               	movf	___lldiv@divisor^0,w,c
  5167  002D06  1016               	iorwf	(___lldiv@divisor+1)^0,w,c
  5168  002D08  1017               	iorwf	(___lldiv@divisor+2)^0,w,c
  5169  002D0A  1018               	iorwf	(___lldiv@divisor+3)^0,w,c
  5170  002D0C  B4D8               	btfsc	status,2,c
  5171  002D0E  EF8B  F016         	goto	u4381
  5172  002D12  EF8D  F016         	goto	u4380
  5173  002D16                     u4381:
  5174  002D16  EFC3  F016         	goto	l268
  5175  002D1A                     u4380:
  5176  002D1A  0E01               	movlw	1
  5177  002D1C  6E1D               	movwf	___lldiv@counter^0,c
  5178  002D1E  EF97  F016         	goto	l3604
  5179  002D22                     l3602:
  5180  002D22  90D8               	bcf	status,0,c
  5181  002D24  3615               	rlcf	___lldiv@divisor^0,f,c
  5182  002D26  3616               	rlcf	(___lldiv@divisor+1)^0,f,c
  5183  002D28  3617               	rlcf	(___lldiv@divisor+2)^0,f,c
  5184  002D2A  3618               	rlcf	(___lldiv@divisor+3)^0,f,c
  5185  002D2C  2A1D               	incf	___lldiv@counter^0,f,c
  5186  002D2E                     l3604:
  5187  002D2E  AE18               	btfss	(___lldiv@divisor+3)^0,7,c
  5188  002D30  EF9C  F016         	goto	u4391
  5189  002D34  EF9E  F016         	goto	u4390
  5190  002D38                     u4391:
  5191  002D38  EF91  F016         	goto	l3602
  5192  002D3C                     u4390:
  5193  002D3C                     l3606:
  5194  002D3C  90D8               	bcf	status,0,c
  5195  002D3E  3619               	rlcf	___lldiv@quotient^0,f,c
  5196  002D40  361A               	rlcf	(___lldiv@quotient+1)^0,f,c
  5197  002D42  361B               	rlcf	(___lldiv@quotient+2)^0,f,c
  5198  002D44  361C               	rlcf	(___lldiv@quotient+3)^0,f,c
  5199  002D46  5015               	movf	___lldiv@divisor^0,w,c
  5200  002D48  5C11               	subwf	___lldiv@dividend^0,w,c
  5201  002D4A  5016               	movf	(___lldiv@divisor+1)^0,w,c
  5202  002D4C  5812               	subwfb	(___lldiv@dividend+1)^0,w,c
  5203  002D4E  5017               	movf	(___lldiv@divisor+2)^0,w,c
  5204  002D50  5813               	subwfb	(___lldiv@dividend+2)^0,w,c
  5205  002D52  5018               	movf	(___lldiv@divisor+3)^0,w,c
  5206  002D54  5814               	subwfb	(___lldiv@dividend+3)^0,w,c
  5207  002D56  A0D8               	btfss	status,0,c
  5208  002D58  EFB0  F016         	goto	u4401
  5209  002D5C  EFB2  F016         	goto	u4400
  5210  002D60                     u4401:
  5211  002D60  EFBB  F016         	goto	l3614
  5212  002D64                     u4400:
  5213  002D64  5015               	movf	___lldiv@divisor^0,w,c
  5214  002D66  5E11               	subwf	___lldiv@dividend^0,f,c
  5215  002D68  5016               	movf	(___lldiv@divisor+1)^0,w,c
  5216  002D6A  5A12               	subwfb	(___lldiv@dividend+1)^0,f,c
  5217  002D6C  5017               	movf	(___lldiv@divisor+2)^0,w,c
  5218  002D6E  5A13               	subwfb	(___lldiv@dividend+2)^0,f,c
  5219  002D70  5018               	movf	(___lldiv@divisor+3)^0,w,c
  5220  002D72  5A14               	subwfb	(___lldiv@dividend+3)^0,f,c
  5221  002D74  8019               	bsf	___lldiv@quotient^0,0,c
  5222  002D76                     l3614:
  5223  002D76  90D8               	bcf	status,0,c
  5224  002D78  3218               	rrcf	(___lldiv@divisor+3)^0,f,c
  5225  002D7A  3217               	rrcf	(___lldiv@divisor+2)^0,f,c
  5226  002D7C  3216               	rrcf	(___lldiv@divisor+1)^0,f,c
  5227  002D7E  3215               	rrcf	___lldiv@divisor^0,f,c
  5228  002D80  2E1D               	decfsz	___lldiv@counter^0,f,c
  5229  002D82  EF9E  F016         	goto	l3606
  5230  002D86                     l268:
  5231  002D86  C019  F011         	movff	___lldiv@quotient,?___lldiv
  5232  002D8A  C01A  F012         	movff	___lldiv@quotient+1,?___lldiv+1
  5233  002D8E  C01B  F013         	movff	___lldiv@quotient+2,?___lldiv+2
  5234  002D92  C01C  F014         	movff	___lldiv@quotient+3,?___lldiv+3
  5235  002D96  0012               	return		;funcret
  5236  002D98                     __end_of___lldiv:
  5237                           	callstack 0
  5238                           
  5239 ;; *************** function _theInterrupt *****************
  5240 ;; Defined at:
  5241 ;;		line 76 in file "main.c"
  5242 ;; Parameters:    Size  Location     Type
  5243 ;;		None
  5244 ;; Auto vars:     Size  Location     Type
  5245 ;;		None
  5246 ;; Return value:  Size  Location     Type
  5247 ;;                  1    wreg      void 
  5248 ;; Registers used:
  5249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5250 ;; Tracked objects:
  5251 ;;		On entry : 0/0
  5252 ;;		On exit  : 0/0
  5253 ;;		Unchanged: 0/0
  5254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5257 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5258 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5259 ;;Total ram usage:        4 bytes
  5260 ;; Hardware stack levels used:    1
  5261 ;; Hardware stack levels required when called:    3
  5262 ;; This function calls:
  5263 ;;		_uart_rxInterrupt
  5264 ;;		_uart_txInterrupt
  5265 ;; This function is called by:
  5266 ;;		Interrupt level 2
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270                           	psect	intcode
  5271  000008                     __pintcode:
  5272                           	callstack 0
  5273  000008                     _theInterrupt:
  5274                           	callstack 23
  5275                           
  5276                           ;incstack = 0
  5277  000008  824F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5278  00000A  CFE1 F00D          	movff	fsr1l,??_theInterrupt
  5279  00000E  CFE2 F00E          	movff	fsr1h,??_theInterrupt+1
  5280  000012  CFD9 F00F          	movff	fsr2l,??_theInterrupt+2
  5281  000016  CFDA F010          	movff	fsr2h,??_theInterrupt+3
  5282  00001A                     
  5283                           ;main.c: 78:     if(PIE1bits.RC1IE && PIR1bits.RC1IF)
  5284  00001A  AA9D               	btfss	157,5,c	;volatile
  5285  00001C  EF12  F000         	goto	i2u512_41
  5286  000020  EF14  F000         	goto	i2u512_40
  5287  000024                     i2u512_41:
  5288  000024  EF1D  F000         	goto	i2l4128
  5289  000028                     i2u512_40:
  5290  000028  AA9E               	btfss	158,5,c	;volatile
  5291  00002A  EF19  F000         	goto	i2u513_41
  5292  00002E  EF1B  F000         	goto	i2u513_40
  5293  000032                     i2u513_41:
  5294  000032  EF1D  F000         	goto	i2l4128
  5295  000036                     i2u513_40:
  5296  000036                     
  5297                           ;main.c: 79:     {;main.c: 80:         uart_rxInterrupt();
  5298  000036  ECBA  F018         	call	_uart_rxInterrupt	;wreg free
  5299  00003A                     i2l4128:
  5300                           
  5301                           ;main.c: 82:     if(PIE1bits.TX1IE && PIR1bits.TX1IF)
  5302  00003A  A89D               	btfss	157,4,c	;volatile
  5303  00003C  EF22  F000         	goto	i2u514_41
  5304  000040  EF24  F000         	goto	i2u514_40
  5305  000044                     i2u514_41:
  5306  000044  EF2D  F000         	goto	i2l50
  5307  000048                     i2u514_40:
  5308  000048  A89E               	btfss	158,4,c	;volatile
  5309  00004A  EF29  F000         	goto	i2u515_41
  5310  00004E  EF2B  F000         	goto	i2u515_40
  5311  000052                     i2u515_41:
  5312  000052  EF2D  F000         	goto	i2l50
  5313  000056                     i2u515_40:
  5314  000056                     
  5315                           ;main.c: 83:     {;main.c: 84:         uart_txInterrupt();
  5316  000056  EC70  F018         	call	_uart_txInterrupt	;wreg free
  5317  00005A                     i2l50:
  5318  00005A  C010  FFDA         	movff	??_theInterrupt+3,fsr2h
  5319  00005E  C00F  FFD9         	movff	??_theInterrupt+2,fsr2l
  5320  000062  C00E  FFE2         	movff	??_theInterrupt+1,fsr1h
  5321  000066  C00D  FFE1         	movff	??_theInterrupt,fsr1l
  5322  00006A  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5323  00006C  0011               	retfie		f
  5324  00006E                     __end_of_theInterrupt:
  5325                           	callstack 0
  5326                           
  5327 ;; *************** function _uart_txInterrupt *****************
  5328 ;; Defined at:
  5329 ;;		line 207 in file "uart.c"
  5330 ;; Parameters:    Size  Location     Type
  5331 ;;		None
  5332 ;; Auto vars:     Size  Location     Type
  5333 ;;  txChar          1   11[COMRAM] unsigned char 
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  1    wreg      void 
  5336 ;; Registers used:
  5337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5344 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5346 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5347 ;;Total ram usage:        1 bytes
  5348 ;; Hardware stack levels used:    1
  5349 ;; Hardware stack levels required when called:    2
  5350 ;; This function calls:
  5351 ;;		_circularBuffer_isEmpty
  5352 ;;		i2_circularBuffer_read
  5353 ;;		i2_uart_putc
  5354 ;; This function is called by:
  5355 ;;		_theInterrupt
  5356 ;; This function uses a non-reentrant model
  5357 ;;
  5358                           
  5359                           	psect	text28
  5360  0030E0                     __ptext28:
  5361                           	callstack 0
  5362  0030E0                     _uart_txInterrupt:
  5363                           	callstack 23
  5364  0030E0                     
  5365                           ;uart.c: 210:     uint8_t txChar;;uart.c: 211:     if (circularBuffer_isEmpty(&txBuffer)
      +                          )
  5366  0030E0  0E45               	movlw	low _txBuffer
  5367  0030E2  6E01               	movwf	circularBuffer_isEmpty@theCircularBuffer^0,c
  5368  0030E4  0E00               	movlw	high _txBuffer
  5369  0030E6  6E02               	movwf	(circularBuffer_isEmpty@theCircularBuffer+1)^0,c
  5370  0030E8  EC09  F017         	call	_circularBuffer_isEmpty	;wreg free
  5371  0030EC  0900               	iorlw	0
  5372  0030EE  B4D8               	btfsc	status,2,c
  5373  0030F0  EF7C  F018         	goto	i2u510_41
  5374  0030F4  EF7E  F018         	goto	i2u510_40
  5375  0030F8                     i2u510_41:
  5376  0030F8  EF83  F018         	goto	i2l4064
  5377  0030FC                     i2u510_40:
  5378  0030FC                     
  5379                           ;uart.c: 212:     {;uart.c: 213:         sending = 0;
  5380  0030FC  0E00               	movlw	0
  5381  0030FE  6E34               	movwf	_sending^0,c	;volatile
  5382  003100                     
  5383                           ;uart.c: 215:         PIE1bits.TX1IE = 0;
  5384  003100  989D               	bcf	157,4,c	;volatile
  5385                           
  5386                           ;uart.c: 216:     } else {
  5387  003102  EF90  F018         	goto	i2l182
  5388  003106                     i2l4064:
  5389                           
  5390                           ;uart.c: 217:         circularBuffer_read(&txBuffer, &txChar);
  5391  003106  0E45               	movlw	low _txBuffer
  5392  003108  6E01               	movwf	i2circularBuffer_read@theCircularBuffer^0,c
  5393  00310A  0E00               	movlw	high _txBuffer
  5394  00310C  6E02               	movwf	(i2circularBuffer_read@theCircularBuffer+1)^0,c
  5395  00310E  0E0C               	movlw	low uart_txInterrupt@txChar
  5396  003110  6E03               	movwf	i2circularBuffer_read@toRead^0,c
  5397  003112  0E00               	movlw	high uart_txInterrupt@txChar
  5398  003114  6E04               	movwf	(i2circularBuffer_read@toRead+1)^0,c
  5399  003116  EC4B  F012         	call	i2_circularBuffer_read	;wreg free
  5400                           
  5401                           ;uart.c: 218:         uart_putc(txChar);
  5402  00311A  500C               	movf	uart_txInterrupt@txChar^0,w,c
  5403  00311C  ECD6  F017         	call	i2_uart_putc
  5404  003120                     i2l182:
  5405  003120  0012               	return		;funcret
  5406  003122                     __end_of_uart_txInterrupt:
  5407                           	callstack 0
  5408                           
  5409 ;; *************** function i2_uart_putc *****************
  5410 ;; Defined at:
  5411 ;;		line 74 in file "uart.c"
  5412 ;; Parameters:    Size  Location     Type
  5413 ;;  a               1    wreg     const unsigned char 
  5414 ;; Auto vars:     Size  Location     Type
  5415 ;;  a               1   10[COMRAM] const unsigned char 
  5416 ;; Return value:  Size  Location     Type
  5417 ;;                  1    wreg      void 
  5418 ;; Registers used:
  5419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5420 ;; Tracked objects:
  5421 ;;		On entry : 0/0
  5422 ;;		On exit  : 0/0
  5423 ;;		Unchanged: 0/0
  5424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5426 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5428 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5429 ;;Total ram usage:        1 bytes
  5430 ;; Hardware stack levels used:    1
  5431 ;; Hardware stack levels required when called:    1
  5432 ;; This function calls:
  5433 ;;		i2_circularBuffer_isFull
  5434 ;;		i2_circularBuffer_write
  5435 ;; This function is called by:
  5436 ;;		_uart_txInterrupt
  5437 ;; This function uses a non-reentrant model
  5438 ;;
  5439                           
  5440                           	psect	text29
  5441  002FAC                     __ptext29:
  5442                           	callstack 0
  5443  002FAC                     i2_uart_putc:
  5444                           	callstack 23
  5445                           
  5446                           ;incstack = 0
  5447                           ;i2uart_putc@a stored from wreg
  5448  002FAC  6E0B               	movwf	i2uart_putc@a^0,c
  5449  002FAE                     
  5450                           ;uart.c: 74: void uart_putc(const char a);uart.c: 75: {;uart.c: 77:     if (!sending)
  5451  002FAE  5034               	movf	_sending^0,w,c	;volatile
  5452  002FB0  A4D8               	btfss	status,2,c
  5453  002FB2  EFDD  F017         	goto	i2u328_41
  5454  002FB6  EFDF  F017         	goto	i2u328_40
  5455  002FBA                     i2u328_41:
  5456  002FBA  EFED  F017         	goto	i2l2912
  5457  002FBE                     i2u328_40:
  5458  002FBE                     i2l115:
  5459  002FBE  A2AC               	btfss	4012,1,c	;volatile
  5460  002FC0  EFE4  F017         	goto	i2u329_41
  5461  002FC4  EFE6  F017         	goto	i2u329_40
  5462  002FC8                     i2u329_41:
  5463  002FC8  EFDF  F017         	goto	i2l115
  5464  002FCC                     i2u329_40:
  5465  002FCC                     
  5466                           ;uart.c: 81:         TXREG1 = a;
  5467  002FCC  C00B  FFAD         	movff	i2uart_putc@a,4013	;volatile
  5468  002FD0                     
  5469                           ;uart.c: 82:         sending = 1;
  5470  002FD0  0E01               	movlw	1
  5471  002FD2  6E34               	movwf	_sending^0,c	;volatile
  5472  002FD4                     
  5473                           ;uart.c: 84:         PIE1bits.TX1IE = 1;
  5474  002FD4  889D               	bsf	157,4,c	;volatile
  5475                           
  5476                           ;uart.c: 86:     } else {
  5477  002FD6  EF03  F018         	goto	i2l122
  5478  002FDA                     i2l2912:
  5479  002FDA  0E45               	movlw	low _txBuffer
  5480  002FDC  6E01               	movwf	i2circularBuffer_isFull@theCircularBuffer^0,c
  5481  002FDE  0E00               	movlw	high _txBuffer
  5482  002FE0  6E02               	movwf	(i2circularBuffer_isFull@theCircularBuffer+1)^0,c
  5483  002FE2  EC63  F014         	call	i2_circularBuffer_isFull	;wreg free
  5484  002FE6  0900               	iorlw	0
  5485  002FE8  A4D8               	btfss	status,2,c
  5486  002FEA  EFF9  F017         	goto	i2u330_41
  5487  002FEE  EFFB  F017         	goto	i2u330_40
  5488  002FF2                     i2u330_41:
  5489  002FF2  EFED  F017         	goto	i2l2912
  5490  002FF6                     i2u330_40:
  5491  002FF6                     
  5492                           ;uart.c: 88:         circularBuffer_write(&txBuffer, a);
  5493  002FF6  0E45               	movlw	low _txBuffer
  5494  002FF8  6E01               	movwf	i2circularBuffer_write@theCircularBuffer^0,c
  5495  002FFA  0E00               	movlw	high _txBuffer
  5496  002FFC  6E02               	movwf	(i2circularBuffer_write@theCircularBuffer+1)^0,c
  5497  002FFE  C00B  F003         	movff	i2uart_putc@a,i2circularBuffer_write@toWrite
  5498  003002  EC0C  F00F         	call	i2_circularBuffer_write	;wreg free
  5499  003006                     i2l122:
  5500  003006  0012               	return		;funcret
  5501  003008                     __end_ofi2_uart_putc:
  5502                           	callstack 0
  5503                           
  5504 ;; *************** function i2_circularBuffer_isFull *****************
  5505 ;; Defined at:
  5506 ;;		line 83 in file "circularBuffer.c"
  5507 ;; Parameters:    Size  Location     Type
  5508 ;;  theCircularB    2    0[COMRAM] PTR volatile struct .
  5509 ;;		 -> txBuffer(5), 
  5510 ;; Auto vars:     Size  Location     Type
  5511 ;;  gieSet          1    8[COMRAM] unsigned char 
  5512 ;; Return value:  Size  Location     Type
  5513 ;;                  1    wreg      unsigned char 
  5514 ;; Registers used:
  5515 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5521 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5523 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5524 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5525 ;;Total ram usage:        9 bytes
  5526 ;; Hardware stack levels used:    1
  5527 ;; This function calls:
  5528 ;;		Nothing
  5529 ;; This function is called by:
  5530 ;;		i2_uart_putc
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534                           	psect	text30
  5535  0028C6                     __ptext30:
  5536                           	callstack 0
  5537  0028C6                     i2_circularBuffer_isFull:
  5538                           	callstack 23
  5539  0028C6                     
  5540                           ;circularBuffer.c: 83: uint8_t circularBuffer_isFull(volatile CircularBuffer* theCircula
      +                          rBuffer);circularBuffer.c: 84: {;circularBuffer.c: 85:     uint8_t gieSet = 0;
  5541  0028C6  0E00               	movlw	0
  5542  0028C8  6E09               	movwf	i2circularBuffer_isFull@gieSet^0,c
  5543  0028CA                     
  5544                           ;circularBuffer.c: 86:     if(INTCONbits.GIE == 1)
  5545  0028CA  AEF2               	btfss	242,7,c	;volatile
  5546  0028CC  EF6A  F014         	goto	i2u257_41
  5547  0028D0  EF6C  F014         	goto	i2u257_40
  5548  0028D4                     i2u257_41:
  5549  0028D4  EF6F  F014         	goto	i2l2444
  5550  0028D8                     i2u257_40:
  5551  0028D8                     
  5552                           ;circularBuffer.c: 87:     {;circularBuffer.c: 88:         gieSet = 1;
  5553  0028D8  0E01               	movlw	1
  5554  0028DA  6E09               	movwf	i2circularBuffer_isFull@gieSet^0,c
  5555  0028DC                     
  5556                           ;circularBuffer.c: 89:         INTCONbits.GIE = 0;
  5557  0028DC  9EF2               	bcf	242,7,c	;volatile
  5558  0028DE                     i2l2444:
  5559                           
  5560                           ;circularBuffer.c: 91:     if (((theCircularBuffer->readPointer == 0) && (theCircularBuf
      +                          fer->writePointer == theCircularBuffer->size - 1)) ||
  5561  0028DE  EE20 F003          	lfsr	2,3
  5562  0028E2  5001               	movf	i2circularBuffer_isFull@theCircularBuffer^0,w,c
  5563  0028E4  26D9               	addwf	fsr2l,f,c
  5564  0028E6  5002               	movf	(i2circularBuffer_isFull@theCircularBuffer+1)^0,w,c
  5565  0028E8  22DA               	addwfc	fsr2h,f,c
  5566  0028EA  50DF               	movf	indf2,w,c
  5567  0028EC  A4D8               	btfss	status,2,c
  5568  0028EE  EF7B  F014         	goto	i2u258_41
  5569  0028F2  EF7D  F014         	goto	i2u258_40
  5570  0028F6                     i2u258_41:
  5571  0028F6  EFA3  F014         	goto	i2l2448
  5572  0028FA                     i2u258_40:
  5573  0028FA  EE20 F004          	lfsr	2,4
  5574  0028FE  5001               	movf	i2circularBuffer_isFull@theCircularBuffer^0,w,c
  5575  002900  26D9               	addwf	fsr2l,f,c
  5576  002902  5002               	movf	(i2circularBuffer_isFull@theCircularBuffer+1)^0,w,c
  5577  002904  22DA               	addwfc	fsr2h,f,c
  5578  002906  50DF               	movf	indf2,w,c
  5579  002908  6E03               	movwf	??i2_circularBuffer_isFull^0,c
  5580  00290A  6A04               	clrf	(??i2_circularBuffer_isFull+1)^0,c
  5581  00290C  0EFF               	movlw	255
  5582  00290E  6E05               	movwf	(??i2_circularBuffer_isFull+2)^0,c
  5583  002910  0EFF               	movlw	255
  5584  002912  6E06               	movwf	(??i2_circularBuffer_isFull+3)^0,c
  5585  002914  EE20 F002          	lfsr	2,2
  5586  002918  5001               	movf	i2circularBuffer_isFull@theCircularBuffer^0,w,c
  5587  00291A  26D9               	addwf	fsr2l,f,c
  5588  00291C  5002               	movf	(i2circularBuffer_isFull@theCircularBuffer+1)^0,w,c
  5589  00291E  22DA               	addwfc	fsr2h,f,c
  5590  002920  50DF               	movf	indf2,w,c
  5591  002922  6E07               	movwf	(??i2_circularBuffer_isFull+4)^0,c
  5592  002924  6A08               	clrf	(??i2_circularBuffer_isFull+5)^0,c
  5593  002926  5005               	movf	(??i2_circularBuffer_isFull+2)^0,w,c
  5594  002928  2607               	addwf	(??i2_circularBuffer_isFull+4)^0,f,c
  5595  00292A  5006               	movf	(??i2_circularBuffer_isFull+3)^0,w,c
  5596  00292C  2208               	addwfc	(??i2_circularBuffer_isFull+5)^0,f,c
  5597  00292E  5003               	movf	??i2_circularBuffer_isFull^0,w,c
  5598  002930  1807               	xorwf	(??i2_circularBuffer_isFull+4)^0,w,c
  5599  002932  E109               	bnz	i2u259_40
  5600  002934  5004               	movf	(??i2_circularBuffer_isFull+1)^0,w,c
  5601  002936  1808               	xorwf	(??i2_circularBuffer_isFull+5)^0,w,c
  5602  002938  B4D8               	btfsc	status,2,c
  5603  00293A  EFA1  F014         	goto	i2u259_41
  5604  00293E  EFA3  F014         	goto	i2u259_40
  5605  002942                     i2u259_41:
  5606  002942  EFC9  F014         	goto	i2l2450
  5607  002946                     i2u259_40:
  5608  002946                     i2l2448:
  5609  002946  EE20 F004          	lfsr	2,4
  5610  00294A  5001               	movf	i2circularBuffer_isFull@theCircularBuffer^0,w,c
  5611  00294C  26D9               	addwf	fsr2l,f,c
  5612  00294E  5002               	movf	(i2circularBuffer_isFull@theCircularBuffer+1)^0,w,c
  5613  002950  22DA               	addwfc	fsr2h,f,c
  5614  002952  50DF               	movf	indf2,w,c
  5615  002954  6E03               	movwf	??i2_circularBuffer_isFull^0,c
  5616  002956  6A04               	clrf	(??i2_circularBuffer_isFull+1)^0,c
  5617  002958  0EFF               	movlw	255
  5618  00295A  6E05               	movwf	(??i2_circularBuffer_isFull+2)^0,c
  5619  00295C  0EFF               	movlw	255
  5620  00295E  6E06               	movwf	(??i2_circularBuffer_isFull+3)^0,c
  5621  002960  EE20 F003          	lfsr	2,3
  5622  002964  5001               	movf	i2circularBuffer_isFull@theCircularBuffer^0,w,c
  5623  002966  26D9               	addwf	fsr2l,f,c
  5624  002968  5002               	movf	(i2circularBuffer_isFull@theCircularBuffer+1)^0,w,c
  5625  00296A  22DA               	addwfc	fsr2h,f,c
  5626  00296C  50DF               	movf	indf2,w,c
  5627  00296E  6E07               	movwf	(??i2_circularBuffer_isFull+4)^0,c
  5628  002970  6A08               	clrf	(??i2_circularBuffer_isFull+5)^0,c
  5629  002972  5005               	movf	(??i2_circularBuffer_isFull+2)^0,w,c
  5630  002974  2607               	addwf	(??i2_circularBuffer_isFull+4)^0,f,c
  5631  002976  5006               	movf	(??i2_circularBuffer_isFull+3)^0,w,c
  5632  002978  2208               	addwfc	(??i2_circularBuffer_isFull+5)^0,f,c
  5633  00297A  5003               	movf	??i2_circularBuffer_isFull^0,w,c
  5634  00297C  1807               	xorwf	(??i2_circularBuffer_isFull+4)^0,w,c
  5635  00297E  E107               	bnz	i2u260_41
  5636  002980  5004               	movf	(??i2_circularBuffer_isFull+1)^0,w,c
  5637  002982  1808               	xorwf	(??i2_circularBuffer_isFull+5)^0,w,c
  5638  002984  A4D8               	btfss	status,2,c
  5639  002986  EFC7  F014         	goto	i2u260_41
  5640  00298A  EFC9  F014         	goto	i2u260_40
  5641  00298E                     i2u260_41:
  5642  00298E  EFD5  F014         	goto	i2l2460
  5643  002992                     i2u260_40:
  5644  002992                     i2l2450:
  5645                           
  5646                           ;circularBuffer.c: 93:     {;circularBuffer.c: 95:         if(gieSet) INTCONbits.GIE = 1
      +                          ;
  5647  002992  5009               	movf	i2circularBuffer_isFull@gieSet^0,w,c
  5648  002994  B4D8               	btfsc	status,2,c
  5649  002996  EFCF  F014         	goto	i2u261_41
  5650  00299A  EFD1  F014         	goto	i2u261_40
  5651  00299E                     i2u261_41:
  5652  00299E  EFD2  F014         	goto	i2l2454
  5653  0029A2                     i2u261_40:
  5654  0029A2  8EF2               	bsf	242,7,c	;volatile
  5655  0029A4                     i2l2454:
  5656                           
  5657                           ;circularBuffer.c: 96:         return 1;
  5658  0029A4  0E01               	movlw	1
  5659  0029A6  EFDF  F014         	goto	i2l230
  5660  0029AA                     i2l2460:
  5661                           
  5662                           ;circularBuffer.c: 99:         if(gieSet) INTCONbits.GIE = 1;
  5663  0029AA  5009               	movf	i2circularBuffer_isFull@gieSet^0,w,c
  5664  0029AC  B4D8               	btfsc	status,2,c
  5665  0029AE  EFDB  F014         	goto	i2u262_41
  5666  0029B2  EFDD  F014         	goto	i2u262_40
  5667  0029B6                     i2u262_41:
  5668  0029B6  EFDE  F014         	goto	i2l2464
  5669  0029BA                     i2u262_40:
  5670  0029BA  8EF2               	bsf	242,7,c	;volatile
  5671  0029BC                     i2l2464:
  5672                           
  5673                           ;circularBuffer.c: 100:         return 0;
  5674  0029BC  0E00               	movlw	0
  5675  0029BE                     i2l230:
  5676  0029BE  0012               	return		;funcret
  5677  0029C0                     __end_ofi2_circularBuffer_isFull:
  5678                           	callstack 0
  5679                           
  5680 ;; *************** function i2_circularBuffer_read *****************
  5681 ;; Defined at:
  5682 ;;		line 37 in file "circularBuffer.c"
  5683 ;; Parameters:    Size  Location     Type
  5684 ;;  theCircularB    2    0[COMRAM] PTR volatile struct .
  5685 ;;		 -> txBuffer(5), rxBuffer(5), 
  5686 ;;  toRead          2    2[COMRAM] PTR unsigned char 
  5687 ;;		 -> uart_txInterrupt@txChar(1), main@rxChar(1), 
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;  gieSet          1    7[COMRAM] unsigned char 
  5690 ;; Return value:  Size  Location     Type
  5691 ;;                  1    wreg      unsigned char 
  5692 ;; Registers used:
  5693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5694 ;; Tracked objects:
  5695 ;;		On entry : 0/0
  5696 ;;		On exit  : 0/0
  5697 ;;		Unchanged: 0/0
  5698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5699 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5701 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5702 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5703 ;;Total ram usage:        8 bytes
  5704 ;; Hardware stack levels used:    1
  5705 ;; This function calls:
  5706 ;;		Nothing
  5707 ;; This function is called by:
  5708 ;;		_uart_txInterrupt
  5709 ;; This function uses a non-reentrant model
  5710 ;;
  5711                           
  5712                           	psect	text31
  5713  002496                     __ptext31:
  5714                           	callstack 0
  5715  002496                     i2_circularBuffer_read:
  5716                           	callstack 24
  5717  002496                     
  5718                           ;circularBuffer.c: 37: uint8_t circularBuffer_read(volatile CircularBuffer* theCircularB
      +                          uffer, uint8_t* toRead);circularBuffer.c: 38: {;circularBuffer.c: 39:     uint8_t gieSet
      +                           = 0;
  5719  002496  0E00               	movlw	0
  5720  002498  6E08               	movwf	i2circularBuffer_read@gieSet^0,c
  5721  00249A                     
  5722                           ;circularBuffer.c: 40:     if(INTCONbits.GIE == 1)
  5723  00249A  AEF2               	btfss	242,7,c	;volatile
  5724  00249C  EF52  F012         	goto	i2u489_41
  5725  0024A0  EF54  F012         	goto	i2u489_40
  5726  0024A4                     i2u489_41:
  5727  0024A4  EF57  F012         	goto	i2l3932
  5728  0024A8                     i2u489_40:
  5729  0024A8                     
  5730                           ;circularBuffer.c: 41:     {;circularBuffer.c: 42:         gieSet = 1;
  5731  0024A8  0E01               	movlw	1
  5732  0024AA  6E08               	movwf	i2circularBuffer_read@gieSet^0,c
  5733  0024AC                     
  5734                           ;circularBuffer.c: 43:         INTCONbits.GIE = 0;
  5735  0024AC  9EF2               	bcf	242,7,c	;volatile
  5736  0024AE                     i2l3932:
  5737                           
  5738                           ;circularBuffer.c: 45:     if (theCircularBuffer->readPointer == theCircularBuffer->writ
      +                          ePointer)
  5739  0024AE  EE20 F004          	lfsr	2,4
  5740  0024B2  5001               	movf	i2circularBuffer_read@theCircularBuffer^0,w,c
  5741  0024B4  26D9               	addwf	fsr2l,f,c
  5742  0024B6  5002               	movf	(i2circularBuffer_read@theCircularBuffer+1)^0,w,c
  5743  0024B8  22DA               	addwfc	fsr2h,f,c
  5744  0024BA  EE10 F003          	lfsr	1,3
  5745  0024BE  5001               	movf	i2circularBuffer_read@theCircularBuffer^0,w,c
  5746  0024C0  26E1               	addwf	fsr1l,f,c
  5747  0024C2  5002               	movf	(i2circularBuffer_read@theCircularBuffer+1)^0,w,c
  5748  0024C4  22E2               	addwfc	fsr1h,f,c
  5749  0024C6  50DE               	movf	postinc2,w,c
  5750  0024C8  18E6               	xorwf	postinc1,w,c
  5751  0024CA  A4D8               	btfss	status,2,c
  5752  0024CC  EF6A  F012         	goto	i2u490_41
  5753  0024D0  EF6C  F012         	goto	i2u490_40
  5754  0024D4                     i2u490_41:
  5755  0024D4  EF93  F012         	goto	i2l3942
  5756  0024D8                     i2u490_40:
  5757  0024D8                     
  5758                           ;circularBuffer.c: 46:     {;circularBuffer.c: 47:         (*toRead) = theCircularBuffer
      +                          ->buffer[theCircularBuffer->readPointer];
  5759  0024D8  EE20 F003          	lfsr	2,3
  5760  0024DC  5001               	movf	i2circularBuffer_read@theCircularBuffer^0,w,c
  5761  0024DE  26D9               	addwf	fsr2l,f,c
  5762  0024E0  5002               	movf	(i2circularBuffer_read@theCircularBuffer+1)^0,w,c
  5763  0024E2  22DA               	addwfc	fsr2h,f,c
  5764  0024E4  50DF               	movf	indf2,w,c
  5765  0024E6  6E05               	movwf	??i2_circularBuffer_read^0,c
  5766  0024E8  C001  FFD9         	movff	i2circularBuffer_read@theCircularBuffer,fsr2l
  5767  0024EC  C002  FFDA         	movff	i2circularBuffer_read@theCircularBuffer+1,fsr2h
  5768  0024F0  CFDE F006          	movff	postinc2,??i2_circularBuffer_read+1
  5769  0024F4  CFDD F007          	movff	postdec2,??i2_circularBuffer_read+2
  5770  0024F8  5005               	movf	??i2_circularBuffer_read^0,w,c
  5771  0024FA  2406               	addwf	(??i2_circularBuffer_read+1)^0,w,c
  5772  0024FC  6ED9               	movwf	fsr2l,c
  5773  0024FE  0E00               	movlw	0
  5774  002500  2007               	addwfc	(??i2_circularBuffer_read+2)^0,w,c
  5775  002502  6EDA               	movwf	fsr2h,c
  5776  002504  C003  FFE1         	movff	i2circularBuffer_read@toRead,fsr1l
  5777  002508  C004  FFE2         	movff	i2circularBuffer_read@toRead+1,fsr1h
  5778  00250C  CFDF FFE7          	movff	indf2,indf1
  5779  002510                     
  5780                           ;circularBuffer.c: 49:         if(gieSet) INTCONbits.GIE = 1;
  5781  002510  5008               	movf	i2circularBuffer_read@gieSet^0,w,c
  5782  002512  B4D8               	btfsc	status,2,c
  5783  002514  EF8E  F012         	goto	i2u491_41
  5784  002518  EF90  F012         	goto	i2u491_40
  5785  00251C                     i2u491_41:
  5786  00251C  EFDC  F012         	goto	i2l209
  5787  002520                     i2u491_40:
  5788  002520  8EF2               	bsf	242,7,c	;volatile
  5789  002522  EFDC  F012         	goto	i2l209
  5790  002526                     i2l3942:
  5791                           
  5792                           ;circularBuffer.c: 52:         (*toRead) = theCircularBuffer->buffer[theCircularBuffer->
      +                          readPointer++];
  5793  002526  EE20 F003          	lfsr	2,3
  5794  00252A  5001               	movf	i2circularBuffer_read@theCircularBuffer^0,w,c
  5795  00252C  26D9               	addwf	fsr2l,f,c
  5796  00252E  5002               	movf	(i2circularBuffer_read@theCircularBuffer+1)^0,w,c
  5797  002530  22DA               	addwfc	fsr2h,f,c
  5798  002532  50DF               	movf	indf2,w,c
  5799  002534  6E05               	movwf	??i2_circularBuffer_read^0,c
  5800  002536  C001  FFD9         	movff	i2circularBuffer_read@theCircularBuffer,fsr2l
  5801  00253A  C002  FFDA         	movff	i2circularBuffer_read@theCircularBuffer+1,fsr2h
  5802  00253E  CFDE F006          	movff	postinc2,??i2_circularBuffer_read+1
  5803  002542  CFDD F007          	movff	postdec2,??i2_circularBuffer_read+2
  5804  002546  5005               	movf	??i2_circularBuffer_read^0,w,c
  5805  002548  2406               	addwf	(??i2_circularBuffer_read+1)^0,w,c
  5806  00254A  6ED9               	movwf	fsr2l,c
  5807  00254C  0E00               	movlw	0
  5808  00254E  2007               	addwfc	(??i2_circularBuffer_read+2)^0,w,c
  5809  002550  6EDA               	movwf	fsr2h,c
  5810  002552  C003  FFE1         	movff	i2circularBuffer_read@toRead,fsr1l
  5811  002556  C004  FFE2         	movff	i2circularBuffer_read@toRead+1,fsr1h
  5812  00255A  CFDF FFE7          	movff	indf2,indf1
  5813  00255E  EE20 F003          	lfsr	2,3
  5814  002562  5001               	movf	i2circularBuffer_read@theCircularBuffer^0,w,c
  5815  002564  26D9               	addwf	fsr2l,f,c
  5816  002566  5002               	movf	(i2circularBuffer_read@theCircularBuffer+1)^0,w,c
  5817  002568  22DA               	addwfc	fsr2h,f,c
  5818  00256A  2ADF               	incf	indf2,f,c
  5819  00256C                     
  5820                           ;circularBuffer.c: 53:         if (theCircularBuffer->readPointer == theCircularBuffer->
      +                          size)
  5821  00256C  EE20 F002          	lfsr	2,2
  5822  002570  5001               	movf	i2circularBuffer_read@theCircularBuffer^0,w,c
  5823  002572  26D9               	addwf	fsr2l,f,c
  5824  002574  5002               	movf	(i2circularBuffer_read@theCircularBuffer+1)^0,w,c
  5825  002576  22DA               	addwfc	fsr2h,f,c
  5826  002578  EE10 F003          	lfsr	1,3
  5827  00257C  5001               	movf	i2circularBuffer_read@theCircularBuffer^0,w,c
  5828  00257E  26E1               	addwf	fsr1l,f,c
  5829  002580  5002               	movf	(i2circularBuffer_read@theCircularBuffer+1)^0,w,c
  5830  002582  22E2               	addwfc	fsr1h,f,c
  5831  002584  50DE               	movf	postinc2,w,c
  5832  002586  18E6               	xorwf	postinc1,w,c
  5833  002588  A4D8               	btfss	status,2,c
  5834  00258A  EFC9  F012         	goto	i2u492_41
  5835  00258E  EFCB  F012         	goto	i2u492_40
  5836  002592                     i2u492_41:
  5837  002592  EFD3  F012         	goto	i2l3950
  5838  002596                     i2u492_40:
  5839  002596                     
  5840                           ;circularBuffer.c: 54:             theCircularBuffer->readPointer = 0;
  5841  002596  EE20 F003          	lfsr	2,3
  5842  00259A  5001               	movf	i2circularBuffer_read@theCircularBuffer^0,w,c
  5843  00259C  26D9               	addwf	fsr2l,f,c
  5844  00259E  5002               	movf	(i2circularBuffer_read@theCircularBuffer+1)^0,w,c
  5845  0025A0  22DA               	addwfc	fsr2h,f,c
  5846  0025A2  0E00               	movlw	0
  5847  0025A4  6EDF               	movwf	indf2,c
  5848  0025A6                     i2l3950:
  5849                           
  5850                           ;circularBuffer.c: 56:         if(gieSet) INTCONbits.GIE = 1;
  5851  0025A6  5008               	movf	i2circularBuffer_read@gieSet^0,w,c
  5852  0025A8  B4D8               	btfsc	status,2,c
  5853  0025AA  EFD9  F012         	goto	i2u493_41
  5854  0025AE  EFDB  F012         	goto	i2u493_40
  5855  0025B2                     i2u493_41:
  5856  0025B2  EFDC  F012         	goto	i2l209
  5857  0025B6                     i2u493_40:
  5858  0025B6  8EF2               	bsf	242,7,c	;volatile
  5859  0025B8                     i2l209:
  5860  0025B8  0012               	return		;funcret
  5861  0025BA                     __end_ofi2_circularBuffer_read:
  5862                           	callstack 0
  5863                           
  5864 ;; *************** function _circularBuffer_isEmpty *****************
  5865 ;; Defined at:
  5866 ;;		line 62 in file "circularBuffer.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;  theCircularB    2    0[COMRAM] PTR volatile struct .
  5869 ;;		 -> txBuffer(5), rxBuffer(5), 
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;  gieSet          1    4[COMRAM] unsigned char 
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  1    wreg      unsigned char 
  5874 ;; Registers used:
  5875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5881 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5882 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5883 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5884 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5885 ;;Total ram usage:        5 bytes
  5886 ;; Hardware stack levels used:    1
  5887 ;; This function calls:
  5888 ;;		Nothing
  5889 ;; This function is called by:
  5890 ;;		_uart_txInterrupt
  5891 ;;		_uart_dataReady
  5892 ;; This function uses a non-reentrant model
  5893 ;;
  5894                           
  5895                           	psect	text32
  5896  002E12                     __ptext32:
  5897                           	callstack 0
  5898  002E12                     _circularBuffer_isEmpty:
  5899                           	callstack 24
  5900  002E12                     
  5901                           ;circularBuffer.c: 62: uint8_t circularBuffer_isEmpty(volatile CircularBuffer* theCircul
      +                          arBuffer);circularBuffer.c: 63: {;circularBuffer.c: 64:     uint8_t gieSet = 0;
  5902  002E12  0E00               	movlw	0
  5903  002E14  6E05               	movwf	circularBuffer_isEmpty@gieSet^0,c
  5904  002E16                     
  5905                           ;circularBuffer.c: 65:     if(INTCONbits.GIE == 1)
  5906  002E16  AEF2               	btfss	242,7,c	;volatile
  5907  002E18  EF10  F017         	goto	i2u268_41
  5908  002E1C  EF12  F017         	goto	i2u268_40
  5909  002E20                     i2u268_41:
  5910  002E20  EF15  F017         	goto	i2l2516
  5911  002E24                     i2u268_40:
  5912  002E24                     
  5913                           ;circularBuffer.c: 66:     {;circularBuffer.c: 67:         gieSet = 1;
  5914  002E24  0E01               	movlw	1
  5915  002E26  6E05               	movwf	circularBuffer_isEmpty@gieSet^0,c
  5916  002E28                     
  5917                           ;circularBuffer.c: 68:         INTCONbits.GIE = 0;
  5918  002E28  9EF2               	bcf	242,7,c	;volatile
  5919  002E2A                     i2l2516:
  5920                           
  5921                           ;circularBuffer.c: 70:     if (theCircularBuffer->readPointer == theCircularBuffer->writ
      +                          ePointer)
  5922  002E2A  EE20 F004          	lfsr	2,4
  5923  002E2E  5001               	movf	circularBuffer_isEmpty@theCircularBuffer^0,w,c
  5924  002E30  26D9               	addwf	fsr2l,f,c
  5925  002E32  5002               	movf	(circularBuffer_isEmpty@theCircularBuffer+1)^0,w,c
  5926  002E34  22DA               	addwfc	fsr2h,f,c
  5927  002E36  EE10 F003          	lfsr	1,3
  5928  002E3A  5001               	movf	circularBuffer_isEmpty@theCircularBuffer^0,w,c
  5929  002E3C  26E1               	addwf	fsr1l,f,c
  5930  002E3E  5002               	movf	(circularBuffer_isEmpty@theCircularBuffer+1)^0,w,c
  5931  002E40  22E2               	addwfc	fsr1h,f,c
  5932  002E42  50DE               	movf	postinc2,w,c
  5933  002E44  18E6               	xorwf	postinc1,w,c
  5934  002E46  A4D8               	btfss	status,2,c
  5935  002E48  EF28  F017         	goto	i2u269_41
  5936  002E4C  EF2A  F017         	goto	i2u269_40
  5937  002E50                     i2u269_41:
  5938  002E50  EF36  F017         	goto	i2l2528
  5939  002E54                     i2u269_40:
  5940  002E54                     
  5941                           ;circularBuffer.c: 71:     {;circularBuffer.c: 73:         if(gieSet) INTCONbits.GIE = 1
      +                          ;
  5942  002E54  5005               	movf	circularBuffer_isEmpty@gieSet^0,w,c
  5943  002E56  B4D8               	btfsc	status,2,c
  5944  002E58  EF30  F017         	goto	i2u270_41
  5945  002E5C  EF32  F017         	goto	i2u270_40
  5946  002E60                     i2u270_41:
  5947  002E60  EF33  F017         	goto	i2l2522
  5948  002E64                     i2u270_40:
  5949  002E64  8EF2               	bsf	242,7,c	;volatile
  5950  002E66                     i2l2522:
  5951                           
  5952                           ;circularBuffer.c: 74:         return 1;
  5953  002E66  0E01               	movlw	1
  5954  002E68  EF40  F017         	goto	i2l218
  5955  002E6C                     i2l2528:
  5956                           
  5957                           ;circularBuffer.c: 77:         if(gieSet) INTCONbits.GIE = 1;
  5958  002E6C  5005               	movf	circularBuffer_isEmpty@gieSet^0,w,c
  5959  002E6E  B4D8               	btfsc	status,2,c
  5960  002E70  EF3C  F017         	goto	i2u271_41
  5961  002E74  EF3E  F017         	goto	i2u271_40
  5962  002E78                     i2u271_41:
  5963  002E78  EF3F  F017         	goto	i2l2532
  5964  002E7C                     i2u271_40:
  5965  002E7C  8EF2               	bsf	242,7,c	;volatile
  5966  002E7E                     i2l2532:
  5967                           
  5968                           ;circularBuffer.c: 78:         return 0;
  5969  002E7E  0E00               	movlw	0
  5970  002E80                     i2l218:
  5971  002E80  0012               	return		;funcret
  5972  002E82                     __end_of_circularBuffer_isEmpty:
  5973                           	callstack 0
  5974                           
  5975 ;; *************** function _uart_rxInterrupt *****************
  5976 ;; Defined at:
  5977 ;;		line 225 in file "uart.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;		None
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;		None
  5982 ;; Return value:  Size  Location     Type
  5983 ;;                  1    wreg      void 
  5984 ;; Registers used:
  5985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5986 ;; Tracked objects:
  5987 ;;		On entry : 0/0
  5988 ;;		On exit  : 0/0
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5995 ;;Total ram usage:        0 bytes
  5996 ;; Hardware stack levels used:    1
  5997 ;; Hardware stack levels required when called:    1
  5998 ;; This function calls:
  5999 ;;		i2_circularBuffer_write
  6000 ;; This function is called by:
  6001 ;;		_theInterrupt
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text33
  6006  003174                     __ptext33:
  6007                           	callstack 0
  6008  003174                     _uart_rxInterrupt:
  6009                           	callstack 24
  6010  003174                     
  6011                           ;uart.c: 227:     circularBuffer_write(&rxBuffer, RCREG1);
  6012  003174  0E4A               	movlw	low _rxBuffer
  6013  003176  6E01               	movwf	i2circularBuffer_write@theCircularBuffer^0,c
  6014  003178  0E00               	movlw	high _rxBuffer
  6015  00317A  6E02               	movwf	(i2circularBuffer_write@theCircularBuffer+1)^0,c
  6016  00317C  CFAE F003          	movff	4014,i2circularBuffer_write@toWrite	;volatile
  6017  003180  EC0C  F00F         	call	i2_circularBuffer_write	;wreg free
  6018  003184  0012               	return		;funcret
  6019  003186                     __end_of_uart_rxInterrupt:
  6020                           	callstack 0
  6021                           
  6022 ;; *************** function i2_circularBuffer_write *****************
  6023 ;; Defined at:
  6024 ;;		line 13 in file "circularBuffer.c"
  6025 ;; Parameters:    Size  Location     Type
  6026 ;;  theCircularB    2    0[COMRAM] PTR volatile struct .
  6027 ;;		 -> txBuffer(5), rxBuffer(5), 
  6028 ;;  toWrite         1    2[COMRAM] unsigned char 
  6029 ;; Auto vars:     Size  Location     Type
  6030 ;;  gieSet          1    9[COMRAM] unsigned char 
  6031 ;; Return value:  Size  Location     Type
  6032 ;;                  1    wreg      unsigned char 
  6033 ;; Registers used:
  6034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6035 ;; Tracked objects:
  6036 ;;		On entry : 0/0
  6037 ;;		On exit  : 0/0
  6038 ;;		Unchanged: 0/0
  6039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6040 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6041 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6042 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6043 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6044 ;;Total ram usage:       10 bytes
  6045 ;; Hardware stack levels used:    1
  6046 ;; This function calls:
  6047 ;;		Nothing
  6048 ;; This function is called by:
  6049 ;;		_uart_rxInterrupt
  6050 ;;		i2_uart_putc
  6051 ;; This function uses a non-reentrant model
  6052 ;;
  6053                           
  6054                           	psect	text34
  6055  001E18                     __ptext34:
  6056                           	callstack 0
  6057  001E18                     i2_circularBuffer_write:
  6058                           	callstack 23
  6059  001E18                     
  6060                           ;circularBuffer.c: 13: uint8_t circularBuffer_write(volatile CircularBuffer* theCircular
      +                          Buffer, uint8_t toWrite);circularBuffer.c: 14: {;circularBuffer.c: 15:     uint8_t gieSe
      +                          t = 0;
  6061  001E18  0E00               	movlw	0
  6062  001E1A  6E0A               	movwf	i2circularBuffer_write@gieSet^0,c
  6063  001E1C                     
  6064                           ;circularBuffer.c: 16:     if(INTCONbits.GIE == 1)
  6065  001E1C  AEF2               	btfss	242,7,c	;volatile
  6066  001E1E  EF13  F00F         	goto	i2u250_41
  6067  001E22  EF15  F00F         	goto	i2u250_40
  6068  001E26                     i2u250_41:
  6069  001E26  EF18  F00F         	goto	i2l2414
  6070  001E2A                     i2u250_40:
  6071  001E2A                     
  6072                           ;circularBuffer.c: 17:     {;circularBuffer.c: 18:         gieSet = 1;
  6073  001E2A  0E01               	movlw	1
  6074  001E2C  6E0A               	movwf	i2circularBuffer_write@gieSet^0,c
  6075  001E2E                     
  6076                           ;circularBuffer.c: 19:         INTCONbits.GIE = 0;
  6077  001E2E  9EF2               	bcf	242,7,c	;volatile
  6078  001E30                     i2l2414:
  6079                           
  6080                           ;circularBuffer.c: 21:     if (((theCircularBuffer->readPointer == 0) && (theCircularBuf
      +                          fer->writePointer == theCircularBuffer->size-1)) || (theCircularBuffer->writePointer == 
      +                          theCircularBuffer->readPointer-1) )
  6081  001E30  EE20 F003          	lfsr	2,3
  6082  001E34  5001               	movf	i2circularBuffer_write@theCircularBuffer^0,w,c
  6083  001E36  26D9               	addwf	fsr2l,f,c
  6084  001E38  5002               	movf	(i2circularBuffer_write@theCircularBuffer+1)^0,w,c
  6085  001E3A  22DA               	addwfc	fsr2h,f,c
  6086  001E3C  50DF               	movf	indf2,w,c
  6087  001E3E  A4D8               	btfss	status,2,c
  6088  001E40  EF24  F00F         	goto	i2u251_41
  6089  001E44  EF26  F00F         	goto	i2u251_40
  6090  001E48                     i2u251_41:
  6091  001E48  EF4C  F00F         	goto	i2l2418
  6092  001E4C                     i2u251_40:
  6093  001E4C  EE20 F004          	lfsr	2,4
  6094  001E50  5001               	movf	i2circularBuffer_write@theCircularBuffer^0,w,c
  6095  001E52  26D9               	addwf	fsr2l,f,c
  6096  001E54  5002               	movf	(i2circularBuffer_write@theCircularBuffer+1)^0,w,c
  6097  001E56  22DA               	addwfc	fsr2h,f,c
  6098  001E58  50DF               	movf	indf2,w,c
  6099  001E5A  6E04               	movwf	??i2_circularBuffer_write^0,c
  6100  001E5C  6A05               	clrf	(??i2_circularBuffer_write+1)^0,c
  6101  001E5E  0EFF               	movlw	255
  6102  001E60  6E06               	movwf	(??i2_circularBuffer_write+2)^0,c
  6103  001E62  0EFF               	movlw	255
  6104  001E64  6E07               	movwf	(??i2_circularBuffer_write+3)^0,c
  6105  001E66  EE20 F002          	lfsr	2,2
  6106  001E6A  5001               	movf	i2circularBuffer_write@theCircularBuffer^0,w,c
  6107  001E6C  26D9               	addwf	fsr2l,f,c
  6108  001E6E  5002               	movf	(i2circularBuffer_write@theCircularBuffer+1)^0,w,c
  6109  001E70  22DA               	addwfc	fsr2h,f,c
  6110  001E72  50DF               	movf	indf2,w,c
  6111  001E74  6E08               	movwf	(??i2_circularBuffer_write+4)^0,c
  6112  001E76  6A09               	clrf	(??i2_circularBuffer_write+5)^0,c
  6113  001E78  5006               	movf	(??i2_circularBuffer_write+2)^0,w,c
  6114  001E7A  2608               	addwf	(??i2_circularBuffer_write+4)^0,f,c
  6115  001E7C  5007               	movf	(??i2_circularBuffer_write+3)^0,w,c
  6116  001E7E  2209               	addwfc	(??i2_circularBuffer_write+5)^0,f,c
  6117  001E80  5004               	movf	??i2_circularBuffer_write^0,w,c
  6118  001E82  1808               	xorwf	(??i2_circularBuffer_write+4)^0,w,c
  6119  001E84  E109               	bnz	i2u252_40
  6120  001E86  5005               	movf	(??i2_circularBuffer_write+1)^0,w,c
  6121  001E88  1809               	xorwf	(??i2_circularBuffer_write+5)^0,w,c
  6122  001E8A  B4D8               	btfsc	status,2,c
  6123  001E8C  EF4A  F00F         	goto	i2u252_41
  6124  001E90  EF4C  F00F         	goto	i2u252_40
  6125  001E94                     i2u252_41:
  6126  001E94  EF72  F00F         	goto	i2l2420
  6127  001E98                     i2u252_40:
  6128  001E98                     i2l2418:
  6129  001E98  EE20 F004          	lfsr	2,4
  6130  001E9C  5001               	movf	i2circularBuffer_write@theCircularBuffer^0,w,c
  6131  001E9E  26D9               	addwf	fsr2l,f,c
  6132  001EA0  5002               	movf	(i2circularBuffer_write@theCircularBuffer+1)^0,w,c
  6133  001EA2  22DA               	addwfc	fsr2h,f,c
  6134  001EA4  50DF               	movf	indf2,w,c
  6135  001EA6  6E04               	movwf	??i2_circularBuffer_write^0,c
  6136  001EA8  6A05               	clrf	(??i2_circularBuffer_write+1)^0,c
  6137  001EAA  0EFF               	movlw	255
  6138  001EAC  6E06               	movwf	(??i2_circularBuffer_write+2)^0,c
  6139  001EAE  0EFF               	movlw	255
  6140  001EB0  6E07               	movwf	(??i2_circularBuffer_write+3)^0,c
  6141  001EB2  EE20 F003          	lfsr	2,3
  6142  001EB6  5001               	movf	i2circularBuffer_write@theCircularBuffer^0,w,c
  6143  001EB8  26D9               	addwf	fsr2l,f,c
  6144  001EBA  5002               	movf	(i2circularBuffer_write@theCircularBuffer+1)^0,w,c
  6145  001EBC  22DA               	addwfc	fsr2h,f,c
  6146  001EBE  50DF               	movf	indf2,w,c
  6147  001EC0  6E08               	movwf	(??i2_circularBuffer_write+4)^0,c
  6148  001EC2  6A09               	clrf	(??i2_circularBuffer_write+5)^0,c
  6149  001EC4  5006               	movf	(??i2_circularBuffer_write+2)^0,w,c
  6150  001EC6  2608               	addwf	(??i2_circularBuffer_write+4)^0,f,c
  6151  001EC8  5007               	movf	(??i2_circularBuffer_write+3)^0,w,c
  6152  001ECA  2209               	addwfc	(??i2_circularBuffer_write+5)^0,f,c
  6153  001ECC  5004               	movf	??i2_circularBuffer_write^0,w,c
  6154  001ECE  1808               	xorwf	(??i2_circularBuffer_write+4)^0,w,c
  6155  001ED0  E107               	bnz	i2u253_41
  6156  001ED2  5005               	movf	(??i2_circularBuffer_write+1)^0,w,c
  6157  001ED4  1809               	xorwf	(??i2_circularBuffer_write+5)^0,w,c
  6158  001ED6  A4D8               	btfss	status,2,c
  6159  001ED8  EF70  F00F         	goto	i2u253_41
  6160  001EDC  EF72  F00F         	goto	i2u253_40
  6161  001EE0                     i2u253_41:
  6162  001EE0  EF7D  F00F         	goto	i2l2426
  6163  001EE4                     i2u253_40:
  6164  001EE4                     i2l2420:
  6165                           
  6166                           ;circularBuffer.c: 22:     {;circularBuffer.c: 24:         if(gieSet) INTCONbits.GIE = 1
      +                          ;
  6167  001EE4  500A               	movf	i2circularBuffer_write@gieSet^0,w,c
  6168  001EE6  B4D8               	btfsc	status,2,c
  6169  001EE8  EF78  F00F         	goto	i2u254_41
  6170  001EEC  EF7A  F00F         	goto	i2u254_40
  6171  001EF0                     i2u254_41:
  6172  001EF0  EFC2  F00F         	goto	i2l200
  6173  001EF4                     i2u254_40:
  6174  001EF4  8EF2               	bsf	242,7,c	;volatile
  6175  001EF6  EFC2  F00F         	goto	i2l200
  6176  001EFA                     i2l2426:
  6177                           
  6178                           ;circularBuffer.c: 27:         theCircularBuffer->buffer[theCircularBuffer->writePointer
      +                          ++] = toWrite;
  6179  001EFA  EE20 F004          	lfsr	2,4
  6180  001EFE  5001               	movf	i2circularBuffer_write@theCircularBuffer^0,w,c
  6181  001F00  26D9               	addwf	fsr2l,f,c
  6182  001F02  5002               	movf	(i2circularBuffer_write@theCircularBuffer+1)^0,w,c
  6183  001F04  22DA               	addwfc	fsr2h,f,c
  6184  001F06  50DF               	movf	indf2,w,c
  6185  001F08  6E04               	movwf	??i2_circularBuffer_write^0,c
  6186  001F0A  C001  FFD9         	movff	i2circularBuffer_write@theCircularBuffer,fsr2l
  6187  001F0E  C002  FFDA         	movff	i2circularBuffer_write@theCircularBuffer+1,fsr2h
  6188  001F12  CFDE F005          	movff	postinc2,??i2_circularBuffer_write+1
  6189  001F16  CFDD F006          	movff	postdec2,??i2_circularBuffer_write+2
  6190  001F1A  5004               	movf	??i2_circularBuffer_write^0,w,c
  6191  001F1C  2405               	addwf	(??i2_circularBuffer_write+1)^0,w,c
  6192  001F1E  6ED9               	movwf	fsr2l,c
  6193  001F20  0E00               	movlw	0
  6194  001F22  2006               	addwfc	(??i2_circularBuffer_write+2)^0,w,c
  6195  001F24  6EDA               	movwf	fsr2h,c
  6196  001F26  C003  FFDF         	movff	i2circularBuffer_write@toWrite,indf2
  6197  001F2A  EE20 F004          	lfsr	2,4
  6198  001F2E  5001               	movf	i2circularBuffer_write@theCircularBuffer^0,w,c
  6199  001F30  26D9               	addwf	fsr2l,f,c
  6200  001F32  5002               	movf	(i2circularBuffer_write@theCircularBuffer+1)^0,w,c
  6201  001F34  22DA               	addwfc	fsr2h,f,c
  6202  001F36  2ADF               	incf	indf2,f,c
  6203  001F38                     
  6204                           ;circularBuffer.c: 28:         if (theCircularBuffer->writePointer == theCircularBuffer-
      +                          >size)
  6205  001F38  EE20 F002          	lfsr	2,2
  6206  001F3C  5001               	movf	i2circularBuffer_write@theCircularBuffer^0,w,c
  6207  001F3E  26D9               	addwf	fsr2l,f,c
  6208  001F40  5002               	movf	(i2circularBuffer_write@theCircularBuffer+1)^0,w,c
  6209  001F42  22DA               	addwfc	fsr2h,f,c
  6210  001F44  EE10 F004          	lfsr	1,4
  6211  001F48  5001               	movf	i2circularBuffer_write@theCircularBuffer^0,w,c
  6212  001F4A  26E1               	addwf	fsr1l,f,c
  6213  001F4C  5002               	movf	(i2circularBuffer_write@theCircularBuffer+1)^0,w,c
  6214  001F4E  22E2               	addwfc	fsr1h,f,c
  6215  001F50  50DE               	movf	postinc2,w,c
  6216  001F52  18E6               	xorwf	postinc1,w,c
  6217  001F54  A4D8               	btfss	status,2,c
  6218  001F56  EFAF  F00F         	goto	i2u255_41
  6219  001F5A  EFB1  F00F         	goto	i2u255_40
  6220  001F5E                     i2u255_41:
  6221  001F5E  EFB9  F00F         	goto	i2l2432
  6222  001F62                     i2u255_40:
  6223  001F62                     
  6224                           ;circularBuffer.c: 29:             theCircularBuffer->writePointer = 0;
  6225  001F62  EE20 F004          	lfsr	2,4
  6226  001F66  5001               	movf	i2circularBuffer_write@theCircularBuffer^0,w,c
  6227  001F68  26D9               	addwf	fsr2l,f,c
  6228  001F6A  5002               	movf	(i2circularBuffer_write@theCircularBuffer+1)^0,w,c
  6229  001F6C  22DA               	addwfc	fsr2h,f,c
  6230  001F6E  0E00               	movlw	0
  6231  001F70  6EDF               	movwf	indf2,c
  6232  001F72                     i2l2432:
  6233                           
  6234                           ;circularBuffer.c: 31:         if(gieSet) INTCONbits.GIE = 1;
  6235  001F72  500A               	movf	i2circularBuffer_write@gieSet^0,w,c
  6236  001F74  B4D8               	btfsc	status,2,c
  6237  001F76  EFBF  F00F         	goto	i2u256_41
  6238  001F7A  EFC1  F00F         	goto	i2u256_40
  6239  001F7E                     i2u256_41:
  6240  001F7E  EFC2  F00F         	goto	i2l200
  6241  001F82                     i2u256_40:
  6242  001F82  8EF2               	bsf	242,7,c	;volatile
  6243  001F84                     i2l200:
  6244  001F84  0012               	return		;funcret
  6245  001F86                     __end_ofi2_circularBuffer_write:
  6246                           	callstack 0
  6247                           
  6248                           	psect	rparam
  6249  0000                     
  6250                           	psect	temp
  6251  00004F                     btemp:
  6252                           	callstack 0
  6253  00004F                     	ds	1
  6254  0000                     int$flags	set	btemp
  6255  0000                     wtemp8	set	btemp+1
  6256  0000                     ttemp5	set	btemp+1
  6257  0000                     ttemp6	set	btemp+4
  6258  0000                     ttemp7	set	btemp+8
  6259                           
  6260                           	psect	idloc
  6261                           
  6262                           ;Config register IDLOC0 @ 0x200000
  6263                           ;	unspecified, using default values
  6264  200000                     	org	2097152
  6265  200000  FF                 	db	255
  6266                           
  6267                           ;Config register IDLOC1 @ 0x200001
  6268                           ;	unspecified, using default values
  6269  200001                     	org	2097153
  6270  200001  FF                 	db	255
  6271                           
  6272                           ;Config register IDLOC2 @ 0x200002
  6273                           ;	unspecified, using default values
  6274  200002                     	org	2097154
  6275  200002  FF                 	db	255
  6276                           
  6277                           ;Config register IDLOC3 @ 0x200003
  6278                           ;	unspecified, using default values
  6279  200003                     	org	2097155
  6280  200003  FF                 	db	255
  6281                           
  6282                           ;Config register IDLOC4 @ 0x200004
  6283                           ;	unspecified, using default values
  6284  200004                     	org	2097156
  6285  200004  FF                 	db	255
  6286                           
  6287                           ;Config register IDLOC5 @ 0x200005
  6288                           ;	unspecified, using default values
  6289  200005                     	org	2097157
  6290  200005  FF                 	db	255
  6291                           
  6292                           ;Config register IDLOC6 @ 0x200006
  6293                           ;	unspecified, using default values
  6294  200006                     	org	2097158
  6295  200006  FF                 	db	255
  6296                           
  6297                           ;Config register IDLOC7 @ 0x200007
  6298                           ;	unspecified, using default values
  6299  200007                     	org	2097159
  6300  200007  FF                 	db	255
  6301                           
  6302                           	psect	config
  6303                           
  6304                           ; Padding undefined space
  6305  300000                     	org	3145728
  6306  300000  FF                 	db	255
  6307                           
  6308                           ;Config register CONFIG1H @ 0x300001
  6309                           ;	Oscillator Selection bits
  6310                           ;	OSC = HS, HS oscillator
  6311                           ;	Fail-Safe Clock Monitor Enable bit
  6312                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6313                           ;	Internal/External Oscillator Switchover bit
  6314                           ;	IESO = OFF, Two-Speed Start-up disabled
  6315  300001                     	org	3145729
  6316  300001  02                 	db	2
  6317                           
  6318                           ;Config register CONFIG2L @ 0x300002
  6319                           ;	Power-up Timer Enable bit
  6320                           ;	PWRT = OFF, PWRT disabled
  6321                           ;	Brown-out Reset Enable bits
  6322                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6323                           ;	Brown-out Voltage bits
  6324                           ;	BORV = 3, Minimum setting
  6325  300002                     	org	3145730
  6326  300002  1F                 	db	31
  6327                           
  6328                           ;Config register CONFIG2H @ 0x300003
  6329                           ;	Watchdog Timer
  6330                           ;	WDT = ON, WDT enabled
  6331                           ;	Watchdog Timer Postscale Select bits
  6332                           ;	WDTPS = 32768, 1:32768
  6333  300003                     	org	3145731
  6334  300003  1F                 	db	31
  6335                           
  6336                           ; Padding undefined space
  6337  300004                     	org	3145732
  6338  300004  FF                 	db	255
  6339                           
  6340                           ;Config register CONFIG3H @ 0x300005
  6341                           ;	CCP2 MUX bit
  6342                           ;	CCP2MX = PORTC, ECCP2 input/output is multiplexed with RC1
  6343                           ;	Low-Power Timer1 Oscillator Enable bit
  6344                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6345                           ;	MCLR Pin Enable bit
  6346                           ;	MCLRE = ON, MCLR pin enabled; RG5 input pin disabled
  6347  300005                     	org	3145733
  6348  300005  81                 	db	129
  6349                           
  6350                           ;Config register CONFIG4L @ 0x300006
  6351                           ;	Stack Full/Underflow Reset Enable bit
  6352                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6353                           ;	Single-Supply ICSP Enable bit
  6354                           ;	LVP = ON, Single-Supply ICSP enabled
  6355                           ;	Boot Block Size Select bits
  6356                           ;	BBSIZ = BB2K, 1K word (2 Kbytes) Boot Block size
  6357                           ;	Extended Instruction Set Enable bit
  6358                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6359                           ;	Background Debugger Enable bit
  6360                           ;	DEBUG = 0x1, unprogrammed default
  6361  300006                     	org	3145734
  6362  300006  85                 	db	133
  6363                           
  6364                           ; Padding undefined space
  6365  300007                     	org	3145735
  6366  300007  FF                 	db	255
  6367                           
  6368                           ;Config register CONFIG5L @ 0x300008
  6369                           ;	Code Protection bit Block 0
  6370                           ;	CP0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not code-protected
  6371                           ;	Code Protection bit Block 1
  6372                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  6373                           ;	Code Protection bit Block 2
  6374                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  6375                           ;	Code Protection bit Block 3
  6376                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  6377  300008                     	org	3145736
  6378  300008  FF                 	db	255
  6379                           
  6380                           ;Config register CONFIG5H @ 0x300009
  6381                           ;	Boot Block Code Protection bit
  6382                           ;	CPB = OFF, Boot Block (000000-0007FFh) not code-protected
  6383                           ;	Data EEPROM Code Protection bit
  6384                           ;	CPD = OFF, Data EEPROM not code-protected
  6385  300009                     	org	3145737
  6386  300009  C0                 	db	192
  6387                           
  6388                           ;Config register CONFIG6L @ 0x30000A
  6389                           ;	Write Protection bit Block 0
  6390                           ;	WRT0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not write-protected
  6391                           ;	Write Protection bit Block 1
  6392                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  6393                           ;	Write Protection bit Block 2
  6394                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  6395                           ;	Write Protection bit Block 3
  6396                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  6397  30000A                     	org	3145738
  6398  30000A  FF                 	db	255
  6399                           
  6400                           ;Config register CONFIG6H @ 0x30000B
  6401                           ;	Configuration Register Write Protection bit
  6402                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6403                           ;	Boot Block Write Protection bit
  6404                           ;	WRTB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not write-protected
  6405                           ;	Data EEPROM Write Protection bit
  6406                           ;	WRTD = OFF, Data EEPROM not write-protected
  6407  30000B                     	org	3145739
  6408  30000B  E0                 	db	224
  6409                           
  6410                           ;Config register CONFIG7L @ 0x30000C
  6411                           ;	Table Read Protection bit Block 0
  6412                           ;	EBTR0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not protected from table reads
      +                           executed in other blocks
  6413                           ;	Table Read Protection bit Block 1
  6414                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6415                           ;	Table Read Protection bit Block 2
  6416                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  6417                           ;	Table Read Protection bit Block 3
  6418                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  6419  30000C                     	org	3145740
  6420  30000C  FF                 	db	255
  6421                           
  6422                           ;Config register CONFIG7H @ 0x30000D
  6423                           ;	Boot Block Table Read Protection bit
  6424                           ;	EBTRB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not protected from table re
      +                          ads executed in other blocks
  6425  30000D                     	org	3145741
  6426  30000D  40                 	db	64
  6427                           tosu	equ	0xFFF
  6428                           tosh	equ	0xFFE
  6429                           tosl	equ	0xFFD
  6430                           stkptr	equ	0xFFC
  6431                           pclatu	equ	0xFFB
  6432                           pclath	equ	0xFFA
  6433                           pcl	equ	0xFF9
  6434                           tblptru	equ	0xFF8
  6435                           tblptrh	equ	0xFF7
  6436                           tblptrl	equ	0xFF6
  6437                           tablat	equ	0xFF5
  6438                           prodh	equ	0xFF4
  6439                           prodl	equ	0xFF3
  6440                           indf0	equ	0xFEF
  6441                           postinc0	equ	0xFEE
  6442                           postdec0	equ	0xFED
  6443                           preinc0	equ	0xFEC
  6444                           plusw0	equ	0xFEB
  6445                           fsr0h	equ	0xFEA
  6446                           fsr0l	equ	0xFE9
  6447                           wreg	equ	0xFE8
  6448                           indf1	equ	0xFE7
  6449                           postinc1	equ	0xFE6
  6450                           postdec1	equ	0xFE5
  6451                           preinc1	equ	0xFE4
  6452                           plusw1	equ	0xFE3
  6453                           fsr1h	equ	0xFE2
  6454                           fsr1l	equ	0xFE1
  6455                           bsr	equ	0xFE0
  6456                           indf2	equ	0xFDF
  6457                           postinc2	equ	0xFDE
  6458                           postdec2	equ	0xFDD
  6459                           preinc2	equ	0xFDC
  6460                           plusw2	equ	0xFDB
  6461                           fsr2h	equ	0xFDA
  6462                           fsr2l	equ	0xFD9
  6463                           status	equ	0xFD8

Data Sizes:
    Strings     70
    Constant    0
    Data        0
    BSS         91
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     51      78
    BANK0           160     14      78
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    circularBuffer_isFull@theCircularBuffer.buffer	PTR volatile unsigned char  size(2) Largest target is 64
		 -> txBufferMemory(BANK0[64]), rxBufferMemory(COMRAM[16]), 

    circularBuffer_isFull@theCircularBuffer	PTR volatile struct . size(2) Largest target is 6
		 -> txBuffer(COMRAM[5]), 

    circularBuffer_isEmpty@theCircularBuffer.buffer	PTR volatile unsigned char  size(2) Largest target is 64
		 -> txBufferMemory(BANK0[64]), rxBufferMemory(COMRAM[16]), 

    circularBuffer_isEmpty@theCircularBuffer	PTR volatile struct . size(2) Largest target is 6
		 -> txBuffer(COMRAM[5]), rxBuffer(COMRAM[5]), 

    circularBuffer_read@toRead	PTR unsigned char  size(2) Largest target is 1
		 -> uart_txInterrupt@txChar(COMRAM[1]), main@rxChar(BANK0[1]), 

    circularBuffer_read@theCircularBuffer.buffer	PTR volatile unsigned char  size(2) Largest target is 64
		 -> txBufferMemory(BANK0[64]), rxBufferMemory(COMRAM[16]), 

    circularBuffer_read@theCircularBuffer	PTR volatile struct . size(2) Largest target is 6
		 -> txBuffer(COMRAM[5]), rxBuffer(COMRAM[5]), 

    circularBuffer_write@theCircularBuffer.buffer	PTR volatile unsigned char  size(2) Largest target is 64
		 -> txBufferMemory(BANK0[64]), rxBufferMemory(COMRAM[16]), 

    circularBuffer_write@theCircularBuffer	PTR volatile struct . size(2) Largest target is 6
		 -> txBuffer(COMRAM[5]), rxBuffer(COMRAM[5]), 

    circularBuffer_init@theCircularBuffer.buffer	PTR volatile unsigned char  size(2) Largest target is 64
		 -> txBufferMemory(BANK0[64]), rxBufferMemory(COMRAM[16]), 

    circularBuffer_init@theBuffer	PTR volatile unsigned char  size(2) Largest target is 64
		 -> txBufferMemory(BANK0[64]), rxBufferMemory(COMRAM[16]), 

    circularBuffer_init@theCircularBuffer	PTR volatile struct . size(2) Largest target is 6
		 -> txBuffer(COMRAM[5]), rxBuffer(COMRAM[5]), 

    uart_println@a	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_12(CODE[1]), STR_11(CODE[1]), STR_10(CODE[1]), STR_9(CODE[1]), 
		 -> STR_8(CODE[1]), STR_7(CODE[1]), STR_6(CODE[1]), STR_5(CODE[1]), 
		 -> STR_4(CODE[1]), STR_3(CODE[28]), STR_1(CODE[25]), 

    uart_print@a	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_12(CODE[1]), STR_11(CODE[1]), STR_10(CODE[1]), STR_9(CODE[1]), 
		 -> STR_8(CODE[1]), STR_7(CODE[1]), STR_6(CODE[1]), STR_5(CODE[1]), 
		 -> STR_4(CODE[1]), STR_3(CODE[28]), STR_2(CODE[17]), STR_1(CODE[25]), 

    uart_testAndGetc@c	PTR unsigned char  size(2) Largest target is 1
		 -> main@rxChar(BANK0[1]), 

    txBuffer.buffer	PTR volatile unsigned char  size(2) Largest target is 64
		 -> txBufferMemory(BANK0[64]), rxBufferMemory(COMRAM[16]), 

    S244$buffer	PTR volatile unsigned char  size(2) Largest target is 64
		 -> txBufferMemory(BANK0[64]), rxBufferMemory(COMRAM[16]), 

    rxBuffer.buffer	PTR volatile unsigned char  size(2) Largest target is 64
		 -> txBufferMemory(BANK0[64]), rxBufferMemory(COMRAM[16]), 


Critical Paths under _main in COMRAM

    _main->_uart_printFloat
    _uart_testAndGetc->_circularBuffer_read
    _uart_println->_uart_print
    _uart_print->_uart_putc
    _uart_newline->_uart_putc
    _uart_printUint8->___awdiv
    ___awdiv->___awmod
    _uart_printFloat->___flsub
    _uart_printInt32->___aldiv
    ___aldiv->___almod
    ___xxtofl->___fltol
    ___flsub->___xxtofl
    _uart_printByteHex->_uart_putc
    _uart_printByteBinary->_uart_putc
    _uart_putc->_circularBuffer_write
    _uart_init->___lldiv

Critical Paths under _theInterrupt in COMRAM

    _theInterrupt->_uart_txInterrupt
    _uart_txInterrupt->i2_uart_putc
    i2_uart_putc->i2_circularBuffer_write
    _uart_rxInterrupt->i2_circularBuffer_write

Critical Paths under _main in BANK0

    _main->_uart_printFloat
    _uart_printFloat->_uart_printInt32

Critical Paths under _theInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _theInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _theInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _theInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _theInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _theInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _theInterrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _theInterrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _theInterrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _theInterrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _theInterrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _theInterrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _theInterrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _theInterrupt in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _theInterrupt in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _theInterrupt in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   34865
                                             13 BANK0      1     1      0
                          _uart_init
                         _uart_print
               _uart_printByteBinary
                  _uart_printByteHex
                    _uart_printFloat
                    _uart_printInt32
                    _uart_printUint8
                       _uart_println
                          _uart_putc
                   _uart_testAndGetc
 ---------------------------------------------------------------------------------
 (1) _uart_testAndGetc                                     2     0      2     851
                                             24 COMRAM     2     0      2
                _circularBuffer_read
 ---------------------------------------------------------------------------------
 (2) _circularBuffer_read                                  8     4      4     730
                                             16 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _uart_println                                         2     0      2    3901
                                             32 COMRAM     2     0      2
                       _uart_newline
                         _uart_print
 ---------------------------------------------------------------------------------
 (2) _uart_print                                           5     3      2    1595
                                             27 COMRAM     5     3      2
                          _uart_putc
 ---------------------------------------------------------------------------------
 (2) _uart_newline                                         0     0      0    1285
                          _uart_putc
 ---------------------------------------------------------------------------------
 (1) _uart_printUint8                                      2     2      0    3807
                                             30 COMRAM     2     2      0
                            ___awdiv
                            ___awmod
                          _uart_putc
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1165
                                             22 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _uart_printFloat                                      8     3      5   14632
                                             48 COMRAM     3     3      0
                                              8 BANK0      5     0      5
                            ___awmod
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                    _uart_printInt32
                          _uart_putc
 ---------------------------------------------------------------------------------
 (1) _uart_printInt32                                     13     9      4    4176
                                             40 COMRAM     5     1      4
                                              0 BANK0      8     8      0
                            ___aldiv
                            ___almod
                            ___fltol (ARG)
                             ___lmul
                          _uart_putc
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     636
                                             16 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     613
                                             16 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     985
                                             26 COMRAM    14     6      8
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     566
                                             26 COMRAM    14    10      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     607
                                             16 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3647
                                             40 COMRAM     8     0      8
                            ___fladd
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3262
                                             16 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2693
                                             16 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     973
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _uart_printByteHex                                    2     2      0    1471
                                             27 COMRAM     2     2      0
                          _uart_putc
 ---------------------------------------------------------------------------------
 (1) _uart_printByteBinary                                 4     4      0    1415
                                             27 COMRAM     4     4      0
                          _uart_putc
 ---------------------------------------------------------------------------------
 (1) _uart_putc                                            1     1      0    1285
                                             26 COMRAM     1     1      0
              _circularBuffer_isFull
               _circularBuffer_write
 ---------------------------------------------------------------------------------
 (2) _circularBuffer_write                                10     7      3     910
                                             16 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (2) _circularBuffer_isFull                                9     7      2     313
                                             16 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _uart_init                                           10     6      4    1646
                                             29 COMRAM    10     6      4
                            ___lldiv
                _circularBuffer_init
 ---------------------------------------------------------------------------------
 (2) _circularBuffer_init                                  5     0      5     726
                                             16 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     601
                                             16 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _theInterrupt                                         4     4      0    1892
                                             12 COMRAM     4     4      0
                   _uart_rxInterrupt
                   _uart_txInterrupt
 ---------------------------------------------------------------------------------
 (6) _uart_txInterrupt                                     1     1      0    1478
                                             11 COMRAM     1     1      0
             _circularBuffer_isEmpty
              i2_circularBuffer_read
                        i2_uart_putc
 ---------------------------------------------------------------------------------
 (7) i2_uart_putc                                          1     1      0     640
                                             10 COMRAM     1     1      0
            i2_circularBuffer_isFull
             i2_circularBuffer_write
 ---------------------------------------------------------------------------------
 (8) i2_circularBuffer_isFull                              9     7      2     182
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (7) i2_circularBuffer_read                                8     4      4     510
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _circularBuffer_isEmpty                               5     3      2     242
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _uart_rxInterrupt                                     0     0      0     414
             i2_circularBuffer_write
 ---------------------------------------------------------------------------------
 (8) i2_circularBuffer_write                              10     7      3     414
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _uart_init
     ___lldiv
     _circularBuffer_init
   _uart_print
     _uart_putc
       _circularBuffer_isFull
       _circularBuffer_write
   _uart_printByteBinary
     _uart_putc
       _circularBuffer_isFull
       _circularBuffer_write
   _uart_printByteHex
     _uart_putc
       _circularBuffer_isFull
       _circularBuffer_write
   _uart_printFloat
     ___awmod
     ___flmul
     ___flsub
       ___fladd
       ___fltol (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___fltol
     ___xxtofl
       ___fltol (ARG)
     _uart_printInt32
       ___aldiv
         ___almod (ARG)
       ___almod
       ___fltol (ARG)
       ___lmul (ARG)
       _uart_putc (ARG)
         _circularBuffer_isFull
         _circularBuffer_write
     _uart_putc
       _circularBuffer_isFull
       _circularBuffer_write
   _uart_printInt32
     ___aldiv
       ___almod (ARG)
     ___almod
     ___fltol (ARG)
     ___lmul (ARG)
     _uart_putc (ARG)
       _circularBuffer_isFull
       _circularBuffer_write
   _uart_printUint8
     ___awdiv
       ___awmod (ARG)
     ___awmod
     _uart_putc
       _circularBuffer_isFull
       _circularBuffer_write
   _uart_println
     _uart_newline
       _uart_putc
         _circularBuffer_isFull
         _circularBuffer_write
     _uart_print
       _uart_putc
         _circularBuffer_isFull
         _circularBuffer_write
   _uart_putc
     _circularBuffer_isFull
     _circularBuffer_write
   _uart_testAndGetc
     _circularBuffer_read

 _theInterrupt (ROOT)
   _uart_rxInterrupt
     i2_circularBuffer_write
   _uart_txInterrupt
     _circularBuffer_isEmpty
     i2_circularBuffer_read
     i2_uart_putc
       i2_circularBuffer_isFull
       i2_circularBuffer_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      E      4E       5       48.8%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     33      4E       1       83.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9C      32        0.0%
DATA                 0      0      9C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Nov 21 04:46:51 2020

             circularBuffer_write@toWrite 0013                    uart_txInterrupt@txChar 000C  
                                      l94 235E                                        l96 2366  
                                      l97 236C                              ___awdiv@sign 001C  
                  ?_circularBuffer_isFull 0011                  __size_of_uart_printInt32 01C0  
                __size_of_uart_printFloat 015A                                       l200 1E16  
                                     l104 3160                                       l122 2FAA  
                                     l115 2F62                                       l131 3192  
                                     l117 2F70                                       l230 28C4  
                                     l134 3172                                       l152 2F4E  
                                     l320 26C4                                       l128 3056  
                                     l145 2B7E                                       l209 2494  
                                     l170 1AF0                                       l252 2EDA  
                                     l333 2AAA                                       l253 2EEA  
                                     l190 30DE                                       l159 2E10  
                                     l177 20DE                                       l275 2D96  
                                     l268 2D86                                       l472 2C42  
                                     l538 27CA                                       l811 309C  
                                     l485 2CF2                                       l910 1C3C  
                                     l903 1BE0                                       l770 1224  
                                     l771 11EA                                       l862 17C2  
                                     l855 15CC                                       l872 18F2  
                                     l864 183A                                       l865 1828  
                                     l769 1236                                       l786 1350  
                                     l778 1506                                       l859 1930  
                                     l795 1420                                       l796 140E  
                                     l896 1B48                                       l899 1CA4  
                __size_of_uart_printUint8 00D4                       __end_ofi2_uart_putc 3008  
                            ___awmod@sign 0016                                       wreg 000FE8  
                            ___flmul@aexp 001E                              ___flmul@bexp 0023  
                __end_of_uart_rxInterrupt 3186                              ___flmul@sign 001D  
                            ___flmul@temp 0028                              ___flmul@prod 0024  
                 ?_circularBuffer_isEmpty 0001                  __end_of_uart_testAndGetc 3162  
                            ___fltol@exp1 001A                                      l3200 1DC8  
                                    l4000 2B3A                                      l3202 1DF2  
                                    l3204 1E02                                      l3220 2F7E  
                                    l3212 2F52                                      l4020 2F3C  
                                    l3300 2A5A                                      l4004 2B6E  
                                    l4100 2180                                      l3150 27E4  
                                    l3142 27CC                                      l3206 1E12  
                                    l3222 2F9A                                      l4022 2F3E  
                                    l4014 2EFE                                      l4006 2EEE  
                                    l4030 2DD4                                      l3310 2A9A  
                                    l3302 2A6A                                      l3230 2EB0  
                                    l4110 21BE                                      l4102 218C  
                                    l3160 28AA                                      l3152 2800  
                                    l3144 27D0                                      l3208 1E14  
                                    l3216 2F74                                      l4016 2F2C  
                                    l4008 2EFA                                      l4032 2DE0  
                                    l4024 2D9A                                      l3400 11E2  
                                    l3320 1064                                      l3240 25DC  
                                    l3304 2A74                                      l3232 2EBA  
                                    l3224 2E82                                      l4040 1F8A  
                                    l4120 221E                                      l4112 21D2  
                                    l4104 2192                                      l3170 28C2  
                                    l3154 284C                                      l3146 27DE  
                                    l3218 2F78                                      l4018 2F36  
                                    l4034 2DF8                                      l4026 2DA6  
                                    l3410 1218                                      l3402 11F8  
                                    l3322 1074                                      l3330 109E  
                                    l3314 1048                                      l3250 2612  
                                    l3242 25E0                                      l3234 25BA  
                                    l3306 2A7A                                      l3226 2E92  
                                    l4050 205E                                      l4042 1FB2  
                                    l4114 21DE                                      l4106 219E  
                                    l3156 2898                                      l3148 27E2  
                                    l3180 1CBC                                      l4036 2E06  
                                    l4028 2DC4                                      l3500 14CA  
                                    l3420 1268                                      l3412 1222  
                                    l3404 1204                                      l3340 10CE  
                                    l3332 10AE                                      l3324 1084  
                                    l3316 1054                                      l3260 2654  
                                    l3252 2628                                      l3244 25EE  
                                    l3236 25BE                                      l3308 2A8A  
                                    l3228 2EA0                                      l4052 2092  
                                    l4044 1FB8                                      l4116 21F8  
                                    l4108 21B2                                      l3158 28A8  
                                    l3166 28B0                                      l3190 1D82  
                                    l3182 1CBE                                      l3174 1CA6  
                                    l3510 14F4                                      l3502 14D8  
                                    l3430 12A4                                      l3422 1278  
                                    l3414 1244                                      l3406 1208  
                                    l3350 110E                                      l3342 10DC  
                                    l3334 10B4                                      l3326 1094  
                                    l3318 1062                                      l3262 2672  
                                    l3254 2630                                      l3270 2694  
                                    l3246 25FE                                      l3238 25CC  
                                    l4054 20AA                                      l4046 2016  
                                    l4038 1F86                                      l4118 2204  
                                    l4070 20F4                                      l3600 2D1A  
                                    l3168 28C0                                      l3192 1D84  
                                    l3184 1CDA                                      l3176 1CAA  
                                    l3512 14F6                                      l3504 14DE  
                                    l3440 12EA                                      l3432 12B2  
                                    l3424 1286                                      l3416 1254  
                                    l3408 1216                                      l3360 1148  
                                    l3352 1110                                      l3344 10DE  
                                    l3336 10C6                                      l3328 1096  
                                    l3272 26A4                                      l3264 2682  
                                    l3256 263C                                      l3248 2602  
                                    l3280 29C4                                      l4048 2026  
                                    l4056 20C4                                      l3520 302C  
                                    l4080 2118                                      l4072 20F6  
                                    l3610 2D64                                      l3602 2D22  
                                    l3186 1D26                                      l3178 1CB8  
                                    l3506 14E0                                      l3450 1366  
                                    l3442 131E                                      l3434 12B4  
                                    l3426 1294                                      l3370 115C  
                                    l3362 114C                                      l3346 10EE  
                                    l3354 1118                                      l3338 10C8  
                                    l3274 26B4                                      l3266 2684  
                                    l3258 264A                                      l3290 2A04  
                                    l3282 29D2                                      l3530 1958  
                                    l3522 302E                                      l4090 2156  
                                    l4082 2130                                      l4074 20F8  
                                    l3612 2D74                                      l3604 2D2E  
                                    l3188 1D72                                      l3700 17A8  
                                    l3620 1514                                      l3508 14E6  
                                    l3460 13A2                                      l3452 1376  
                                    l3444 1320                                      l3436 12BE  
                                    l3428 12A0                                      l3380 1170  
                                    l3372 1160                                      l3364 1150  
                                    l3356 1128                                      l3348 10FE  
                                    l3268 268E                                      l3292 2A1A  
                                    l3284 29E2                                      l3540 1A16  
                                    l3532 1990                                      l3524 1932  
                                    l3516 3008                                      l4092 215C  
                                    l4084 2138                                      l4076 20FA  
                                    l4068 20E0                                      l3614 2D76  
                                    l3606 2D3C                                      l3550 30AE  
                                    l3198 1D8A                                      l3710 17E4  
                                    l3702 17B2                                      l3630 1554  
                                    l3622 1522                                      l3470 13CE  
                                    l3462 13A4                                      l3446 1330  
                                    l3438 12C4                                      l3390 1184  
                                    l3382 1174                                      l3374 1164  
                                    l3366 1154                                      l3358 113A  
                                    l3294 2A22                                      l3286 29E6  
                                    l3278 29C0                                      l3542 1A4A  
                                    l3534 19C4                                      l3526 1944  
                                    l3518 3010                                      l4094 2168  
                                    l4086 2144                                      l4078 20FC  
                                    l3616 2D80                                      l3608 2D46  
                                    l3552 30BE                                      l3800 2C48  
                                    l3720 1856                                      l3712 17F2  
                                    l3704 17C0                                      l3640 1584  
                                    l3632 155A                                      l3624 1524  
                                    l3480 1406                                      l3464 13B2  
                                    l3456 138A                                      l3472 13D0  
                                    l3448 1340                                      l3384 1178  
                                    l3376 1168                                      l3368 1158  
                                    l3392 1188                                      l3296 2A2E  
                                    l3288 29F4                                      l3544 1A9A  
                                    l3528 1952                                      l3560 2380  
                                    l4096 216E                                      l4088 214A  
                                    l3554 30CE                                      l3810 2C78  
                                    l3802 2C56                                      l3730 18C0  
                                    l3722 1864                                      l3714 1820  
                                    l3706 17D2                                      l3650 15BC  
                                    l3642 1586                                      l3634 156A  
                                    l3626 1534                                      l3618 1508  
                                    l3490 1484                                      l3466 13BA  
                                    l3458 1394                                      l3474 13DE  
                                    l3394 118C                                      l3386 117C  
                                    l3378 116C                                      l3298 2A3C  
                                    l3546 1ACE                                      l3538 19EA  
                                    l3570 23F8                                      l3562 2384  
                                    l4098 217A                                      l3548 309E  
                                    l3820 2CBE                                      l3812 2C8A  
                                    l3804 2C5E                                      l3740 1916  
                                    l3732 18DA                                      l3724 188E  
                                    l3708 17E0                                      l3660 160C  
                                    l3652 15DC                                      l3644 1596  
                                    l3636 1570                                      l3628 1544  
                                    l3484 1430                                      l3492 1486  
                                    l3476 13E2                                      l3468 13BE  
                                    l3396 11B6                                      l3388 1180  
                                    l3900 1BD6                                      l3580 2438  
                                    l3572 23FA                                      l3564 2386  
                                    l3556 236E                                      l3830 2CEA  
                                    l3822 2CC6                                      l3814 2C92  
                                    l3806 2C62                                      l3734 18F6  
                                    l3742 191C                                      l3718 184A  
                                    l3726 1892                                      l3670 165C  
                                    l3662 1616                                      l3654 15EC  
                                    l3646 15A6                                      l3638 1576  
                                    l3494 1496                                      l3486 143C  
                                    l3478 13F0                                      l3398 11D2  
                                    l3750 3068                                      l3910 1C4C  
                                    l3902 1C12                                      l3590 2492  
                                    l3582 2446                                      l3566 23B0  
                                    l3558 2372                                      l3824 2CCC  
                                    l3816 2C9A                                      l3808 2C70  
                                    l3744 1920                                      l3736 1906  
                                    l3728 18AC                                      l3680 169E  
                                    l3672 1668                                      l3664 162C  
                                    l3648 15B6                                      l3496 14A6  
                                    l3488 144A                                      l3840 26F0  
                                    l3920 1C94                                      l3912 1C50  
                                    l3904 1C1E                                      l3760 2B9A  
                                    l3584 2470                                      l3568 23E8  
                                    l3818 2CA8                                      l3826 2CD2  
                                    l3738 1914                                      l3690 1700  
                                    l3682 16AE                                      l3674 1676  
                                    l3666 1638                                      l3658 1600  
                                    l3498 14C6                                      l3850 273E  
                                    l3842 271A                                      l3834 26C6  
                                    l3914 1C74                                      l3906 1C2C  
                                    l3770 2BC0                                      l3762 2B9E  
                                    l3754 2B80                                      l3594 3186  
                                    l3586 2480                                      l3578 2400  
                                    l3596 2CF4                                      l3828 2CE2  
                                    l3692 171C                                      l3684 16C8  
                                    l3676 1682                                      l3668 1650  
                                    l3748 3058                                      l3860 276A  
                                    l3844 271C                                      l3836 26DC  
                                    l3916 1C84                                      l3908 1C4A  
                                    l3780 2BF6                                      l3772 2BD2  
                                    l3764 2BAC                                      l3756 2B84  
                                    l3588 2490                                      l3598 2D04  
                                    l3694 1746                                      l3686 16D8  
                                    l3678 1692                                      l3870 279A  
                                    l3846 272C                                      l3918 1C92  
                                    l3782 2C0C                                      l3774 2BDA  
                                    l3790 2C22                                      l3766 2BB4  
                                    l3758 2B92                                      l3960 22B8  
                                    l3696 177C                                      l3688 16F4  
                                    l3872 27AA                                      l3856 2756  
                                    l3848 2730                                      l3880 1B04  
                                    l3792 2C32                                      l3784 2C14  
                                    l3776 2BE2                                      l3768 2BB8  
                                    l3970 234C                                      l3962 22C6  
                                    l3954 2232                                      l3698 178A  
                                    l3874 27BA                                      l3866 277E  
                                    l3858 2760                                      l3890 1B82  
                                    l3882 1B12                                      l3794 2C3A  
                                    l3786 2C16                                      l3778 2BF0  
                                    l3972 2352                                      l3964 22CE  
                                    l3956 2262                                      l3868 278A  
                                    l3892 1B8A                                      l3884 1B58  
                                    l3788 2C1C                                      l3974 2362  
                                    l3966 22E4                                      l3958 2266  
                                    l3798 2C44                                      l3894 1B96  
                                    l3886 1B6E                                      l3878 1AF4  
                                    l3990 2ABE                                      l3982 3162  
                                    l3976 236A                                      l3968 2336  
                                    l3896 1BC8                                      l3984 316E  
                                    l3898 1BCA                                      l3994 2AD4  
                                    l3986 2AAE                                      l3978 314C  
                                    l3996 2AE6                                      l3988 2AB6  
                                    l3998 2B20                                      STR_1 101D  
                                    STR_2 1036                                      STR_3 1001  
                                    STR_4 1046                                      STR_5 1046  
                                    STR_6 1046                                      STR_7 1046  
                                    STR_8 1046                                      STR_9 1046  
                                    u4000 11D0                                      u4010 11F8  
                                    u4011 11F4                                      u4100 1330  
                                    u4020 1216                                      u4101 132C  
                                    u4021 1212                                      u4110 1366  
                                    u4030 1236                                      u4111 1362  
                                    u4031 1232                                      u4200 1430  
                                    u4120 1376                                      u4040 1244  
                                    u5000 2AE6                                      u4201 142C  
                                    u4121 1372                                      u4041 1240  
                                    u5001 2AE2                                      u4210 144A  
                                    u4130 13A2                                      u4050 1254  
                                    u5010 2B20                                      u4211 1446  
                                    u4131 139E                                      u4051 1250  
                                    u5011 2B1C                                      u4220 1484  
                                    u4140 13B2                                      u4060 1286  
                                    u4300 19E6                                      u5020 2B7E  
                                    u4221 1480                                      u4141 13AE  
                                    u4061 1282                                      u4301 19E2  
                                    u5021 2B7A                                      u4230 1496  
                                    u4150 13CE                                      u4070 1294  
                                    u4310 1A12                                      u5110 2118  
                                    u4231 1492                                      u4151 13CA  
                                    u4071 1290                                      u4311 1A0E  
                                    u5111 2114                                      u4400 2D64  
                                    u3600 2800                                      u5040 2F2C  
                                    u4240 14A6                                      u4160 13DE  
                                    u4080 12B2                                      u4320 1AF0  
                                    u4401 2D60                                      u3601 27FC  
                                    u5041 2F28                                      u4241 14A2  
                                    u4161 13DA                                      u4081 12AE  
                                    u4321 1AEC                                      u3610 284C  
                                    u5050 2F4E                                      u5034 2F12  
                                    u4410 1522                                      u4250 14C6  
                                    u4170 13F0                                      u4090 12EA  
                                    u4330 2380                                      u3611 2848  
                                    u5051 2F4A                                      u5035 2F0E  
                                    u4411 151E                                      u4251 14C2  
                                    u4171 13EC                                      u4091 12E6  
                                    u4331 237C                                      u3620 2898  
                                    u3700 1DF2                                      u5060 2DC4  
                                    u4500 17C0                                      u4420 1534  
                                    u4260 14D8                                      u4180 1406  
                                    u4340 23B0                                      u3621 2894  
                                    u3701 1DEE                                      u5061 2DC0  
                                    u4501 17BC                                      u4421 1530  
                                    u4261 14D4                                      u4181 1402  
                                    u4341 23AC                                      u3630 28A8  
                                    u3710 1E12                                      u5070 2DF8  
                                    u4510 17E0                                      u4430 1544  
                                    u4270 14F4                                      u4190 141C  
                                    u4350 23F8                                      u3631 28A4  
                                    u3711 1E0E                                      u5071 2DF4  
                                    u4511 17DC                                      u4431 1540  
                                    u4271 14F0                                      u4191 1418  
                                    u4351 23F4                                      u3640 28C0  
                                    u3720 2F62                                      u4520 17F2  
                                    u4440 1584                                      u3800 264A  
                                    u5080 2026                                      u4600 2B92  
                                    u4280 3056                                      u4360 2470  
                                    u3641 28BC                                      u3721 2F5E  
                                    u4521 17EE                                      u4441 1580  
                                    u3801 2646                                      u5081 2022  
                                    u4601 2B8E                                      u4281 3052  
                                    u4361 246C                                      u3650 1CB8  
                                    u3730 2F70                                      u4530 1820  
                                    u4450 1596                                      u3810 2672  
                                    u4290 1952                                      u5090 20DE  
                                    u4610 2BAC                                      u4370 2490  
                                    u3651 1CB4                                      u3731 2F6C  
                                    u4531 181C                                      u4451 1592  
                                    u3811 266E                                      u4291 194E  
                                    u5091 20DA                                      u4611 2BA8  
                                    u4371 248C                                      u4380 2D1A  
                                    u3660 1CDA                                      u3740 2F9A  
                                    u4700 2CBE                                      u4540 1836  
                                    u4460 15A6                                      u3900 1074  
                                    u3820 26A4                                      u4620 2BD2  
                                    u4381 2D16                                      u3661 1CD6  
                                    u3741 2F96                                      u4701 2CBA  
                                    u4541 1832                                      u4461 15A2  
                                    u3901 1070                                      u3821 26A0  
                                    u4621 2BCE                                      u4390 2D3C  
                                    u3590 27DE                                      u3670 1D26  
                                    u4710 2CE2                                      u4550 184A  
                                    u4470 15DC                                      u3910 1084  
                                    u3830 29D2                                      u3750 2EA0  
                                    u4630 2BF0                                      u4391 2D38  
                                    u3591 27DA                                      u3671 1D22  
                                    u4711 2CDE                                      u4551 1846  
                                    u4471 15D8                                      u3911 1080  
                                    u3831 29CE                                      u3751 2E9C  
                                    u4631 2BEC                                      u3680 1D72  
                                    u4560 1864                                      u4480 15EC  
                                    u3920 10C6                                      u4720 26DC  
                                    u4800 1B12                                      u3840 29F4  
                                    u3760 2EDA                                      u4640 2C0C  
                                    u3681 1D6E                                      u4561 1860  
                                    u4481 15E8                                      u3921 10C2  
                                    u4721 26D8                                      u4801 1B0E  
                                    u3841 29F0                                      u3761 2ED6  
                                    u4641 2C08                                      u3690 1D82  
                                    u4570 18AC                                      u4490 1766  
                                    u3930 10DC                                      u4730 2710  
                                    u4810 1B6E                                      u3770 25CC  
                                    u3850 2A1A                                      u4650 2C32  
                                    u3691 1D7E                                      u4571 18A8  
                                    u3931 10D8                                      u4811 1B6A  
                                    u3771 25C8                                      u3851 2A16  
                                    u4651 2C2E                                      u4660 2C56  
                                    u4580 18DA                                      u3940 10EE  
                                    u4740 273E                                      u4820 1BC4  
                                    u3780 25EE                                      u3860 2A3C  
                                    _RCIF 007CF5                                      u4661 2C52  
                                    u4581 18D6                                      u3941 10EA  
                                    u4741 273A                                      u4821 1BC0  
                                    u3781 25EA                                      u3861 2A38  
                                    u4670 2C70                                      u4590 1914  
                                    u3950 10FE                                      u4750 2752  
                                    u4830 1C0E                                      u3790 2628  
                                    u3870 2A5A                                      u4671 2C6C  
                                    u4591 1910                                      u4495 175C  
                                    u3951 10FA                                      u4751 274E  
                                    u4735 2706                                      u4831 1C0A  
                                    u3791 2624                                      u3871 2A56  
                                    u4680 2C8A                                      u3960 113A  
                                    u4760 277A                                      u4840 1C2C  
                                    u3880 2A8A                                      u4681 2C86  
                                    u3961 1136                                      u4761 2776  
                                    u4841 1C28                                      u3881 2A86  
                                    i2l50 005A                                      u4690 2CA8  
                                    u3970 1148                                      u3890 1062  
                                    u4770 279A                                      u4850 1C3C  
                                    u4691 2CA4                                      u3971 1144  
                                    u3891 105E                                      u4771 2796  
                                    u4851 1C38                                      u3980 11B6  
                                    u4780 27AA                                      u4860 1C4A  
                                    u3981 11B2                                      u4781 27A6  
                                    u4861 1C46                                      u4950 22C6  
                                    u3990 11CE                                      u4870 1C84  
                                    u4790 1B04                                      u4951 22C2  
                                    u3991 11C8                                      u4871 1C80  
                                    u4791 1B00                                      u4960 22E4  
                                    u4880 1C92                                      u4961 22E0  
                                    u4945 2288                                      u4881 1C8E  
                                    u4980 234C                                      u4981 2348  
                                    u4990 2AD0                                      u4975 2306  
                                    u4991 2ACC                    i2_circularBuffer_write 1E18  
                                    _main 20E0                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 004F  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 006E           uart_printFloat@digitsAfterComma 00AC  
                __end_of_uart_txInterrupt 3122                              ___param_bank 000000  
                 i2_circularBuffer_isFull 28C6                             ___fltol@sign1 0019  
                         __end_of___aldiv 26C6                           __end_of___almod 2AAC  
                         __end_of___fladd 1508                                     ?_main 0001  
                         __end_of___awdiv 2C44                                     STR_10 1046  
                                   STR_11 1046                                     STR_12 1046  
                         __end_of___awmod 2CF4                           __end_of___flmul 1932  
                         __end_of___flsub 309E                           __end_of___fltol 27CC  
                                   _CREN1 007D5C                           __end_of___lldiv 2D98  
                         ___awdiv@divisor 0019                                     i2l200 1F84  
                                   i2l122 3006                                     i2l115 2FBE  
                                   i2l117 2FCC                                     i2l230 29BE  
                                   i2l209 25B8                                     i2l218 2E80  
                                   i2l182 3120                                     i2l185 3184  
                                   _OERR1 007D59                           ___awdiv@counter 001B  
                                   _PORTE 000F84                                     _TRMT1 007D61  
                                   _TRISE 000F96            __end_of_circularBuffer_isEmpty 2E82  
                     ___lmul@multiplicand 0015                                     tablat 000FF5  
                                   ttemp5 0050                                     ttemp6 0053  
                                   ttemp7 0057                                     status 000FD8  
                                   wtemp8 0050              circularBuffer_isEmpty@gieSet 0005  
                         __initialization 3122                              __end_of_main 2232  
             __end_of_circularBuffer_init 30E0               __end_of_circularBuffer_read 2496  
            __end_of_uart_printByteBinary 2F50                               i2_uart_putc 2FAC  
                                  ??_main 0034                             __activetblptr 000001  
                       ??_uart_printInt32 002D                         ??_uart_printFloat 0031  
                       ??_uart_printUint8 001F                          ___awdiv@dividend 0017  
          __size_ofi2_circularBuffer_read 0124             __end_ofi2_circularBuffer_read 25BA  
                                  i2l2410 1E2A                                    i2l3050 3174  
                                  i2l2420 1EE4                                    i2l2412 1E2E  
                                  i2l2430 1F62                                    i2l2422 1EF4  
                                  i2l2414 1E30                                    i2l2406 1E18  
                                  i2l2510 2E16                                    i2l2432 1F72  
                                  i2l2416 1E4C                                    i2l2408 1E1C  
                                  i2l2520 2E64                                    i2l2512 2E24  
                                  i2l2440 28D8                                    i2l2434 1F82  
                                  i2l2426 1EFA                                    i2l2418 1E98  
                                  i2l2530 2E7C                                    i2l2522 2E66  
                                  i2l2514 2E28                                    i2l2450 2992  
                                  i2l2442 28DC                                    i2l4130 0048  
                                  i2l4122 001A                                    i2l2428 1F38  
                                  i2l2532 2E7E                                    i2l2516 2E2A  
                                  i2l2508 2E12                                    i2l2452 29A2  
                                  i2l2460 29AA                                    i2l2444 28DE  
                                  i2l2436 28C6                                    i2l4060 30FC  
                                  i2l4132 0056                                    i2l4124 0028  
                                  i2l2518 2E54                                    i2l2462 29BA  
                                  i2l2454 29A4                                    i2l2446 28FA  
                                  i2l2438 28CA                                    i2l4062 3100  
                                  i2l4126 0036                                    i2l2528 2E6C  
                                  i2l2464 29BC                                    i2l2448 2946  
                                  i2l4064 3106                                    i2l4128 003A  
                                  i2l4058 30E0                                    i2l2910 2FD4  
                                  i2l2912 2FDA                                    i2l2904 2FAE  
                                  i2l2914 2FF6                                    i2l2908 2FD0  
                                  i2l3930 24AC                                    i2l3932 24AE  
                                  i2l3924 2496                                    i2l3950 25A6  
                                  i2l3934 24D8                                    i2l3942 2526  
                                  i2l3926 249A                                    i2l3952 25B6  
                                  i2l3944 255E                                    i2l3936 2510  
                                  i2l3928 24A8                                    i2l3946 256C  
                                  i2l3938 2520                                    i2l3948 2596  
                                  _RCREG1 000FAE                                    _RCSTA1 000FAB  
                                  _SPBRG1 000FAF                                    _TXREG1 000FAD  
                        __end_of___xxtofl 1CA6                                    _TXSTA1 000FAC  
                                  ___lmul 2E82                                 ??___aldiv 0023  
                               ??___almod 0019                                 ??___fladd 0019  
                               ??___awdiv 001B                                 ??___awmod 0015  
                               ??___flmul 0019                                 ??___flsub 0031  
                               ??___fltol 0015                                 ??___lldiv 0019  
               ??i2_circularBuffer_isFull 0003                                    clear_0 3128  
                                  clear_1 3134                          ___awdiv@quotient 001D  
                         ___awmod@divisor 0013                           ___awmod@counter 0015  
                    _uart_printInt32$1047 00A0                              __mediumconst 0000  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                            _rxBufferMemory 0035  
                            ___xxtofl@arg 0025                              ___xxtofl@exp 0024  
                            ___xxtofl@val 001B                                __accesstop 0060  
                 __end_of__initialization 313A                             ___rparam_used 000001  
                              ___fltol@f1 0011                            __pcstackCOMRAM 0001  
                 ??_circularBuffer_isFull 0013      circularBuffer_init@theCircularBuffer 0011  
            __end_of_circularBuffer_write 1E18                             ?_theInterrupt 0001  
                  uart_printInt32@modulor 00A4                        uart_printByteHex@a 001D  
                 ?i2_circularBuffer_write 0001                         ?_uart_rxInterrupt 0001  
                       ?_uart_testAndGetc 0019                      _uart_printByteBinary 2EEC  
                              __pbssBANK0 0060                        ??_uart_rxInterrupt 000B  
                      ??_uart_testAndGetc 001B                                   ?___lmul 0011  
                       ?_uart_txInterrupt 0001                        ??_uart_txInterrupt 000C  
                          ___lmul@product 0019                            ??_theInterrupt 000D  
                      __size_of_uart_init 013C                        __size_of_uart_putc 005C  
                               ?___xxtofl 001B            __end_ofi2_circularBuffer_write 1F86  
                   ?_uart_printByteBinary 0001                     uart_printByteBinary@a 001E  
                   uart_printByteBinary@i 001F                                   __Hparam 0000  
                                 __Lparam 0000   circularBuffer_isEmpty@theCircularBuffer 0001  
                  uart_printUint8@divisor 0020                                   ___aldiv 25BA  
                                 ___almod 29C0                                   ___fladd 1048  
                                 ___awdiv 2B80                           __size_of___lmul 006A  
                                 ___awmod 2C44                                   ___flmul 1508  
                                 ___flsub 3058                                   ___fltol 26C6  
                            ?i2_uart_putc 0001                                   ___lldiv 2CF4  
                            __psmallconst 1000                           _uart_printInt32 1932  
                                 __pcinit 3122                           _uart_printFloat 1F86  
                                 __ramtop 1000                           _uart_printUint8 2AAC  
                                 __ptext0 20E0                                   __ptext1 314C  
                                 __ptext2 236E                                   __ptext3 3162  
                                 __ptext4 3008                                   __ptext5 3186  
                                 __ptext6 2AAC                                   __ptext7 2B80  
                                 __ptext8 1F86                                   __ptext9 1932  
               circularBuffer_read@gieSet 0018             i2circularBuffer_isFull@gieSet 0009  
               circularBuffer_read@toRead 0013                                ??___xxtofl 001F  
                        ___awmod@dividend 0011                          ___aldiv@dividend 001B  
                                 _sending 0034                      end_of_initialization 313A  
                    _circularBuffer_write 1CA6                             ?_uart_newline 0001  
                           ?_uart_println 0021                         __end_of_uart_init 236E  
                         ___lldiv@divisor 0015                         __end_of_uart_putc 2FAC  
                         ___lldiv@counter 001D                          ___aldiv@quotient 0025  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                              _uart_print 3008              __size_of_circularBuffer_init 0042  
            __size_of_circularBuffer_read 0128                               ___fladd@grs 0020  
                             uart_print@a 001C                               uart_print@i 0020  
                           ___xxtofl@sign 0023                    ??_uart_printByteBinary 001C  
                          _txBufferMemory 0060                     ?_circularBuffer_write 0011  
                          ??_uart_newline 001C                               ___flmul@grs 001F  
                    __end_of_theInterrupt 006E                     i2_circularBuffer_read 2496  
                          ??_uart_println 0023                                main@rxChar 00AD  
                 __end_of_uart_printInt32 1AF2                   __end_of_uart_printFloat 20E0  
                       uart_testAndGetc@c 0019                   __end_of_uart_printUint8 2B80  
  circularBuffer_isFull@theCircularBuffer 0011  i2circularBuffer_isFull@theCircularBuffer 0001  
                          __end_of___lmul 2EEC            __size_of_circularBuffer_isFull 00FA  
                ??_circularBuffer_isEmpty 0003             __end_of_circularBuffer_isFull 28C6  
                            i2uart_putc@a 000B                       start_initialization 3122  
             circularBuffer_isFull@gieSet 0019                  ?i2_circularBuffer_isFull 0001  
               __size_of_uart_rxInterrupt 0012                 __size_of_uart_testAndGetc 0016  
                                ??___lmul 0019      circularBuffer_read@theCircularBuffer 0011  
  i2circularBuffer_read@theCircularBuffer 0001                               ?_uart_print 001C  
                    __size_ofi2_uart_putc 005C                                 ___fladd@a 0015  
                               ___fladd@b 0011                                 ___flmul@a 0015  
                               ___flmul@b 0011                               __pbssCOMRAM 0034  
                               ___flsub@a 002D                                 ___flsub@b 0029  
                           __pcstackBANK0 00A0                 __size_of_uart_txInterrupt 0042  
                       __size_of___xxtofl 01B4                    ??_circularBuffer_write 0014  
                  ?i2_circularBuffer_read 0001                         _uart_printByteHex 2D98  
                        ?_uart_printInt32 0029                          ?_uart_printFloat 00A8  
                               __pintcode 0008                          ?_uart_printUint8 0001  
                                ?___aldiv 001B                        ?_uart_printByteHex 0001  
                                ?___almod 0011                                  ?___fladd 0011  
                                ?___awdiv 0017                                  ?___awmod 0011  
                                ?___flmul 0011                                  ?___flsub 0029  
                                ?___fltol 0011                                  ?___lldiv 0011  
                        ___almod@dividend 0011           __size_of_circularBuffer_isEmpty 0070  
                    __end_of_uart_newline 3194                       ??_uart_printByteHex 001C  
                             __smallconst 1000                      __end_of_uart_println 3174  
            circularBuffer_init@theBuffer 0013                     __size_of_theInterrupt 0066  
                 circularBuffer_init@size 0015           __end_ofi2_circularBuffer_isFull 29C0  
                         ___aldiv@divisor 001F                           ___aldiv@counter 0023  
                     __size_of_uart_print 0050                 __end_of_uart_printByteHex 2E12  
                     _circularBuffer_init 309E                       _circularBuffer_read 236E  
                                _PIE1bits 000F9D                                  i2u250_40 1E2A  
                                i2u330_40 2FF6                                  i2u250_41 1E26  
                                i2u330_41 2FF2                                  i2u251_40 1E4C  
                                i2u251_41 1E48                                  i2u252_40 1E98  
                                i2u260_40 2992                                  i2u252_41 1E94  
                                i2u260_41 298E                                  i2u253_40 1EE4  
                                i2u261_40 29A2                                  i2u253_41 1EE0  
                                i2u261_41 299E                                  i2u254_40 1EF4  
                                i2u270_40 2E64                                  i2u262_40 29BA  
                                i2u510_40 30FC                                  i2u254_41 1EF0  
                                i2u270_41 2E60                                  i2u262_41 29B6  
                                i2u510_41 30F8                                  i2u255_40 1F62  
                                i2u271_40 2E7C                                  i2u255_41 1F5E  
                                i2u271_41 2E78                                  i2u256_40 1F82  
                                i2u328_40 2FBE                                  i2u512_40 0028  
                                i2u256_41 1F7E                                  i2u328_41 2FBA  
                                i2u512_41 0024                                  i2u257_40 28D8  
                                i2u329_40 2FCC                                  i2u513_40 0036  
                                i2u257_41 28D4                                  i2u329_41 2FC8  
                                i2u513_41 0032                                  _PIR1bits 000F9E  
                                i2u258_40 28FA                                  i2u514_40 0048  
                                i2u258_41 28F6                                  i2u514_41 0044  
                                i2u259_40 2946                                  i2u515_40 0056  
                                i2u259_41 2942                                  i2u515_41 0052  
                                i2u268_40 2E24                                  i2u268_41 2E20  
                                i2u269_40 2E54                                  i2u269_41 2E50  
                                i2u490_40 24D8                                  i2u490_41 24D4  
                                i2u491_40 2520                                  i2u491_41 251C  
                                i2u492_40 2596                                  i2u492_41 2592  
                                i2u493_40 25B6                                  i2u493_41 25B2  
                                i2u489_40 24A8                                  i2u489_41 24A4  
                               _uart_init 2232                                 _uart_putc 2F50  
                              uart_init@a 0026                                uart_putc@a 001B  
                            _theInterrupt 0008                      ?_circularBuffer_init 0011  
                    ?_circularBuffer_read 0011                         ___lmul@multiplier 0011  
                  _circularBuffer_isEmpty 2E12                                  __Hrparam 0000  
                        _uart_rxInterrupt 3174                                  __Lrparam 0000  
                            __Lsmallconst 1000                          _uart_testAndGetc 314C  
                              ?_uart_init 001E                                ?_uart_putc 0001  
                        __size_of___aldiv 010C                          __size_of___almod 00EC  
                        __size_of___fladd 04C0                          __size_of___awdiv 00C4  
                        __size_of___awmod 00B0                          __size_of___flmul 042A  
                        __size_of___flsub 0046                          __size_of___fltol 0106  
                        __size_of___lldiv 00A4                  ??i2_circularBuffer_write 0004  
                        uart_printInt32@a 0029                     ??_circularBuffer_init 0016  
                   ??_circularBuffer_read 0015                          uart_printFloat@a 00A8  
                        uart_printFloat@d 0032                          uart_printFloat@i 0033  
                                ___xxtofl 1AF2                          _uart_txInterrupt 30E0  
                        uart_printUint8@a 001F                                  __ptext10 2E82  
                                __ptext11 29C0                                  __ptext20 2EEC  
                                __ptext12 25BA                                  __ptext21 2F50  
                                __ptext13 1AF2                                  __ptext30 28C6  
                                __ptext22 1CA6                                  __ptext14 26C6  
                                __ptext31 2496                                  __ptext23 27CC  
                                __ptext15 3058                                  __ptext32 2E12  
                                __ptext24 2232                                  __ptext16 1048  
                                __ptext33 3174                                  __ptext25 309E  
                                __ptext17 1508                                  __ptext34 1E18  
                                __ptext26 2CF4                                  __ptext18 2C44  
                                __ptext19 2D98                                  __ptext28 30E0  
                                __ptext29 2FAC                           ___almod@divisor 0015  
           __size_of_uart_printByteBinary 0064                           ___almod@counter 0019  
                           __size_of_main 0152                __size_of_uart_printByteHex 007A  
           i2circularBuffer_write@toWrite 0003                                  _rxBuffer 004A  
                                _txBuffer 0045                     __size_of_uart_newline 000E  
                                int$flags 004F                     __size_of_uart_println 0012  
                            ??_uart_print 001E               i2circularBuffer_read@gieSet 0008  
             i2circularBuffer_read@toRead 0003          __size_ofi2_circularBuffer_isFull 00FA  
                   _circularBuffer_isFull 27CC                                _INTCONbits 000FF2  
                 ??i2_circularBuffer_read 0005                                  intlevel2 0000  
                       uart_init@baudrate 001E                          ___lldiv@dividend 0011  
            i2circularBuffer_write@gieSet 000A                              _uart_newline 3186  
                      __end_of_uart_print 3058                              _uart_println 3162  
                             ??_uart_init 0022                             ??i2_uart_putc 000B  
                             ??_uart_putc 001B           __size_ofi2_circularBuffer_write 016E  
                        ___lldiv@quotient 0019                              ___aldiv@sign 0024  
                           ___fladd@signs 001D                             uart_println@a 0021  
                            ___almod@sign 001A             __size_of_circularBuffer_write 0172  
                            ___fladd@aexp 001E                              ___fladd@bexp 001F  
   circularBuffer_write@theCircularBuffer 0011   i2circularBuffer_write@theCircularBuffer 0001  
              circularBuffer_write@gieSet 001A  
